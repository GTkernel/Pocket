// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yolo.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_yolo_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_yolo_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_yolo_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_yolo_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[58]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_yolo_2eproto;
namespace yolo_tf {
class AddRequest;
class AddRequestDefaultTypeInternal;
extern AddRequestDefaultTypeInternal _AddRequest_default_instance_;
class AddResponse;
class AddResponseDefaultTypeInternal;
extern AddResponseDefaultTypeInternal _AddResponse_default_instance_;
class BatchNormRequest;
class BatchNormRequestDefaultTypeInternal;
extern BatchNormRequestDefaultTypeInternal _BatchNormRequest_default_instance_;
class BatchNormResponse;
class BatchNormResponseDefaultTypeInternal;
extern BatchNormResponseDefaultTypeInternal _BatchNormResponse_default_instance_;
class CallRequest;
class CallRequestDefaultTypeInternal;
extern CallRequestDefaultTypeInternal _CallRequest_default_instance_;
class CallRequest_ObjId;
class CallRequest_ObjIdDefaultTypeInternal;
extern CallRequest_ObjIdDefaultTypeInternal _CallRequest_ObjId_default_instance_;
class CallResponse;
class CallResponseDefaultTypeInternal;
extern CallResponseDefaultTypeInternal _CallResponse_default_instance_;
class ConcatenateRequest;
class ConcatenateRequestDefaultTypeInternal;
extern ConcatenateRequestDefaultTypeInternal _ConcatenateRequest_default_instance_;
class ConnectRequest;
class ConnectRequestDefaultTypeInternal;
extern ConnectRequestDefaultTypeInternal _ConnectRequest_default_instance_;
class ConnectResponse;
class ConnectResponseDefaultTypeInternal;
extern ConnectResponseDefaultTypeInternal _ConnectResponse_default_instance_;
class ConstantRequest;
class ConstantRequestDefaultTypeInternal;
extern ConstantRequestDefaultTypeInternal _ConstantRequest_default_instance_;
class ConstantResponse;
class ConstantResponseDefaultTypeInternal;
extern ConstantResponseDefaultTypeInternal _ConstantResponse_default_instance_;
class ContcatenateResponse;
class ContcatenateResponseDefaultTypeInternal;
extern ContcatenateResponseDefaultTypeInternal _ContcatenateResponse_default_instance_;
class Conv2DRequest;
class Conv2DRequestDefaultTypeInternal;
extern Conv2DRequestDefaultTypeInternal _Conv2DRequest_default_instance_;
class Conv2DResponse;
class Conv2DResponseDefaultTypeInternal;
extern Conv2DResponseDefaultTypeInternal _Conv2DResponse_default_instance_;
class DecodeImageRequest;
class DecodeImageRequestDefaultTypeInternal;
extern DecodeImageRequestDefaultTypeInternal _DecodeImageRequest_default_instance_;
class DecodeImageResponse;
class DecodeImageResponseDefaultTypeInternal;
extern DecodeImageResponseDefaultTypeInternal _DecodeImageResponse_default_instance_;
class DeviceType;
class DeviceTypeDefaultTypeInternal;
extern DeviceTypeDefaultTypeInternal _DeviceType_default_instance_;
class DisconnectRequest;
class DisconnectRequestDefaultTypeInternal;
extern DisconnectRequestDefaultTypeInternal _DisconnectRequest_default_instance_;
class DisconnectResponse;
class DisconnectResponseDefaultTypeInternal;
extern DisconnectResponseDefaultTypeInternal _DisconnectResponse_default_instance_;
class DivideRequest;
class DivideRequestDefaultTypeInternal;
extern DivideRequestDefaultTypeInternal _DivideRequest_default_instance_;
class DivideResponse;
class DivideResponseDefaultTypeInternal;
extern DivideResponseDefaultTypeInternal _DivideResponse_default_instance_;
class ExpandDemensionRequest;
class ExpandDemensionRequestDefaultTypeInternal;
extern ExpandDemensionRequestDefaultTypeInternal _ExpandDemensionRequest_default_instance_;
class ExpandDemensionResponse;
class ExpandDemensionResponseDefaultTypeInternal;
extern ExpandDemensionResponseDefaultTypeInternal _ExpandDemensionResponse_default_instance_;
class ExpectPartialRequest;
class ExpectPartialRequestDefaultTypeInternal;
extern ExpectPartialRequestDefaultTypeInternal _ExpectPartialRequest_default_instance_;
class ExpectPartialResponse;
class ExpectPartialResponseDefaultTypeInternal;
extern ExpectPartialResponseDefaultTypeInternal _ExpectPartialResponse_default_instance_;
class GetObjectRequest;
class GetObjectRequestDefaultTypeInternal;
extern GetObjectRequestDefaultTypeInternal _GetObjectRequest_default_instance_;
class GetObjectResponse;
class GetObjectResponseDefaultTypeInternal;
extern GetObjectResponseDefaultTypeInternal _GetObjectResponse_default_instance_;
class HelloReply;
class HelloReplyDefaultTypeInternal;
extern HelloReplyDefaultTypeInternal _HelloReply_default_instance_;
class HelloRequest;
class HelloRequestDefaultTypeInternal;
extern HelloRequestDefaultTypeInternal _HelloRequest_default_instance_;
class ImageResizeRequest;
class ImageResizeRequestDefaultTypeInternal;
extern ImageResizeRequestDefaultTypeInternal _ImageResizeRequest_default_instance_;
class ImageResizeResponse;
class ImageResizeResponseDefaultTypeInternal;
extern ImageResizeResponseDefaultTypeInternal _ImageResizeResponse_default_instance_;
class IndexingRequest;
class IndexingRequestDefaultTypeInternal;
extern IndexingRequestDefaultTypeInternal _IndexingRequest_default_instance_;
class IndexingResponse;
class IndexingResponseDefaultTypeInternal;
extern IndexingResponseDefaultTypeInternal _IndexingResponse_default_instance_;
class InputRequest;
class InputRequestDefaultTypeInternal;
extern InputRequestDefaultTypeInternal _InputRequest_default_instance_;
class InputResponse;
class InputResponseDefaultTypeInternal;
extern InputResponseDefaultTypeInternal _InputResponse_default_instance_;
class LambdaRequest;
class LambdaRequestDefaultTypeInternal;
extern LambdaRequestDefaultTypeInternal _LambdaRequest_default_instance_;
class LambdaResponse;
class LambdaResponseDefaultTypeInternal;
extern LambdaResponseDefaultTypeInternal _LambdaResponse_default_instance_;
class LeakyReluRequest;
class LeakyReluRequestDefaultTypeInternal;
extern LeakyReluRequestDefaultTypeInternal _LeakyReluRequest_default_instance_;
class LeakyReluResponse;
class LeakyReluResponseDefaultTypeInternal;
extern LeakyReluResponseDefaultTypeInternal _LeakyReluResponse_default_instance_;
class LoadWeightsRequest;
class LoadWeightsRequestDefaultTypeInternal;
extern LoadWeightsRequestDefaultTypeInternal _LoadWeightsRequest_default_instance_;
class LoadWeightsResponse;
class LoadWeightsResponseDefaultTypeInternal;
extern LoadWeightsResponseDefaultTypeInternal _LoadWeightsResponse_default_instance_;
class ModelRequest;
class ModelRequestDefaultTypeInternal;
extern ModelRequestDefaultTypeInternal _ModelRequest_default_instance_;
class ModelResponse;
class ModelResponseDefaultTypeInternal;
extern ModelResponseDefaultTypeInternal _ModelResponse_default_instance_;
class PhysicalDevices;
class PhysicalDevicesDefaultTypeInternal;
extern PhysicalDevicesDefaultTypeInternal _PhysicalDevices_default_instance_;
class PhysicalDevices_PhysicalDevice;
class PhysicalDevices_PhysicalDeviceDefaultTypeInternal;
extern PhysicalDevices_PhysicalDeviceDefaultTypeInternal _PhysicalDevices_PhysicalDevice_default_instance_;
class SlicingRequest;
class SlicingRequestDefaultTypeInternal;
extern SlicingRequestDefaultTypeInternal _SlicingRequest_default_instance_;
class SlicingResponse;
class SlicingResponseDefaultTypeInternal;
extern SlicingResponseDefaultTypeInternal _SlicingResponse_default_instance_;
class TensorShapeRequest;
class TensorShapeRequestDefaultTypeInternal;
extern TensorShapeRequestDefaultTypeInternal _TensorShapeRequest_default_instance_;
class TensorShapeResponse;
class TensorShapeResponseDefaultTypeInternal;
extern TensorShapeResponseDefaultTypeInternal _TensorShapeResponse_default_instance_;
class TensorToNumPyResponse;
class TensorToNumPyResponseDefaultTypeInternal;
extern TensorToNumPyResponseDefaultTypeInternal _TensorToNumPyResponse_default_instance_;
class TensorToNumpyRequest;
class TensorToNumpyRequestDefaultTypeInternal;
extern TensorToNumpyRequestDefaultTypeInternal _TensorToNumpyRequest_default_instance_;
class UpSampling2DRequest;
class UpSampling2DRequestDefaultTypeInternal;
extern UpSampling2DRequestDefaultTypeInternal _UpSampling2DRequest_default_instance_;
class UpSampling2DResponse;
class UpSampling2DResponseDefaultTypeInternal;
extern UpSampling2DResponseDefaultTypeInternal _UpSampling2DResponse_default_instance_;
class ZeroPadding2DRequest;
class ZeroPadding2DRequestDefaultTypeInternal;
extern ZeroPadding2DRequestDefaultTypeInternal _ZeroPadding2DRequest_default_instance_;
class ZeroPadding2DResponse;
class ZeroPadding2DResponseDefaultTypeInternal;
extern ZeroPadding2DResponseDefaultTypeInternal _ZeroPadding2DResponse_default_instance_;
class l2Request;
class l2RequestDefaultTypeInternal;
extern l2RequestDefaultTypeInternal _l2Request_default_instance_;
class l2Response;
class l2ResponseDefaultTypeInternal;
extern l2ResponseDefaultTypeInternal _l2Response_default_instance_;
}  // namespace yolo_tf
PROTOBUF_NAMESPACE_OPEN
template<> ::yolo_tf::AddRequest* Arena::CreateMaybeMessage<::yolo_tf::AddRequest>(Arena*);
template<> ::yolo_tf::AddResponse* Arena::CreateMaybeMessage<::yolo_tf::AddResponse>(Arena*);
template<> ::yolo_tf::BatchNormRequest* Arena::CreateMaybeMessage<::yolo_tf::BatchNormRequest>(Arena*);
template<> ::yolo_tf::BatchNormResponse* Arena::CreateMaybeMessage<::yolo_tf::BatchNormResponse>(Arena*);
template<> ::yolo_tf::CallRequest* Arena::CreateMaybeMessage<::yolo_tf::CallRequest>(Arena*);
template<> ::yolo_tf::CallRequest_ObjId* Arena::CreateMaybeMessage<::yolo_tf::CallRequest_ObjId>(Arena*);
template<> ::yolo_tf::CallResponse* Arena::CreateMaybeMessage<::yolo_tf::CallResponse>(Arena*);
template<> ::yolo_tf::ConcatenateRequest* Arena::CreateMaybeMessage<::yolo_tf::ConcatenateRequest>(Arena*);
template<> ::yolo_tf::ConnectRequest* Arena::CreateMaybeMessage<::yolo_tf::ConnectRequest>(Arena*);
template<> ::yolo_tf::ConnectResponse* Arena::CreateMaybeMessage<::yolo_tf::ConnectResponse>(Arena*);
template<> ::yolo_tf::ConstantRequest* Arena::CreateMaybeMessage<::yolo_tf::ConstantRequest>(Arena*);
template<> ::yolo_tf::ConstantResponse* Arena::CreateMaybeMessage<::yolo_tf::ConstantResponse>(Arena*);
template<> ::yolo_tf::ContcatenateResponse* Arena::CreateMaybeMessage<::yolo_tf::ContcatenateResponse>(Arena*);
template<> ::yolo_tf::Conv2DRequest* Arena::CreateMaybeMessage<::yolo_tf::Conv2DRequest>(Arena*);
template<> ::yolo_tf::Conv2DResponse* Arena::CreateMaybeMessage<::yolo_tf::Conv2DResponse>(Arena*);
template<> ::yolo_tf::DecodeImageRequest* Arena::CreateMaybeMessage<::yolo_tf::DecodeImageRequest>(Arena*);
template<> ::yolo_tf::DecodeImageResponse* Arena::CreateMaybeMessage<::yolo_tf::DecodeImageResponse>(Arena*);
template<> ::yolo_tf::DeviceType* Arena::CreateMaybeMessage<::yolo_tf::DeviceType>(Arena*);
template<> ::yolo_tf::DisconnectRequest* Arena::CreateMaybeMessage<::yolo_tf::DisconnectRequest>(Arena*);
template<> ::yolo_tf::DisconnectResponse* Arena::CreateMaybeMessage<::yolo_tf::DisconnectResponse>(Arena*);
template<> ::yolo_tf::DivideRequest* Arena::CreateMaybeMessage<::yolo_tf::DivideRequest>(Arena*);
template<> ::yolo_tf::DivideResponse* Arena::CreateMaybeMessage<::yolo_tf::DivideResponse>(Arena*);
template<> ::yolo_tf::ExpandDemensionRequest* Arena::CreateMaybeMessage<::yolo_tf::ExpandDemensionRequest>(Arena*);
template<> ::yolo_tf::ExpandDemensionResponse* Arena::CreateMaybeMessage<::yolo_tf::ExpandDemensionResponse>(Arena*);
template<> ::yolo_tf::ExpectPartialRequest* Arena::CreateMaybeMessage<::yolo_tf::ExpectPartialRequest>(Arena*);
template<> ::yolo_tf::ExpectPartialResponse* Arena::CreateMaybeMessage<::yolo_tf::ExpectPartialResponse>(Arena*);
template<> ::yolo_tf::GetObjectRequest* Arena::CreateMaybeMessage<::yolo_tf::GetObjectRequest>(Arena*);
template<> ::yolo_tf::GetObjectResponse* Arena::CreateMaybeMessage<::yolo_tf::GetObjectResponse>(Arena*);
template<> ::yolo_tf::HelloReply* Arena::CreateMaybeMessage<::yolo_tf::HelloReply>(Arena*);
template<> ::yolo_tf::HelloRequest* Arena::CreateMaybeMessage<::yolo_tf::HelloRequest>(Arena*);
template<> ::yolo_tf::ImageResizeRequest* Arena::CreateMaybeMessage<::yolo_tf::ImageResizeRequest>(Arena*);
template<> ::yolo_tf::ImageResizeResponse* Arena::CreateMaybeMessage<::yolo_tf::ImageResizeResponse>(Arena*);
template<> ::yolo_tf::IndexingRequest* Arena::CreateMaybeMessage<::yolo_tf::IndexingRequest>(Arena*);
template<> ::yolo_tf::IndexingResponse* Arena::CreateMaybeMessage<::yolo_tf::IndexingResponse>(Arena*);
template<> ::yolo_tf::InputRequest* Arena::CreateMaybeMessage<::yolo_tf::InputRequest>(Arena*);
template<> ::yolo_tf::InputResponse* Arena::CreateMaybeMessage<::yolo_tf::InputResponse>(Arena*);
template<> ::yolo_tf::LambdaRequest* Arena::CreateMaybeMessage<::yolo_tf::LambdaRequest>(Arena*);
template<> ::yolo_tf::LambdaResponse* Arena::CreateMaybeMessage<::yolo_tf::LambdaResponse>(Arena*);
template<> ::yolo_tf::LeakyReluRequest* Arena::CreateMaybeMessage<::yolo_tf::LeakyReluRequest>(Arena*);
template<> ::yolo_tf::LeakyReluResponse* Arena::CreateMaybeMessage<::yolo_tf::LeakyReluResponse>(Arena*);
template<> ::yolo_tf::LoadWeightsRequest* Arena::CreateMaybeMessage<::yolo_tf::LoadWeightsRequest>(Arena*);
template<> ::yolo_tf::LoadWeightsResponse* Arena::CreateMaybeMessage<::yolo_tf::LoadWeightsResponse>(Arena*);
template<> ::yolo_tf::ModelRequest* Arena::CreateMaybeMessage<::yolo_tf::ModelRequest>(Arena*);
template<> ::yolo_tf::ModelResponse* Arena::CreateMaybeMessage<::yolo_tf::ModelResponse>(Arena*);
template<> ::yolo_tf::PhysicalDevices* Arena::CreateMaybeMessage<::yolo_tf::PhysicalDevices>(Arena*);
template<> ::yolo_tf::PhysicalDevices_PhysicalDevice* Arena::CreateMaybeMessage<::yolo_tf::PhysicalDevices_PhysicalDevice>(Arena*);
template<> ::yolo_tf::SlicingRequest* Arena::CreateMaybeMessage<::yolo_tf::SlicingRequest>(Arena*);
template<> ::yolo_tf::SlicingResponse* Arena::CreateMaybeMessage<::yolo_tf::SlicingResponse>(Arena*);
template<> ::yolo_tf::TensorShapeRequest* Arena::CreateMaybeMessage<::yolo_tf::TensorShapeRequest>(Arena*);
template<> ::yolo_tf::TensorShapeResponse* Arena::CreateMaybeMessage<::yolo_tf::TensorShapeResponse>(Arena*);
template<> ::yolo_tf::TensorToNumPyResponse* Arena::CreateMaybeMessage<::yolo_tf::TensorToNumPyResponse>(Arena*);
template<> ::yolo_tf::TensorToNumpyRequest* Arena::CreateMaybeMessage<::yolo_tf::TensorToNumpyRequest>(Arena*);
template<> ::yolo_tf::UpSampling2DRequest* Arena::CreateMaybeMessage<::yolo_tf::UpSampling2DRequest>(Arena*);
template<> ::yolo_tf::UpSampling2DResponse* Arena::CreateMaybeMessage<::yolo_tf::UpSampling2DResponse>(Arena*);
template<> ::yolo_tf::ZeroPadding2DRequest* Arena::CreateMaybeMessage<::yolo_tf::ZeroPadding2DRequest>(Arena*);
template<> ::yolo_tf::ZeroPadding2DResponse* Arena::CreateMaybeMessage<::yolo_tf::ZeroPadding2DResponse>(Arena*);
template<> ::yolo_tf::l2Request* Arena::CreateMaybeMessage<::yolo_tf::l2Request>(Arena*);
template<> ::yolo_tf::l2Response* Arena::CreateMaybeMessage<::yolo_tf::l2Response>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace yolo_tf {

// ===================================================================

class ConnectRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.ConnectRequest) */ {
 public:
  ConnectRequest();
  virtual ~ConnectRequest();

  ConnectRequest(const ConnectRequest& from);
  ConnectRequest(ConnectRequest&& from) noexcept
    : ConnectRequest() {
    *this = ::std::move(from);
  }

  inline ConnectRequest& operator=(const ConnectRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConnectRequest& operator=(ConnectRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ConnectRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConnectRequest* internal_default_instance() {
    return reinterpret_cast<const ConnectRequest*>(
               &_ConnectRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ConnectRequest& a, ConnectRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ConnectRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ConnectRequest* New() const final {
    return CreateMaybeMessage<ConnectRequest>(nullptr);
  }

  ConnectRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ConnectRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ConnectRequest& from);
  void MergeFrom(const ConnectRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConnectRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.ConnectRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1;
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);
  private:
  const std::string& _internal_id() const;
  void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.ConnectRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class ConnectResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.ConnectResponse) */ {
 public:
  ConnectResponse();
  virtual ~ConnectResponse();

  ConnectResponse(const ConnectResponse& from);
  ConnectResponse(ConnectResponse&& from) noexcept
    : ConnectResponse() {
    *this = ::std::move(from);
  }

  inline ConnectResponse& operator=(const ConnectResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConnectResponse& operator=(ConnectResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ConnectResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConnectResponse* internal_default_instance() {
    return reinterpret_cast<const ConnectResponse*>(
               &_ConnectResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ConnectResponse& a, ConnectResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ConnectResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ConnectResponse* New() const final {
    return CreateMaybeMessage<ConnectResponse>(nullptr);
  }

  ConnectResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ConnectResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ConnectResponse& from);
  void MergeFrom(const ConnectResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConnectResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.ConnectResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAcceptFieldNumber = 1,
  };
  // bool accept = 1;
  void clear_accept();
  bool accept() const;
  void set_accept(bool value);
  private:
  bool _internal_accept() const;
  void _internal_set_accept(bool value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.ConnectResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  bool accept_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class DisconnectRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.DisconnectRequest) */ {
 public:
  DisconnectRequest();
  virtual ~DisconnectRequest();

  DisconnectRequest(const DisconnectRequest& from);
  DisconnectRequest(DisconnectRequest&& from) noexcept
    : DisconnectRequest() {
    *this = ::std::move(from);
  }

  inline DisconnectRequest& operator=(const DisconnectRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DisconnectRequest& operator=(DisconnectRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DisconnectRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DisconnectRequest* internal_default_instance() {
    return reinterpret_cast<const DisconnectRequest*>(
               &_DisconnectRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(DisconnectRequest& a, DisconnectRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DisconnectRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DisconnectRequest* New() const final {
    return CreateMaybeMessage<DisconnectRequest>(nullptr);
  }

  DisconnectRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DisconnectRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DisconnectRequest& from);
  void MergeFrom(const DisconnectRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DisconnectRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.DisconnectRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1;
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);
  private:
  const std::string& _internal_id() const;
  void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.DisconnectRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class DisconnectResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.DisconnectResponse) */ {
 public:
  DisconnectResponse();
  virtual ~DisconnectResponse();

  DisconnectResponse(const DisconnectResponse& from);
  DisconnectResponse(DisconnectResponse&& from) noexcept
    : DisconnectResponse() {
    *this = ::std::move(from);
  }

  inline DisconnectResponse& operator=(const DisconnectResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DisconnectResponse& operator=(DisconnectResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DisconnectResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DisconnectResponse* internal_default_instance() {
    return reinterpret_cast<const DisconnectResponse*>(
               &_DisconnectResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(DisconnectResponse& a, DisconnectResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DisconnectResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DisconnectResponse* New() const final {
    return CreateMaybeMessage<DisconnectResponse>(nullptr);
  }

  DisconnectResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DisconnectResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DisconnectResponse& from);
  void MergeFrom(const DisconnectResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DisconnectResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.DisconnectResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:yolo_tf.DisconnectResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class HelloRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.HelloRequest) */ {
 public:
  HelloRequest();
  virtual ~HelloRequest();

  HelloRequest(const HelloRequest& from);
  HelloRequest(HelloRequest&& from) noexcept
    : HelloRequest() {
    *this = ::std::move(from);
  }

  inline HelloRequest& operator=(const HelloRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline HelloRequest& operator=(HelloRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HelloRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HelloRequest* internal_default_instance() {
    return reinterpret_cast<const HelloRequest*>(
               &_HelloRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(HelloRequest& a, HelloRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(HelloRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HelloRequest* New() const final {
    return CreateMaybeMessage<HelloRequest>(nullptr);
  }

  HelloRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HelloRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HelloRequest& from);
  void MergeFrom(const HelloRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HelloRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.HelloRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.HelloRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class HelloReply :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.HelloReply) */ {
 public:
  HelloReply();
  virtual ~HelloReply();

  HelloReply(const HelloReply& from);
  HelloReply(HelloReply&& from) noexcept
    : HelloReply() {
    *this = ::std::move(from);
  }

  inline HelloReply& operator=(const HelloReply& from) {
    CopyFrom(from);
    return *this;
  }
  inline HelloReply& operator=(HelloReply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HelloReply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HelloReply* internal_default_instance() {
    return reinterpret_cast<const HelloReply*>(
               &_HelloReply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(HelloReply& a, HelloReply& b) {
    a.Swap(&b);
  }
  inline void Swap(HelloReply* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HelloReply* New() const final {
    return CreateMaybeMessage<HelloReply>(nullptr);
  }

  HelloReply* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HelloReply>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HelloReply& from);
  void MergeFrom(const HelloReply& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HelloReply* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.HelloReply";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 1,
  };
  // string message = 1;
  void clear_message();
  const std::string& message() const;
  void set_message(const std::string& value);
  void set_message(std::string&& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  std::string* mutable_message();
  std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.HelloReply)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class CallRequest_ObjId :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.CallRequest.ObjId) */ {
 public:
  CallRequest_ObjId();
  virtual ~CallRequest_ObjId();

  CallRequest_ObjId(const CallRequest_ObjId& from);
  CallRequest_ObjId(CallRequest_ObjId&& from) noexcept
    : CallRequest_ObjId() {
    *this = ::std::move(from);
  }

  inline CallRequest_ObjId& operator=(const CallRequest_ObjId& from) {
    CopyFrom(from);
    return *this;
  }
  inline CallRequest_ObjId& operator=(CallRequest_ObjId&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CallRequest_ObjId& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CallRequest_ObjId* internal_default_instance() {
    return reinterpret_cast<const CallRequest_ObjId*>(
               &_CallRequest_ObjId_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(CallRequest_ObjId& a, CallRequest_ObjId& b) {
    a.Swap(&b);
  }
  inline void Swap(CallRequest_ObjId* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CallRequest_ObjId* New() const final {
    return CreateMaybeMessage<CallRequest_ObjId>(nullptr);
  }

  CallRequest_ObjId* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CallRequest_ObjId>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CallRequest_ObjId& from);
  void MergeFrom(const CallRequest_ObjId& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CallRequest_ObjId* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.CallRequest.ObjId";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjIdFieldNumber = 1,
    kReleaseFieldNumber = 2,
  };
  // uint64 obj_id = 1;
  void clear_obj_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id() const;
  void set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_obj_id() const;
  void _internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // bool release = 2;
  void clear_release();
  bool release() const;
  void set_release(bool value);
  private:
  bool _internal_release() const;
  void _internal_set_release(bool value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.CallRequest.ObjId)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id_;
  bool release_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class CallRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.CallRequest) */ {
 public:
  CallRequest();
  virtual ~CallRequest();

  CallRequest(const CallRequest& from);
  CallRequest(CallRequest&& from) noexcept
    : CallRequest() {
    *this = ::std::move(from);
  }

  inline CallRequest& operator=(const CallRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CallRequest& operator=(CallRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CallRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CallRequest* internal_default_instance() {
    return reinterpret_cast<const CallRequest*>(
               &_CallRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(CallRequest& a, CallRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CallRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CallRequest* New() const final {
    return CreateMaybeMessage<CallRequest>(nullptr);
  }

  CallRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CallRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CallRequest& from);
  void MergeFrom(const CallRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CallRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.CallRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef CallRequest_ObjId ObjId;

  // accessors -------------------------------------------------------

  enum : int {
    kPickledArgsFieldNumber = 3,
    kObjIdsFieldNumber = 4,
    kConnectionIdFieldNumber = 6,
    kCallableObjIdFieldNumber = 1,
    kArgsPickledFieldNumber = 2,
    kNumOfReturnsFieldNumber = 5,
  };
  // repeated bytes pickled_args = 3;
  int pickled_args_size() const;
  private:
  int _internal_pickled_args_size() const;
  public:
  void clear_pickled_args();
  const std::string& pickled_args(int index) const;
  std::string* mutable_pickled_args(int index);
  void set_pickled_args(int index, const std::string& value);
  void set_pickled_args(int index, std::string&& value);
  void set_pickled_args(int index, const char* value);
  void set_pickled_args(int index, const void* value, size_t size);
  std::string* add_pickled_args();
  void add_pickled_args(const std::string& value);
  void add_pickled_args(std::string&& value);
  void add_pickled_args(const char* value);
  void add_pickled_args(const void* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& pickled_args() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_pickled_args();
  private:
  const std::string& _internal_pickled_args(int index) const;
  std::string* _internal_add_pickled_args();
  public:

  // repeated .yolo_tf.CallRequest.ObjId obj_ids = 4;
  int obj_ids_size() const;
  private:
  int _internal_obj_ids_size() const;
  public:
  void clear_obj_ids();
  ::yolo_tf::CallRequest_ObjId* mutable_obj_ids(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yolo_tf::CallRequest_ObjId >*
      mutable_obj_ids();
  private:
  const ::yolo_tf::CallRequest_ObjId& _internal_obj_ids(int index) const;
  ::yolo_tf::CallRequest_ObjId* _internal_add_obj_ids();
  public:
  const ::yolo_tf::CallRequest_ObjId& obj_ids(int index) const;
  ::yolo_tf::CallRequest_ObjId* add_obj_ids();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yolo_tf::CallRequest_ObjId >&
      obj_ids() const;

  // string connection_id = 6;
  void clear_connection_id();
  const std::string& connection_id() const;
  void set_connection_id(const std::string& value);
  void set_connection_id(std::string&& value);
  void set_connection_id(const char* value);
  void set_connection_id(const char* value, size_t size);
  std::string* mutable_connection_id();
  std::string* release_connection_id();
  void set_allocated_connection_id(std::string* connection_id);
  private:
  const std::string& _internal_connection_id() const;
  void _internal_set_connection_id(const std::string& value);
  std::string* _internal_mutable_connection_id();
  public:

  // uint64 callable_obj_id = 1;
  void clear_callable_obj_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 callable_obj_id() const;
  void set_callable_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_callable_obj_id() const;
  void _internal_set_callable_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // bool args_pickled = 2;
  void clear_args_pickled();
  bool args_pickled() const;
  void set_args_pickled(bool value);
  private:
  bool _internal_args_pickled() const;
  void _internal_set_args_pickled(bool value);
  public:

  // int32 num_of_returns = 5;
  void clear_num_of_returns();
  ::PROTOBUF_NAMESPACE_ID::int32 num_of_returns() const;
  void set_num_of_returns(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_num_of_returns() const;
  void _internal_set_num_of_returns(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.CallRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> pickled_args_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yolo_tf::CallRequest_ObjId > obj_ids_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr connection_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 callable_obj_id_;
  bool args_pickled_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_of_returns_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class CallResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.CallResponse) */ {
 public:
  CallResponse();
  virtual ~CallResponse();

  CallResponse(const CallResponse& from);
  CallResponse(CallResponse&& from) noexcept
    : CallResponse() {
    *this = ::std::move(from);
  }

  inline CallResponse& operator=(const CallResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CallResponse& operator=(CallResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CallResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CallResponse* internal_default_instance() {
    return reinterpret_cast<const CallResponse*>(
               &_CallResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(CallResponse& a, CallResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CallResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CallResponse* New() const final {
    return CreateMaybeMessage<CallResponse>(nullptr);
  }

  CallResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CallResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CallResponse& from);
  void MergeFrom(const CallResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CallResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.CallResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPickledResultFieldNumber = 2,
    kObjIdsFieldNumber = 3,
    kPickledFieldNumber = 1,
  };
  // repeated bytes pickled_result = 2;
  int pickled_result_size() const;
  private:
  int _internal_pickled_result_size() const;
  public:
  void clear_pickled_result();
  const std::string& pickled_result(int index) const;
  std::string* mutable_pickled_result(int index);
  void set_pickled_result(int index, const std::string& value);
  void set_pickled_result(int index, std::string&& value);
  void set_pickled_result(int index, const char* value);
  void set_pickled_result(int index, const void* value, size_t size);
  std::string* add_pickled_result();
  void add_pickled_result(const std::string& value);
  void add_pickled_result(std::string&& value);
  void add_pickled_result(const char* value);
  void add_pickled_result(const void* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& pickled_result() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_pickled_result();
  private:
  const std::string& _internal_pickled_result(int index) const;
  std::string* _internal_add_pickled_result();
  public:

  // repeated uint64 obj_ids = 3;
  int obj_ids_size() const;
  private:
  int _internal_obj_ids_size() const;
  public:
  void clear_obj_ids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_obj_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_obj_ids() const;
  void _internal_add_obj_ids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_obj_ids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_ids(int index) const;
  void set_obj_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_obj_ids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      obj_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_obj_ids();

  // bool pickled = 1;
  void clear_pickled();
  bool pickled() const;
  void set_pickled(bool value);
  private:
  bool _internal_pickled() const;
  void _internal_set_pickled(bool value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.CallResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> pickled_result_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > obj_ids_;
  mutable std::atomic<int> _obj_ids_cached_byte_size_;
  bool pickled_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class SlicingRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.SlicingRequest) */ {
 public:
  SlicingRequest();
  virtual ~SlicingRequest();

  SlicingRequest(const SlicingRequest& from);
  SlicingRequest(SlicingRequest&& from) noexcept
    : SlicingRequest() {
    *this = ::std::move(from);
  }

  inline SlicingRequest& operator=(const SlicingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SlicingRequest& operator=(SlicingRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SlicingRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SlicingRequest* internal_default_instance() {
    return reinterpret_cast<const SlicingRequest*>(
               &_SlicingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(SlicingRequest& a, SlicingRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SlicingRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SlicingRequest* New() const final {
    return CreateMaybeMessage<SlicingRequest>(nullptr);
  }

  SlicingRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SlicingRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SlicingRequest& from);
  void MergeFrom(const SlicingRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SlicingRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.SlicingRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConnectionIdFieldNumber = 4,
    kIterableIdFieldNumber = 1,
    kStartFieldNumber = 2,
    kEndFieldNumber = 3,
  };
  // string connection_id = 4;
  void clear_connection_id();
  const std::string& connection_id() const;
  void set_connection_id(const std::string& value);
  void set_connection_id(std::string&& value);
  void set_connection_id(const char* value);
  void set_connection_id(const char* value, size_t size);
  std::string* mutable_connection_id();
  std::string* release_connection_id();
  void set_allocated_connection_id(std::string* connection_id);
  private:
  const std::string& _internal_connection_id() const;
  void _internal_set_connection_id(const std::string& value);
  std::string* _internal_mutable_connection_id();
  public:

  // uint64 iterable_id = 1;
  void clear_iterable_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 iterable_id() const;
  void set_iterable_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_iterable_id() const;
  void _internal_set_iterable_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 start = 2;
  void clear_start();
  ::PROTOBUF_NAMESPACE_ID::uint32 start() const;
  void set_start(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_start() const;
  void _internal_set_start(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 end = 3;
  void clear_end();
  ::PROTOBUF_NAMESPACE_ID::uint32 end() const;
  void set_end(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_end() const;
  void _internal_set_end(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.SlicingRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr connection_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 iterable_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 start_;
  ::PROTOBUF_NAMESPACE_ID::uint32 end_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class SlicingResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.SlicingResponse) */ {
 public:
  SlicingResponse();
  virtual ~SlicingResponse();

  SlicingResponse(const SlicingResponse& from);
  SlicingResponse(SlicingResponse&& from) noexcept
    : SlicingResponse() {
    *this = ::std::move(from);
  }

  inline SlicingResponse& operator=(const SlicingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SlicingResponse& operator=(SlicingResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SlicingResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SlicingResponse* internal_default_instance() {
    return reinterpret_cast<const SlicingResponse*>(
               &_SlicingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(SlicingResponse& a, SlicingResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SlicingResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SlicingResponse* New() const final {
    return CreateMaybeMessage<SlicingResponse>(nullptr);
  }

  SlicingResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SlicingResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SlicingResponse& from);
  void MergeFrom(const SlicingResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SlicingResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.SlicingResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjIdFieldNumber = 1,
  };
  // uint64 obj_id = 1;
  void clear_obj_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id() const;
  void set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_obj_id() const;
  void _internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.SlicingResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class ConstantRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.ConstantRequest) */ {
 public:
  ConstantRequest();
  virtual ~ConstantRequest();

  ConstantRequest(const ConstantRequest& from);
  ConstantRequest(ConstantRequest&& from) noexcept
    : ConstantRequest() {
    *this = ::std::move(from);
  }

  inline ConstantRequest& operator=(const ConstantRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConstantRequest& operator=(ConstantRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ConstantRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConstantRequest* internal_default_instance() {
    return reinterpret_cast<const ConstantRequest*>(
               &_ConstantRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(ConstantRequest& a, ConstantRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ConstantRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ConstantRequest* New() const final {
    return CreateMaybeMessage<ConstantRequest>(nullptr);
  }

  ConstantRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ConstantRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ConstantRequest& from);
  void MergeFrom(const ConstantRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConstantRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.ConstantRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 1,
    kConnectionIdFieldNumber = 2,
  };
  // bytes value = 1;
  void clear_value();
  const std::string& value() const;
  void set_value(const std::string& value);
  void set_value(std::string&& value);
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  std::string* mutable_value();
  std::string* release_value();
  void set_allocated_value(std::string* value);
  private:
  const std::string& _internal_value() const;
  void _internal_set_value(const std::string& value);
  std::string* _internal_mutable_value();
  public:

  // string connection_id = 2;
  void clear_connection_id();
  const std::string& connection_id() const;
  void set_connection_id(const std::string& value);
  void set_connection_id(std::string&& value);
  void set_connection_id(const char* value);
  void set_connection_id(const char* value, size_t size);
  std::string* mutable_connection_id();
  std::string* release_connection_id();
  void set_allocated_connection_id(std::string* connection_id);
  private:
  const std::string& _internal_connection_id() const;
  void _internal_set_connection_id(const std::string& value);
  std::string* _internal_mutable_connection_id();
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.ConstantRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr connection_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class ConstantResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.ConstantResponse) */ {
 public:
  ConstantResponse();
  virtual ~ConstantResponse();

  ConstantResponse(const ConstantResponse& from);
  ConstantResponse(ConstantResponse&& from) noexcept
    : ConstantResponse() {
    *this = ::std::move(from);
  }

  inline ConstantResponse& operator=(const ConstantResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConstantResponse& operator=(ConstantResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ConstantResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConstantResponse* internal_default_instance() {
    return reinterpret_cast<const ConstantResponse*>(
               &_ConstantResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(ConstantResponse& a, ConstantResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ConstantResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ConstantResponse* New() const final {
    return CreateMaybeMessage<ConstantResponse>(nullptr);
  }

  ConstantResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ConstantResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ConstantResponse& from);
  void MergeFrom(const ConstantResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConstantResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.ConstantResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTensorFieldNumber = 1,
  };
  // bytes tensor = 1;
  void clear_tensor();
  const std::string& tensor() const;
  void set_tensor(const std::string& value);
  void set_tensor(std::string&& value);
  void set_tensor(const char* value);
  void set_tensor(const void* value, size_t size);
  std::string* mutable_tensor();
  std::string* release_tensor();
  void set_allocated_tensor(std::string* tensor);
  private:
  const std::string& _internal_tensor() const;
  void _internal_set_tensor(const std::string& value);
  std::string* _internal_mutable_tensor();
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.ConstantResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tensor_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class DeviceType :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.DeviceType) */ {
 public:
  DeviceType();
  virtual ~DeviceType();

  DeviceType(const DeviceType& from);
  DeviceType(DeviceType&& from) noexcept
    : DeviceType() {
    *this = ::std::move(from);
  }

  inline DeviceType& operator=(const DeviceType& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeviceType& operator=(DeviceType&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DeviceType& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DeviceType* internal_default_instance() {
    return reinterpret_cast<const DeviceType*>(
               &_DeviceType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(DeviceType& a, DeviceType& b) {
    a.Swap(&b);
  }
  inline void Swap(DeviceType* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DeviceType* New() const final {
    return CreateMaybeMessage<DeviceType>(nullptr);
  }

  DeviceType* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DeviceType>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DeviceType& from);
  void MergeFrom(const DeviceType& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DeviceType* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.DeviceType";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDeviceTypeFieldNumber = 1,
    kConnectionIdFieldNumber = 2,
  };
  // string device_type = 1;
  void clear_device_type();
  const std::string& device_type() const;
  void set_device_type(const std::string& value);
  void set_device_type(std::string&& value);
  void set_device_type(const char* value);
  void set_device_type(const char* value, size_t size);
  std::string* mutable_device_type();
  std::string* release_device_type();
  void set_allocated_device_type(std::string* device_type);
  private:
  const std::string& _internal_device_type() const;
  void _internal_set_device_type(const std::string& value);
  std::string* _internal_mutable_device_type();
  public:

  // string connection_id = 2;
  void clear_connection_id();
  const std::string& connection_id() const;
  void set_connection_id(const std::string& value);
  void set_connection_id(std::string&& value);
  void set_connection_id(const char* value);
  void set_connection_id(const char* value, size_t size);
  std::string* mutable_connection_id();
  std::string* release_connection_id();
  void set_allocated_connection_id(std::string* connection_id);
  private:
  const std::string& _internal_connection_id() const;
  void _internal_set_connection_id(const std::string& value);
  std::string* _internal_mutable_connection_id();
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.DeviceType)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr device_type_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr connection_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class PhysicalDevices_PhysicalDevice :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.PhysicalDevices.PhysicalDevice) */ {
 public:
  PhysicalDevices_PhysicalDevice();
  virtual ~PhysicalDevices_PhysicalDevice();

  PhysicalDevices_PhysicalDevice(const PhysicalDevices_PhysicalDevice& from);
  PhysicalDevices_PhysicalDevice(PhysicalDevices_PhysicalDevice&& from) noexcept
    : PhysicalDevices_PhysicalDevice() {
    *this = ::std::move(from);
  }

  inline PhysicalDevices_PhysicalDevice& operator=(const PhysicalDevices_PhysicalDevice& from) {
    CopyFrom(from);
    return *this;
  }
  inline PhysicalDevices_PhysicalDevice& operator=(PhysicalDevices_PhysicalDevice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PhysicalDevices_PhysicalDevice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PhysicalDevices_PhysicalDevice* internal_default_instance() {
    return reinterpret_cast<const PhysicalDevices_PhysicalDevice*>(
               &_PhysicalDevices_PhysicalDevice_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(PhysicalDevices_PhysicalDevice& a, PhysicalDevices_PhysicalDevice& b) {
    a.Swap(&b);
  }
  inline void Swap(PhysicalDevices_PhysicalDevice* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PhysicalDevices_PhysicalDevice* New() const final {
    return CreateMaybeMessage<PhysicalDevices_PhysicalDevice>(nullptr);
  }

  PhysicalDevices_PhysicalDevice* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PhysicalDevices_PhysicalDevice>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PhysicalDevices_PhysicalDevice& from);
  void MergeFrom(const PhysicalDevices_PhysicalDevice& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PhysicalDevices_PhysicalDevice* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.PhysicalDevices.PhysicalDevice";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kDeviceTypeFieldNumber = 2,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string device_type = 2;
  void clear_device_type();
  const std::string& device_type() const;
  void set_device_type(const std::string& value);
  void set_device_type(std::string&& value);
  void set_device_type(const char* value);
  void set_device_type(const char* value, size_t size);
  std::string* mutable_device_type();
  std::string* release_device_type();
  void set_allocated_device_type(std::string* device_type);
  private:
  const std::string& _internal_device_type() const;
  void _internal_set_device_type(const std::string& value);
  std::string* _internal_mutable_device_type();
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.PhysicalDevices.PhysicalDevice)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr device_type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class PhysicalDevices :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.PhysicalDevices) */ {
 public:
  PhysicalDevices();
  virtual ~PhysicalDevices();

  PhysicalDevices(const PhysicalDevices& from);
  PhysicalDevices(PhysicalDevices&& from) noexcept
    : PhysicalDevices() {
    *this = ::std::move(from);
  }

  inline PhysicalDevices& operator=(const PhysicalDevices& from) {
    CopyFrom(from);
    return *this;
  }
  inline PhysicalDevices& operator=(PhysicalDevices&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PhysicalDevices& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PhysicalDevices* internal_default_instance() {
    return reinterpret_cast<const PhysicalDevices*>(
               &_PhysicalDevices_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(PhysicalDevices& a, PhysicalDevices& b) {
    a.Swap(&b);
  }
  inline void Swap(PhysicalDevices* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PhysicalDevices* New() const final {
    return CreateMaybeMessage<PhysicalDevices>(nullptr);
  }

  PhysicalDevices* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PhysicalDevices>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PhysicalDevices& from);
  void MergeFrom(const PhysicalDevices& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PhysicalDevices* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.PhysicalDevices";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef PhysicalDevices_PhysicalDevice PhysicalDevice;

  // accessors -------------------------------------------------------

  enum : int {
    kDevicesFieldNumber = 1,
  };
  // repeated .yolo_tf.PhysicalDevices.PhysicalDevice devices = 1;
  int devices_size() const;
  private:
  int _internal_devices_size() const;
  public:
  void clear_devices();
  ::yolo_tf::PhysicalDevices_PhysicalDevice* mutable_devices(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yolo_tf::PhysicalDevices_PhysicalDevice >*
      mutable_devices();
  private:
  const ::yolo_tf::PhysicalDevices_PhysicalDevice& _internal_devices(int index) const;
  ::yolo_tf::PhysicalDevices_PhysicalDevice* _internal_add_devices();
  public:
  const ::yolo_tf::PhysicalDevices_PhysicalDevice& devices(int index) const;
  ::yolo_tf::PhysicalDevices_PhysicalDevice* add_devices();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yolo_tf::PhysicalDevices_PhysicalDevice >&
      devices() const;

  // @@protoc_insertion_point(class_scope:yolo_tf.PhysicalDevices)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yolo_tf::PhysicalDevices_PhysicalDevice > devices_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class DecodeImageRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.DecodeImageRequest) */ {
 public:
  DecodeImageRequest();
  virtual ~DecodeImageRequest();

  DecodeImageRequest(const DecodeImageRequest& from);
  DecodeImageRequest(DecodeImageRequest&& from) noexcept
    : DecodeImageRequest() {
    *this = ::std::move(from);
  }

  inline DecodeImageRequest& operator=(const DecodeImageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DecodeImageRequest& operator=(DecodeImageRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DecodeImageRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DecodeImageRequest* internal_default_instance() {
    return reinterpret_cast<const DecodeImageRequest*>(
               &_DecodeImageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(DecodeImageRequest& a, DecodeImageRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DecodeImageRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DecodeImageRequest* New() const final {
    return CreateMaybeMessage<DecodeImageRequest>(nullptr);
  }

  DecodeImageRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DecodeImageRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DecodeImageRequest& from);
  void MergeFrom(const DecodeImageRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DecodeImageRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.DecodeImageRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kByteImageFieldNumber = 1,
    kConnectionIdFieldNumber = 4,
    kSizeFieldNumber = 2,
    kChannelsFieldNumber = 3,
  };
  // bytes byte_image = 1;
  void clear_byte_image();
  const std::string& byte_image() const;
  void set_byte_image(const std::string& value);
  void set_byte_image(std::string&& value);
  void set_byte_image(const char* value);
  void set_byte_image(const void* value, size_t size);
  std::string* mutable_byte_image();
  std::string* release_byte_image();
  void set_allocated_byte_image(std::string* byte_image);
  private:
  const std::string& _internal_byte_image() const;
  void _internal_set_byte_image(const std::string& value);
  std::string* _internal_mutable_byte_image();
  public:

  // string connection_id = 4;
  void clear_connection_id();
  const std::string& connection_id() const;
  void set_connection_id(const std::string& value);
  void set_connection_id(std::string&& value);
  void set_connection_id(const char* value);
  void set_connection_id(const char* value, size_t size);
  std::string* mutable_connection_id();
  std::string* release_connection_id();
  void set_allocated_connection_id(std::string* connection_id);
  private:
  const std::string& _internal_connection_id() const;
  void _internal_set_connection_id(const std::string& value);
  std::string* _internal_mutable_connection_id();
  public:

  // int32 size = 2;
  void clear_size();
  ::PROTOBUF_NAMESPACE_ID::int32 size() const;
  void set_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_size() const;
  void _internal_set_size(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 channels = 3;
  void clear_channels();
  ::PROTOBUF_NAMESPACE_ID::int32 channels() const;
  void set_channels(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_channels() const;
  void _internal_set_channels(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.DecodeImageRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr byte_image_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr connection_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 size_;
  ::PROTOBUF_NAMESPACE_ID::int32 channels_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class DecodeImageResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.DecodeImageResponse) */ {
 public:
  DecodeImageResponse();
  virtual ~DecodeImageResponse();

  DecodeImageResponse(const DecodeImageResponse& from);
  DecodeImageResponse(DecodeImageResponse&& from) noexcept
    : DecodeImageResponse() {
    *this = ::std::move(from);
  }

  inline DecodeImageResponse& operator=(const DecodeImageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DecodeImageResponse& operator=(DecodeImageResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DecodeImageResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DecodeImageResponse* internal_default_instance() {
    return reinterpret_cast<const DecodeImageResponse*>(
               &_DecodeImageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(DecodeImageResponse& a, DecodeImageResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DecodeImageResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DecodeImageResponse* New() const final {
    return CreateMaybeMessage<DecodeImageResponse>(nullptr);
  }

  DecodeImageResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DecodeImageResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DecodeImageResponse& from);
  void MergeFrom(const DecodeImageResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DecodeImageResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.DecodeImageResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjIdFieldNumber = 1,
  };
  // uint64 obj_id = 1;
  void clear_obj_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id() const;
  void set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_obj_id() const;
  void _internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.DecodeImageResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class ExpandDemensionRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.ExpandDemensionRequest) */ {
 public:
  ExpandDemensionRequest();
  virtual ~ExpandDemensionRequest();

  ExpandDemensionRequest(const ExpandDemensionRequest& from);
  ExpandDemensionRequest(ExpandDemensionRequest&& from) noexcept
    : ExpandDemensionRequest() {
    *this = ::std::move(from);
  }

  inline ExpandDemensionRequest& operator=(const ExpandDemensionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExpandDemensionRequest& operator=(ExpandDemensionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ExpandDemensionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExpandDemensionRequest* internal_default_instance() {
    return reinterpret_cast<const ExpandDemensionRequest*>(
               &_ExpandDemensionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(ExpandDemensionRequest& a, ExpandDemensionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ExpandDemensionRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ExpandDemensionRequest* New() const final {
    return CreateMaybeMessage<ExpandDemensionRequest>(nullptr);
  }

  ExpandDemensionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ExpandDemensionRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ExpandDemensionRequest& from);
  void MergeFrom(const ExpandDemensionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExpandDemensionRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.ExpandDemensionRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConnectionIdFieldNumber = 3,
    kObjIdFieldNumber = 1,
    kAxisFieldNumber = 2,
  };
  // string connection_id = 3;
  void clear_connection_id();
  const std::string& connection_id() const;
  void set_connection_id(const std::string& value);
  void set_connection_id(std::string&& value);
  void set_connection_id(const char* value);
  void set_connection_id(const char* value, size_t size);
  std::string* mutable_connection_id();
  std::string* release_connection_id();
  void set_allocated_connection_id(std::string* connection_id);
  private:
  const std::string& _internal_connection_id() const;
  void _internal_set_connection_id(const std::string& value);
  std::string* _internal_mutable_connection_id();
  public:

  // uint64 obj_id = 1;
  void clear_obj_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id() const;
  void set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_obj_id() const;
  void _internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 axis = 2;
  void clear_axis();
  ::PROTOBUF_NAMESPACE_ID::int32 axis() const;
  void set_axis(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_axis() const;
  void _internal_set_axis(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.ExpandDemensionRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr connection_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 axis_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class ExpandDemensionResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.ExpandDemensionResponse) */ {
 public:
  ExpandDemensionResponse();
  virtual ~ExpandDemensionResponse();

  ExpandDemensionResponse(const ExpandDemensionResponse& from);
  ExpandDemensionResponse(ExpandDemensionResponse&& from) noexcept
    : ExpandDemensionResponse() {
    *this = ::std::move(from);
  }

  inline ExpandDemensionResponse& operator=(const ExpandDemensionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExpandDemensionResponse& operator=(ExpandDemensionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ExpandDemensionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExpandDemensionResponse* internal_default_instance() {
    return reinterpret_cast<const ExpandDemensionResponse*>(
               &_ExpandDemensionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(ExpandDemensionResponse& a, ExpandDemensionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ExpandDemensionResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ExpandDemensionResponse* New() const final {
    return CreateMaybeMessage<ExpandDemensionResponse>(nullptr);
  }

  ExpandDemensionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ExpandDemensionResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ExpandDemensionResponse& from);
  void MergeFrom(const ExpandDemensionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExpandDemensionResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.ExpandDemensionResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjIdFieldNumber = 1,
  };
  // uint64 obj_id = 1;
  void clear_obj_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id() const;
  void set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_obj_id() const;
  void _internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.ExpandDemensionResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class InputRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.InputRequest) */ {
 public:
  InputRequest();
  virtual ~InputRequest();

  InputRequest(const InputRequest& from);
  InputRequest(InputRequest&& from) noexcept
    : InputRequest() {
    *this = ::std::move(from);
  }

  inline InputRequest& operator=(const InputRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputRequest& operator=(InputRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InputRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputRequest* internal_default_instance() {
    return reinterpret_cast<const InputRequest*>(
               &_InputRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(InputRequest& a, InputRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(InputRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InputRequest* New() const final {
    return CreateMaybeMessage<InputRequest>(nullptr);
  }

  InputRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InputRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InputRequest& from);
  void MergeFrom(const InputRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.InputRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShapeFieldNumber = 1,
    kNameFieldNumber = 2,
    kConnectionIdFieldNumber = 3,
  };
  // repeated int32 shape = 1;
  int shape_size() const;
  private:
  int _internal_shape_size() const;
  public:
  void clear_shape();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_shape(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_shape() const;
  void _internal_add_shape(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_shape();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 shape(int index) const;
  void set_shape(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_shape(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      shape() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_shape();

  // string name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string connection_id = 3;
  void clear_connection_id();
  const std::string& connection_id() const;
  void set_connection_id(const std::string& value);
  void set_connection_id(std::string&& value);
  void set_connection_id(const char* value);
  void set_connection_id(const char* value, size_t size);
  std::string* mutable_connection_id();
  std::string* release_connection_id();
  void set_allocated_connection_id(std::string* connection_id);
  private:
  const std::string& _internal_connection_id() const;
  void _internal_set_connection_id(const std::string& value);
  std::string* _internal_mutable_connection_id();
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.InputRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > shape_;
  mutable std::atomic<int> _shape_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr connection_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class InputResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.InputResponse) */ {
 public:
  InputResponse();
  virtual ~InputResponse();

  InputResponse(const InputResponse& from);
  InputResponse(InputResponse&& from) noexcept
    : InputResponse() {
    *this = ::std::move(from);
  }

  inline InputResponse& operator=(const InputResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline InputResponse& operator=(InputResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const InputResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InputResponse* internal_default_instance() {
    return reinterpret_cast<const InputResponse*>(
               &_InputResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(InputResponse& a, InputResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(InputResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline InputResponse* New() const final {
    return CreateMaybeMessage<InputResponse>(nullptr);
  }

  InputResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<InputResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const InputResponse& from);
  void MergeFrom(const InputResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InputResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.InputResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjIdFieldNumber = 1,
  };
  // uint64 obj_id = 1;
  void clear_obj_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id() const;
  void set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_obj_id() const;
  void _internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.InputResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class ModelRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.ModelRequest) */ {
 public:
  ModelRequest();
  virtual ~ModelRequest();

  ModelRequest(const ModelRequest& from);
  ModelRequest(ModelRequest&& from) noexcept
    : ModelRequest() {
    *this = ::std::move(from);
  }

  inline ModelRequest& operator=(const ModelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModelRequest& operator=(ModelRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ModelRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ModelRequest* internal_default_instance() {
    return reinterpret_cast<const ModelRequest*>(
               &_ModelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(ModelRequest& a, ModelRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ModelRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ModelRequest* New() const final {
    return CreateMaybeMessage<ModelRequest>(nullptr);
  }

  ModelRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ModelRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ModelRequest& from);
  void MergeFrom(const ModelRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModelRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.ModelRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInputIdsFieldNumber = 1,
    kOutputIdsFieldNumber = 2,
    kNameFieldNumber = 3,
    kConnectionIdFieldNumber = 4,
  };
  // repeated uint64 input_ids = 1;
  int input_ids_size() const;
  private:
  int _internal_input_ids_size() const;
  public:
  void clear_input_ids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_input_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_input_ids() const;
  void _internal_add_input_ids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_input_ids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 input_ids(int index) const;
  void set_input_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_input_ids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      input_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_input_ids();

  // repeated uint64 output_ids = 2;
  int output_ids_size() const;
  private:
  int _internal_output_ids_size() const;
  public:
  void clear_output_ids();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_output_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_output_ids() const;
  void _internal_add_output_ids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_output_ids();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 output_ids(int index) const;
  void set_output_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_output_ids(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      output_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_output_ids();

  // string name = 3;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string connection_id = 4;
  void clear_connection_id();
  const std::string& connection_id() const;
  void set_connection_id(const std::string& value);
  void set_connection_id(std::string&& value);
  void set_connection_id(const char* value);
  void set_connection_id(const char* value, size_t size);
  std::string* mutable_connection_id();
  std::string* release_connection_id();
  void set_allocated_connection_id(std::string* connection_id);
  private:
  const std::string& _internal_connection_id() const;
  void _internal_set_connection_id(const std::string& value);
  std::string* _internal_mutable_connection_id();
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.ModelRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > input_ids_;
  mutable std::atomic<int> _input_ids_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > output_ids_;
  mutable std::atomic<int> _output_ids_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr connection_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class ModelResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.ModelResponse) */ {
 public:
  ModelResponse();
  virtual ~ModelResponse();

  ModelResponse(const ModelResponse& from);
  ModelResponse(ModelResponse&& from) noexcept
    : ModelResponse() {
    *this = ::std::move(from);
  }

  inline ModelResponse& operator=(const ModelResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModelResponse& operator=(ModelResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ModelResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ModelResponse* internal_default_instance() {
    return reinterpret_cast<const ModelResponse*>(
               &_ModelResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(ModelResponse& a, ModelResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ModelResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ModelResponse* New() const final {
    return CreateMaybeMessage<ModelResponse>(nullptr);
  }

  ModelResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ModelResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ModelResponse& from);
  void MergeFrom(const ModelResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModelResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.ModelResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjIdFieldNumber = 1,
  };
  // uint64 obj_id = 1;
  void clear_obj_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id() const;
  void set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_obj_id() const;
  void _internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.ModelResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class ZeroPadding2DRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.ZeroPadding2DRequest) */ {
 public:
  ZeroPadding2DRequest();
  virtual ~ZeroPadding2DRequest();

  ZeroPadding2DRequest(const ZeroPadding2DRequest& from);
  ZeroPadding2DRequest(ZeroPadding2DRequest&& from) noexcept
    : ZeroPadding2DRequest() {
    *this = ::std::move(from);
  }

  inline ZeroPadding2DRequest& operator=(const ZeroPadding2DRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ZeroPadding2DRequest& operator=(ZeroPadding2DRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ZeroPadding2DRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ZeroPadding2DRequest* internal_default_instance() {
    return reinterpret_cast<const ZeroPadding2DRequest*>(
               &_ZeroPadding2DRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(ZeroPadding2DRequest& a, ZeroPadding2DRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ZeroPadding2DRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ZeroPadding2DRequest* New() const final {
    return CreateMaybeMessage<ZeroPadding2DRequest>(nullptr);
  }

  ZeroPadding2DRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ZeroPadding2DRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ZeroPadding2DRequest& from);
  void MergeFrom(const ZeroPadding2DRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ZeroPadding2DRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.ZeroPadding2DRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPaddingFieldNumber = 1,
    kDataFormatFieldNumber = 2,
    kNameFieldNumber = 3,
    kConnectionIdFieldNumber = 4,
  };
  // bytes padding = 1;
  void clear_padding();
  const std::string& padding() const;
  void set_padding(const std::string& value);
  void set_padding(std::string&& value);
  void set_padding(const char* value);
  void set_padding(const void* value, size_t size);
  std::string* mutable_padding();
  std::string* release_padding();
  void set_allocated_padding(std::string* padding);
  private:
  const std::string& _internal_padding() const;
  void _internal_set_padding(const std::string& value);
  std::string* _internal_mutable_padding();
  public:

  // string data_format = 2;
  void clear_data_format();
  const std::string& data_format() const;
  void set_data_format(const std::string& value);
  void set_data_format(std::string&& value);
  void set_data_format(const char* value);
  void set_data_format(const char* value, size_t size);
  std::string* mutable_data_format();
  std::string* release_data_format();
  void set_allocated_data_format(std::string* data_format);
  private:
  const std::string& _internal_data_format() const;
  void _internal_set_data_format(const std::string& value);
  std::string* _internal_mutable_data_format();
  public:

  // string name = 3;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string connection_id = 4;
  void clear_connection_id();
  const std::string& connection_id() const;
  void set_connection_id(const std::string& value);
  void set_connection_id(std::string&& value);
  void set_connection_id(const char* value);
  void set_connection_id(const char* value, size_t size);
  std::string* mutable_connection_id();
  std::string* release_connection_id();
  void set_allocated_connection_id(std::string* connection_id);
  private:
  const std::string& _internal_connection_id() const;
  void _internal_set_connection_id(const std::string& value);
  std::string* _internal_mutable_connection_id();
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.ZeroPadding2DRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr padding_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr data_format_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr connection_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class ZeroPadding2DResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.ZeroPadding2DResponse) */ {
 public:
  ZeroPadding2DResponse();
  virtual ~ZeroPadding2DResponse();

  ZeroPadding2DResponse(const ZeroPadding2DResponse& from);
  ZeroPadding2DResponse(ZeroPadding2DResponse&& from) noexcept
    : ZeroPadding2DResponse() {
    *this = ::std::move(from);
  }

  inline ZeroPadding2DResponse& operator=(const ZeroPadding2DResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ZeroPadding2DResponse& operator=(ZeroPadding2DResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ZeroPadding2DResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ZeroPadding2DResponse* internal_default_instance() {
    return reinterpret_cast<const ZeroPadding2DResponse*>(
               &_ZeroPadding2DResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(ZeroPadding2DResponse& a, ZeroPadding2DResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ZeroPadding2DResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ZeroPadding2DResponse* New() const final {
    return CreateMaybeMessage<ZeroPadding2DResponse>(nullptr);
  }

  ZeroPadding2DResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ZeroPadding2DResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ZeroPadding2DResponse& from);
  void MergeFrom(const ZeroPadding2DResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ZeroPadding2DResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.ZeroPadding2DResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjIdFieldNumber = 1,
  };
  // uint64 obj_id = 1;
  void clear_obj_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id() const;
  void set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_obj_id() const;
  void _internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.ZeroPadding2DResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class Conv2DRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.Conv2DRequest) */ {
 public:
  Conv2DRequest();
  virtual ~Conv2DRequest();

  Conv2DRequest(const Conv2DRequest& from);
  Conv2DRequest(Conv2DRequest&& from) noexcept
    : Conv2DRequest() {
    *this = ::std::move(from);
  }

  inline Conv2DRequest& operator=(const Conv2DRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline Conv2DRequest& operator=(Conv2DRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Conv2DRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Conv2DRequest* internal_default_instance() {
    return reinterpret_cast<const Conv2DRequest*>(
               &_Conv2DRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(Conv2DRequest& a, Conv2DRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(Conv2DRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Conv2DRequest* New() const final {
    return CreateMaybeMessage<Conv2DRequest>(nullptr);
  }

  Conv2DRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Conv2DRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Conv2DRequest& from);
  void MergeFrom(const Conv2DRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Conv2DRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.Conv2DRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPickledKernelSizeFieldNumber = 2,
    kPickledStridesFieldNumber = 3,
    kPaddingFieldNumber = 4,
    kPickledKernelRegularizerFieldNumber = 6,
    kNameFieldNumber = 7,
    kConnectionIdFieldNumber = 8,
    kFiltersFieldNumber = 1,
    kUseBiasFieldNumber = 5,
  };
  // bytes pickled_kernel_size = 2;
  void clear_pickled_kernel_size();
  const std::string& pickled_kernel_size() const;
  void set_pickled_kernel_size(const std::string& value);
  void set_pickled_kernel_size(std::string&& value);
  void set_pickled_kernel_size(const char* value);
  void set_pickled_kernel_size(const void* value, size_t size);
  std::string* mutable_pickled_kernel_size();
  std::string* release_pickled_kernel_size();
  void set_allocated_pickled_kernel_size(std::string* pickled_kernel_size);
  private:
  const std::string& _internal_pickled_kernel_size() const;
  void _internal_set_pickled_kernel_size(const std::string& value);
  std::string* _internal_mutable_pickled_kernel_size();
  public:

  // bytes pickled_strides = 3;
  void clear_pickled_strides();
  const std::string& pickled_strides() const;
  void set_pickled_strides(const std::string& value);
  void set_pickled_strides(std::string&& value);
  void set_pickled_strides(const char* value);
  void set_pickled_strides(const void* value, size_t size);
  std::string* mutable_pickled_strides();
  std::string* release_pickled_strides();
  void set_allocated_pickled_strides(std::string* pickled_strides);
  private:
  const std::string& _internal_pickled_strides() const;
  void _internal_set_pickled_strides(const std::string& value);
  std::string* _internal_mutable_pickled_strides();
  public:

  // string padding = 4;
  void clear_padding();
  const std::string& padding() const;
  void set_padding(const std::string& value);
  void set_padding(std::string&& value);
  void set_padding(const char* value);
  void set_padding(const char* value, size_t size);
  std::string* mutable_padding();
  std::string* release_padding();
  void set_allocated_padding(std::string* padding);
  private:
  const std::string& _internal_padding() const;
  void _internal_set_padding(const std::string& value);
  std::string* _internal_mutable_padding();
  public:

  // bytes pickled_kernel_regularizer = 6;
  void clear_pickled_kernel_regularizer();
  const std::string& pickled_kernel_regularizer() const;
  void set_pickled_kernel_regularizer(const std::string& value);
  void set_pickled_kernel_regularizer(std::string&& value);
  void set_pickled_kernel_regularizer(const char* value);
  void set_pickled_kernel_regularizer(const void* value, size_t size);
  std::string* mutable_pickled_kernel_regularizer();
  std::string* release_pickled_kernel_regularizer();
  void set_allocated_pickled_kernel_regularizer(std::string* pickled_kernel_regularizer);
  private:
  const std::string& _internal_pickled_kernel_regularizer() const;
  void _internal_set_pickled_kernel_regularizer(const std::string& value);
  std::string* _internal_mutable_pickled_kernel_regularizer();
  public:

  // string name = 7;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string connection_id = 8;
  void clear_connection_id();
  const std::string& connection_id() const;
  void set_connection_id(const std::string& value);
  void set_connection_id(std::string&& value);
  void set_connection_id(const char* value);
  void set_connection_id(const char* value, size_t size);
  std::string* mutable_connection_id();
  std::string* release_connection_id();
  void set_allocated_connection_id(std::string* connection_id);
  private:
  const std::string& _internal_connection_id() const;
  void _internal_set_connection_id(const std::string& value);
  std::string* _internal_mutable_connection_id();
  public:

  // int32 filters = 1;
  void clear_filters();
  ::PROTOBUF_NAMESPACE_ID::int32 filters() const;
  void set_filters(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_filters() const;
  void _internal_set_filters(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // bool use_bias = 5;
  void clear_use_bias();
  bool use_bias() const;
  void set_use_bias(bool value);
  private:
  bool _internal_use_bias() const;
  void _internal_set_use_bias(bool value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.Conv2DRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pickled_kernel_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pickled_strides_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr padding_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pickled_kernel_regularizer_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr connection_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 filters_;
  bool use_bias_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class Conv2DResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.Conv2DResponse) */ {
 public:
  Conv2DResponse();
  virtual ~Conv2DResponse();

  Conv2DResponse(const Conv2DResponse& from);
  Conv2DResponse(Conv2DResponse&& from) noexcept
    : Conv2DResponse() {
    *this = ::std::move(from);
  }

  inline Conv2DResponse& operator=(const Conv2DResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline Conv2DResponse& operator=(Conv2DResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Conv2DResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Conv2DResponse* internal_default_instance() {
    return reinterpret_cast<const Conv2DResponse*>(
               &_Conv2DResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(Conv2DResponse& a, Conv2DResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(Conv2DResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Conv2DResponse* New() const final {
    return CreateMaybeMessage<Conv2DResponse>(nullptr);
  }

  Conv2DResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Conv2DResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Conv2DResponse& from);
  void MergeFrom(const Conv2DResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Conv2DResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.Conv2DResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjIdFieldNumber = 1,
  };
  // uint64 obj_id = 1;
  void clear_obj_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id() const;
  void set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_obj_id() const;
  void _internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.Conv2DResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class LeakyReluRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.LeakyReluRequest) */ {
 public:
  LeakyReluRequest();
  virtual ~LeakyReluRequest();

  LeakyReluRequest(const LeakyReluRequest& from);
  LeakyReluRequest(LeakyReluRequest&& from) noexcept
    : LeakyReluRequest() {
    *this = ::std::move(from);
  }

  inline LeakyReluRequest& operator=(const LeakyReluRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LeakyReluRequest& operator=(LeakyReluRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LeakyReluRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LeakyReluRequest* internal_default_instance() {
    return reinterpret_cast<const LeakyReluRequest*>(
               &_LeakyReluRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(LeakyReluRequest& a, LeakyReluRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(LeakyReluRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LeakyReluRequest* New() const final {
    return CreateMaybeMessage<LeakyReluRequest>(nullptr);
  }

  LeakyReluRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LeakyReluRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LeakyReluRequest& from);
  void MergeFrom(const LeakyReluRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LeakyReluRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.LeakyReluRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kConnectionIdFieldNumber = 3,
    kAlphaFieldNumber = 1,
  };
  // string name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string connection_id = 3;
  void clear_connection_id();
  const std::string& connection_id() const;
  void set_connection_id(const std::string& value);
  void set_connection_id(std::string&& value);
  void set_connection_id(const char* value);
  void set_connection_id(const char* value, size_t size);
  std::string* mutable_connection_id();
  std::string* release_connection_id();
  void set_allocated_connection_id(std::string* connection_id);
  private:
  const std::string& _internal_connection_id() const;
  void _internal_set_connection_id(const std::string& value);
  std::string* _internal_mutable_connection_id();
  public:

  // float alpha = 1;
  void clear_alpha();
  float alpha() const;
  void set_alpha(float value);
  private:
  float _internal_alpha() const;
  void _internal_set_alpha(float value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.LeakyReluRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr connection_id_;
  float alpha_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class LeakyReluResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.LeakyReluResponse) */ {
 public:
  LeakyReluResponse();
  virtual ~LeakyReluResponse();

  LeakyReluResponse(const LeakyReluResponse& from);
  LeakyReluResponse(LeakyReluResponse&& from) noexcept
    : LeakyReluResponse() {
    *this = ::std::move(from);
  }

  inline LeakyReluResponse& operator=(const LeakyReluResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LeakyReluResponse& operator=(LeakyReluResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LeakyReluResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LeakyReluResponse* internal_default_instance() {
    return reinterpret_cast<const LeakyReluResponse*>(
               &_LeakyReluResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(LeakyReluResponse& a, LeakyReluResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(LeakyReluResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LeakyReluResponse* New() const final {
    return CreateMaybeMessage<LeakyReluResponse>(nullptr);
  }

  LeakyReluResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LeakyReluResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LeakyReluResponse& from);
  void MergeFrom(const LeakyReluResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LeakyReluResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.LeakyReluResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjIdFieldNumber = 1,
  };
  // uint64 obj_id = 1;
  void clear_obj_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id() const;
  void set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_obj_id() const;
  void _internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.LeakyReluResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class AddRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.AddRequest) */ {
 public:
  AddRequest();
  virtual ~AddRequest();

  AddRequest(const AddRequest& from);
  AddRequest(AddRequest&& from) noexcept
    : AddRequest() {
    *this = ::std::move(from);
  }

  inline AddRequest& operator=(const AddRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddRequest& operator=(AddRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AddRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddRequest* internal_default_instance() {
    return reinterpret_cast<const AddRequest*>(
               &_AddRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(AddRequest& a, AddRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AddRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AddRequest* New() const final {
    return CreateMaybeMessage<AddRequest>(nullptr);
  }

  AddRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AddRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AddRequest& from);
  void MergeFrom(const AddRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.AddRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kConnectionIdFieldNumber = 2,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string connection_id = 2;
  void clear_connection_id();
  const std::string& connection_id() const;
  void set_connection_id(const std::string& value);
  void set_connection_id(std::string&& value);
  void set_connection_id(const char* value);
  void set_connection_id(const char* value, size_t size);
  std::string* mutable_connection_id();
  std::string* release_connection_id();
  void set_allocated_connection_id(std::string* connection_id);
  private:
  const std::string& _internal_connection_id() const;
  void _internal_set_connection_id(const std::string& value);
  std::string* _internal_mutable_connection_id();
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.AddRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr connection_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class AddResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.AddResponse) */ {
 public:
  AddResponse();
  virtual ~AddResponse();

  AddResponse(const AddResponse& from);
  AddResponse(AddResponse&& from) noexcept
    : AddResponse() {
    *this = ::std::move(from);
  }

  inline AddResponse& operator=(const AddResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddResponse& operator=(AddResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AddResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddResponse* internal_default_instance() {
    return reinterpret_cast<const AddResponse*>(
               &_AddResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(AddResponse& a, AddResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(AddResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AddResponse* New() const final {
    return CreateMaybeMessage<AddResponse>(nullptr);
  }

  AddResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AddResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AddResponse& from);
  void MergeFrom(const AddResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.AddResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjIdFieldNumber = 1,
  };
  // uint64 obj_id = 1;
  void clear_obj_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id() const;
  void set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_obj_id() const;
  void _internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.AddResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class LambdaRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.LambdaRequest) */ {
 public:
  LambdaRequest();
  virtual ~LambdaRequest();

  LambdaRequest(const LambdaRequest& from);
  LambdaRequest(LambdaRequest&& from) noexcept
    : LambdaRequest() {
    *this = ::std::move(from);
  }

  inline LambdaRequest& operator=(const LambdaRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LambdaRequest& operator=(LambdaRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LambdaRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LambdaRequest* internal_default_instance() {
    return reinterpret_cast<const LambdaRequest*>(
               &_LambdaRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(LambdaRequest& a, LambdaRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(LambdaRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LambdaRequest* New() const final {
    return CreateMaybeMessage<LambdaRequest>(nullptr);
  }

  LambdaRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LambdaRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LambdaRequest& from);
  void MergeFrom(const LambdaRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LambdaRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.LambdaRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExprFieldNumber = 1,
    kNameFieldNumber = 2,
    kConnectionIdFieldNumber = 3,
  };
  // string expr = 1;
  void clear_expr();
  const std::string& expr() const;
  void set_expr(const std::string& value);
  void set_expr(std::string&& value);
  void set_expr(const char* value);
  void set_expr(const char* value, size_t size);
  std::string* mutable_expr();
  std::string* release_expr();
  void set_allocated_expr(std::string* expr);
  private:
  const std::string& _internal_expr() const;
  void _internal_set_expr(const std::string& value);
  std::string* _internal_mutable_expr();
  public:

  // string name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string connection_id = 3;
  void clear_connection_id();
  const std::string& connection_id() const;
  void set_connection_id(const std::string& value);
  void set_connection_id(std::string&& value);
  void set_connection_id(const char* value);
  void set_connection_id(const char* value, size_t size);
  std::string* mutable_connection_id();
  std::string* release_connection_id();
  void set_allocated_connection_id(std::string* connection_id);
  private:
  const std::string& _internal_connection_id() const;
  void _internal_set_connection_id(const std::string& value);
  std::string* _internal_mutable_connection_id();
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.LambdaRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr expr_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr connection_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class LambdaResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.LambdaResponse) */ {
 public:
  LambdaResponse();
  virtual ~LambdaResponse();

  LambdaResponse(const LambdaResponse& from);
  LambdaResponse(LambdaResponse&& from) noexcept
    : LambdaResponse() {
    *this = ::std::move(from);
  }

  inline LambdaResponse& operator=(const LambdaResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LambdaResponse& operator=(LambdaResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LambdaResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LambdaResponse* internal_default_instance() {
    return reinterpret_cast<const LambdaResponse*>(
               &_LambdaResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(LambdaResponse& a, LambdaResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(LambdaResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LambdaResponse* New() const final {
    return CreateMaybeMessage<LambdaResponse>(nullptr);
  }

  LambdaResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LambdaResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LambdaResponse& from);
  void MergeFrom(const LambdaResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LambdaResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.LambdaResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjIdFieldNumber = 1,
  };
  // uint64 obj_id = 1;
  void clear_obj_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id() const;
  void set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_obj_id() const;
  void _internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.LambdaResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class UpSampling2DRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.UpSampling2DRequest) */ {
 public:
  UpSampling2DRequest();
  virtual ~UpSampling2DRequest();

  UpSampling2DRequest(const UpSampling2DRequest& from);
  UpSampling2DRequest(UpSampling2DRequest&& from) noexcept
    : UpSampling2DRequest() {
    *this = ::std::move(from);
  }

  inline UpSampling2DRequest& operator=(const UpSampling2DRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpSampling2DRequest& operator=(UpSampling2DRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpSampling2DRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpSampling2DRequest* internal_default_instance() {
    return reinterpret_cast<const UpSampling2DRequest*>(
               &_UpSampling2DRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(UpSampling2DRequest& a, UpSampling2DRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UpSampling2DRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpSampling2DRequest* New() const final {
    return CreateMaybeMessage<UpSampling2DRequest>(nullptr);
  }

  UpSampling2DRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpSampling2DRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpSampling2DRequest& from);
  void MergeFrom(const UpSampling2DRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpSampling2DRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.UpSampling2DRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConnectionIdFieldNumber = 2,
    kSizeFieldNumber = 1,
  };
  // string connection_id = 2;
  void clear_connection_id();
  const std::string& connection_id() const;
  void set_connection_id(const std::string& value);
  void set_connection_id(std::string&& value);
  void set_connection_id(const char* value);
  void set_connection_id(const char* value, size_t size);
  std::string* mutable_connection_id();
  std::string* release_connection_id();
  void set_allocated_connection_id(std::string* connection_id);
  private:
  const std::string& _internal_connection_id() const;
  void _internal_set_connection_id(const std::string& value);
  std::string* _internal_mutable_connection_id();
  public:

  // uint32 size = 1;
  void clear_size();
  ::PROTOBUF_NAMESPACE_ID::uint32 size() const;
  void set_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_size() const;
  void _internal_set_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.UpSampling2DRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr connection_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class UpSampling2DResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.UpSampling2DResponse) */ {
 public:
  UpSampling2DResponse();
  virtual ~UpSampling2DResponse();

  UpSampling2DResponse(const UpSampling2DResponse& from);
  UpSampling2DResponse(UpSampling2DResponse&& from) noexcept
    : UpSampling2DResponse() {
    *this = ::std::move(from);
  }

  inline UpSampling2DResponse& operator=(const UpSampling2DResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpSampling2DResponse& operator=(UpSampling2DResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpSampling2DResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpSampling2DResponse* internal_default_instance() {
    return reinterpret_cast<const UpSampling2DResponse*>(
               &_UpSampling2DResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(UpSampling2DResponse& a, UpSampling2DResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(UpSampling2DResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpSampling2DResponse* New() const final {
    return CreateMaybeMessage<UpSampling2DResponse>(nullptr);
  }

  UpSampling2DResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpSampling2DResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpSampling2DResponse& from);
  void MergeFrom(const UpSampling2DResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpSampling2DResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.UpSampling2DResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjIdFieldNumber = 1,
  };
  // uint64 obj_id = 1;
  void clear_obj_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id() const;
  void set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_obj_id() const;
  void _internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.UpSampling2DResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class ConcatenateRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.ConcatenateRequest) */ {
 public:
  ConcatenateRequest();
  virtual ~ConcatenateRequest();

  ConcatenateRequest(const ConcatenateRequest& from);
  ConcatenateRequest(ConcatenateRequest&& from) noexcept
    : ConcatenateRequest() {
    *this = ::std::move(from);
  }

  inline ConcatenateRequest& operator=(const ConcatenateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConcatenateRequest& operator=(ConcatenateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ConcatenateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConcatenateRequest* internal_default_instance() {
    return reinterpret_cast<const ConcatenateRequest*>(
               &_ConcatenateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(ConcatenateRequest& a, ConcatenateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ConcatenateRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ConcatenateRequest* New() const final {
    return CreateMaybeMessage<ConcatenateRequest>(nullptr);
  }

  ConcatenateRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ConcatenateRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ConcatenateRequest& from);
  void MergeFrom(const ConcatenateRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ConcatenateRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.ConcatenateRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConnectionIdFieldNumber = 1,
  };
  // string connection_id = 1;
  void clear_connection_id();
  const std::string& connection_id() const;
  void set_connection_id(const std::string& value);
  void set_connection_id(std::string&& value);
  void set_connection_id(const char* value);
  void set_connection_id(const char* value, size_t size);
  std::string* mutable_connection_id();
  std::string* release_connection_id();
  void set_allocated_connection_id(std::string* connection_id);
  private:
  const std::string& _internal_connection_id() const;
  void _internal_set_connection_id(const std::string& value);
  std::string* _internal_mutable_connection_id();
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.ConcatenateRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr connection_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class ContcatenateResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.ContcatenateResponse) */ {
 public:
  ContcatenateResponse();
  virtual ~ContcatenateResponse();

  ContcatenateResponse(const ContcatenateResponse& from);
  ContcatenateResponse(ContcatenateResponse&& from) noexcept
    : ContcatenateResponse() {
    *this = ::std::move(from);
  }

  inline ContcatenateResponse& operator=(const ContcatenateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ContcatenateResponse& operator=(ContcatenateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ContcatenateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ContcatenateResponse* internal_default_instance() {
    return reinterpret_cast<const ContcatenateResponse*>(
               &_ContcatenateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(ContcatenateResponse& a, ContcatenateResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ContcatenateResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ContcatenateResponse* New() const final {
    return CreateMaybeMessage<ContcatenateResponse>(nullptr);
  }

  ContcatenateResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ContcatenateResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ContcatenateResponse& from);
  void MergeFrom(const ContcatenateResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ContcatenateResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.ContcatenateResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjIdFieldNumber = 1,
  };
  // uint64 obj_id = 1;
  void clear_obj_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id() const;
  void set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_obj_id() const;
  void _internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.ContcatenateResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class l2Request :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.l2Request) */ {
 public:
  l2Request();
  virtual ~l2Request();

  l2Request(const l2Request& from);
  l2Request(l2Request&& from) noexcept
    : l2Request() {
    *this = ::std::move(from);
  }

  inline l2Request& operator=(const l2Request& from) {
    CopyFrom(from);
    return *this;
  }
  inline l2Request& operator=(l2Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const l2Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const l2Request* internal_default_instance() {
    return reinterpret_cast<const l2Request*>(
               &_l2Request_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(l2Request& a, l2Request& b) {
    a.Swap(&b);
  }
  inline void Swap(l2Request* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline l2Request* New() const final {
    return CreateMaybeMessage<l2Request>(nullptr);
  }

  l2Request* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<l2Request>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const l2Request& from);
  void MergeFrom(const l2Request& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(l2Request* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.l2Request";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConnectionIdFieldNumber = 2,
    kLFieldNumber = 1,
  };
  // string connection_id = 2;
  void clear_connection_id();
  const std::string& connection_id() const;
  void set_connection_id(const std::string& value);
  void set_connection_id(std::string&& value);
  void set_connection_id(const char* value);
  void set_connection_id(const char* value, size_t size);
  std::string* mutable_connection_id();
  std::string* release_connection_id();
  void set_allocated_connection_id(std::string* connection_id);
  private:
  const std::string& _internal_connection_id() const;
  void _internal_set_connection_id(const std::string& value);
  std::string* _internal_mutable_connection_id();
  public:

  // float l = 1;
  void clear_l();
  float l() const;
  void set_l(float value);
  private:
  float _internal_l() const;
  void _internal_set_l(float value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.l2Request)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr connection_id_;
  float l_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class l2Response :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.l2Response) */ {
 public:
  l2Response();
  virtual ~l2Response();

  l2Response(const l2Response& from);
  l2Response(l2Response&& from) noexcept
    : l2Response() {
    *this = ::std::move(from);
  }

  inline l2Response& operator=(const l2Response& from) {
    CopyFrom(from);
    return *this;
  }
  inline l2Response& operator=(l2Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const l2Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const l2Response* internal_default_instance() {
    return reinterpret_cast<const l2Response*>(
               &_l2Response_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(l2Response& a, l2Response& b) {
    a.Swap(&b);
  }
  inline void Swap(l2Response* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline l2Response* New() const final {
    return CreateMaybeMessage<l2Response>(nullptr);
  }

  l2Response* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<l2Response>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const l2Response& from);
  void MergeFrom(const l2Response& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(l2Response* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.l2Response";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPickledL2FieldNumber = 1,
  };
  // bytes pickled_l2 = 1;
  void clear_pickled_l2();
  const std::string& pickled_l2() const;
  void set_pickled_l2(const std::string& value);
  void set_pickled_l2(std::string&& value);
  void set_pickled_l2(const char* value);
  void set_pickled_l2(const void* value, size_t size);
  std::string* mutable_pickled_l2();
  std::string* release_pickled_l2();
  void set_allocated_pickled_l2(std::string* pickled_l2);
  private:
  const std::string& _internal_pickled_l2() const;
  void _internal_set_pickled_l2(const std::string& value);
  std::string* _internal_mutable_pickled_l2();
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.l2Response)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pickled_l2_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class ImageResizeRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.ImageResizeRequest) */ {
 public:
  ImageResizeRequest();
  virtual ~ImageResizeRequest();

  ImageResizeRequest(const ImageResizeRequest& from);
  ImageResizeRequest(ImageResizeRequest&& from) noexcept
    : ImageResizeRequest() {
    *this = ::std::move(from);
  }

  inline ImageResizeRequest& operator=(const ImageResizeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImageResizeRequest& operator=(ImageResizeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ImageResizeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImageResizeRequest* internal_default_instance() {
    return reinterpret_cast<const ImageResizeRequest*>(
               &_ImageResizeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(ImageResizeRequest& a, ImageResizeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ImageResizeRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ImageResizeRequest* New() const final {
    return CreateMaybeMessage<ImageResizeRequest>(nullptr);
  }

  ImageResizeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ImageResizeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ImageResizeRequest& from);
  void MergeFrom(const ImageResizeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImageResizeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.ImageResizeRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSizeFieldNumber = 2,
    kConnectionIdFieldNumber = 3,
    kObjIdFieldNumber = 1,
  };
  // repeated uint32 size = 2;
  int size_size() const;
  private:
  int _internal_size_size() const;
  public:
  void clear_size();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_size(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_size() const;
  void _internal_add_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_size();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 size(int index) const;
  void set_size(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_size(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      size() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_size();

  // string connection_id = 3;
  void clear_connection_id();
  const std::string& connection_id() const;
  void set_connection_id(const std::string& value);
  void set_connection_id(std::string&& value);
  void set_connection_id(const char* value);
  void set_connection_id(const char* value, size_t size);
  std::string* mutable_connection_id();
  std::string* release_connection_id();
  void set_allocated_connection_id(std::string* connection_id);
  private:
  const std::string& _internal_connection_id() const;
  void _internal_set_connection_id(const std::string& value);
  std::string* _internal_mutable_connection_id();
  public:

  // uint64 obj_id = 1;
  void clear_obj_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id() const;
  void set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_obj_id() const;
  void _internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.ImageResizeRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > size_;
  mutable std::atomic<int> _size_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr connection_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class ImageResizeResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.ImageResizeResponse) */ {
 public:
  ImageResizeResponse();
  virtual ~ImageResizeResponse();

  ImageResizeResponse(const ImageResizeResponse& from);
  ImageResizeResponse(ImageResizeResponse&& from) noexcept
    : ImageResizeResponse() {
    *this = ::std::move(from);
  }

  inline ImageResizeResponse& operator=(const ImageResizeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImageResizeResponse& operator=(ImageResizeResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ImageResizeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ImageResizeResponse* internal_default_instance() {
    return reinterpret_cast<const ImageResizeResponse*>(
               &_ImageResizeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(ImageResizeResponse& a, ImageResizeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ImageResizeResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ImageResizeResponse* New() const final {
    return CreateMaybeMessage<ImageResizeResponse>(nullptr);
  }

  ImageResizeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ImageResizeResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ImageResizeResponse& from);
  void MergeFrom(const ImageResizeResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImageResizeResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.ImageResizeResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjIdFieldNumber = 1,
  };
  // uint64 obj_id = 1;
  void clear_obj_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id() const;
  void set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_obj_id() const;
  void _internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.ImageResizeResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class TensorShapeRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.TensorShapeRequest) */ {
 public:
  TensorShapeRequest();
  virtual ~TensorShapeRequest();

  TensorShapeRequest(const TensorShapeRequest& from);
  TensorShapeRequest(TensorShapeRequest&& from) noexcept
    : TensorShapeRequest() {
    *this = ::std::move(from);
  }

  inline TensorShapeRequest& operator=(const TensorShapeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TensorShapeRequest& operator=(TensorShapeRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TensorShapeRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TensorShapeRequest* internal_default_instance() {
    return reinterpret_cast<const TensorShapeRequest*>(
               &_TensorShapeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(TensorShapeRequest& a, TensorShapeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(TensorShapeRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TensorShapeRequest* New() const final {
    return CreateMaybeMessage<TensorShapeRequest>(nullptr);
  }

  TensorShapeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TensorShapeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TensorShapeRequest& from);
  void MergeFrom(const TensorShapeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TensorShapeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.TensorShapeRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConnectionIdFieldNumber = 4,
    kObjIdFieldNumber = 1,
    kStartFieldNumber = 2,
    kEndFieldNumber = 3,
  };
  // string connection_id = 4;
  void clear_connection_id();
  const std::string& connection_id() const;
  void set_connection_id(const std::string& value);
  void set_connection_id(std::string&& value);
  void set_connection_id(const char* value);
  void set_connection_id(const char* value, size_t size);
  std::string* mutable_connection_id();
  std::string* release_connection_id();
  void set_allocated_connection_id(std::string* connection_id);
  private:
  const std::string& _internal_connection_id() const;
  void _internal_set_connection_id(const std::string& value);
  std::string* _internal_mutable_connection_id();
  public:

  // uint64 obj_id = 1;
  void clear_obj_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id() const;
  void set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_obj_id() const;
  void _internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 start = 2;
  void clear_start();
  ::PROTOBUF_NAMESPACE_ID::uint32 start() const;
  void set_start(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_start() const;
  void _internal_set_start(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 end = 3;
  void clear_end();
  ::PROTOBUF_NAMESPACE_ID::uint32 end() const;
  void set_end(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_end() const;
  void _internal_set_end(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.TensorShapeRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr connection_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 start_;
  ::PROTOBUF_NAMESPACE_ID::uint32 end_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class TensorShapeResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.TensorShapeResponse) */ {
 public:
  TensorShapeResponse();
  virtual ~TensorShapeResponse();

  TensorShapeResponse(const TensorShapeResponse& from);
  TensorShapeResponse(TensorShapeResponse&& from) noexcept
    : TensorShapeResponse() {
    *this = ::std::move(from);
  }

  inline TensorShapeResponse& operator=(const TensorShapeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TensorShapeResponse& operator=(TensorShapeResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TensorShapeResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TensorShapeResponse* internal_default_instance() {
    return reinterpret_cast<const TensorShapeResponse*>(
               &_TensorShapeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(TensorShapeResponse& a, TensorShapeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(TensorShapeResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TensorShapeResponse* New() const final {
    return CreateMaybeMessage<TensorShapeResponse>(nullptr);
  }

  TensorShapeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TensorShapeResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TensorShapeResponse& from);
  void MergeFrom(const TensorShapeResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TensorShapeResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.TensorShapeResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kShapeFieldNumber = 2,
    kObjIdFieldNumber = 1,
  };
  // repeated int32 shape = 2;
  int shape_size() const;
  private:
  int _internal_shape_size() const;
  public:
  void clear_shape();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_shape(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_shape() const;
  void _internal_add_shape(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_shape();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 shape(int index) const;
  void set_shape(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_shape(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      shape() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_shape();

  // uint64 obj_id = 1;
  void clear_obj_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id() const;
  void set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_obj_id() const;
  void _internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.TensorShapeResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > shape_;
  mutable std::atomic<int> _shape_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class LoadWeightsRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.LoadWeightsRequest) */ {
 public:
  LoadWeightsRequest();
  virtual ~LoadWeightsRequest();

  LoadWeightsRequest(const LoadWeightsRequest& from);
  LoadWeightsRequest(LoadWeightsRequest&& from) noexcept
    : LoadWeightsRequest() {
    *this = ::std::move(from);
  }

  inline LoadWeightsRequest& operator=(const LoadWeightsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoadWeightsRequest& operator=(LoadWeightsRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LoadWeightsRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoadWeightsRequest* internal_default_instance() {
    return reinterpret_cast<const LoadWeightsRequest*>(
               &_LoadWeightsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(LoadWeightsRequest& a, LoadWeightsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(LoadWeightsRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LoadWeightsRequest* New() const final {
    return CreateMaybeMessage<LoadWeightsRequest>(nullptr);
  }

  LoadWeightsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LoadWeightsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LoadWeightsRequest& from);
  void MergeFrom(const LoadWeightsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoadWeightsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.LoadWeightsRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWeightsPathFieldNumber = 2,
    kConnectionIdFieldNumber = 3,
    kModelObjIdFieldNumber = 1,
  };
  // string weights_path = 2;
  void clear_weights_path();
  const std::string& weights_path() const;
  void set_weights_path(const std::string& value);
  void set_weights_path(std::string&& value);
  void set_weights_path(const char* value);
  void set_weights_path(const char* value, size_t size);
  std::string* mutable_weights_path();
  std::string* release_weights_path();
  void set_allocated_weights_path(std::string* weights_path);
  private:
  const std::string& _internal_weights_path() const;
  void _internal_set_weights_path(const std::string& value);
  std::string* _internal_mutable_weights_path();
  public:

  // string connection_id = 3;
  void clear_connection_id();
  const std::string& connection_id() const;
  void set_connection_id(const std::string& value);
  void set_connection_id(std::string&& value);
  void set_connection_id(const char* value);
  void set_connection_id(const char* value, size_t size);
  std::string* mutable_connection_id();
  std::string* release_connection_id();
  void set_allocated_connection_id(std::string* connection_id);
  private:
  const std::string& _internal_connection_id() const;
  void _internal_set_connection_id(const std::string& value);
  std::string* _internal_mutable_connection_id();
  public:

  // uint64 model_obj_id = 1;
  void clear_model_obj_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 model_obj_id() const;
  void set_model_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_model_obj_id() const;
  void _internal_set_model_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.LoadWeightsRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr weights_path_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr connection_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 model_obj_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class LoadWeightsResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.LoadWeightsResponse) */ {
 public:
  LoadWeightsResponse();
  virtual ~LoadWeightsResponse();

  LoadWeightsResponse(const LoadWeightsResponse& from);
  LoadWeightsResponse(LoadWeightsResponse&& from) noexcept
    : LoadWeightsResponse() {
    *this = ::std::move(from);
  }

  inline LoadWeightsResponse& operator=(const LoadWeightsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoadWeightsResponse& operator=(LoadWeightsResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LoadWeightsResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoadWeightsResponse* internal_default_instance() {
    return reinterpret_cast<const LoadWeightsResponse*>(
               &_LoadWeightsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(LoadWeightsResponse& a, LoadWeightsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(LoadWeightsResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LoadWeightsResponse* New() const final {
    return CreateMaybeMessage<LoadWeightsResponse>(nullptr);
  }

  LoadWeightsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LoadWeightsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LoadWeightsResponse& from);
  void MergeFrom(const LoadWeightsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoadWeightsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.LoadWeightsResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjIdFieldNumber = 1,
  };
  // uint64 obj_id = 1;
  void clear_obj_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id() const;
  void set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_obj_id() const;
  void _internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.LoadWeightsResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class ExpectPartialRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.ExpectPartialRequest) */ {
 public:
  ExpectPartialRequest();
  virtual ~ExpectPartialRequest();

  ExpectPartialRequest(const ExpectPartialRequest& from);
  ExpectPartialRequest(ExpectPartialRequest&& from) noexcept
    : ExpectPartialRequest() {
    *this = ::std::move(from);
  }

  inline ExpectPartialRequest& operator=(const ExpectPartialRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExpectPartialRequest& operator=(ExpectPartialRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ExpectPartialRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExpectPartialRequest* internal_default_instance() {
    return reinterpret_cast<const ExpectPartialRequest*>(
               &_ExpectPartialRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(ExpectPartialRequest& a, ExpectPartialRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ExpectPartialRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ExpectPartialRequest* New() const final {
    return CreateMaybeMessage<ExpectPartialRequest>(nullptr);
  }

  ExpectPartialRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ExpectPartialRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ExpectPartialRequest& from);
  void MergeFrom(const ExpectPartialRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExpectPartialRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.ExpectPartialRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConnectionIdFieldNumber = 2,
    kObjIdFieldNumber = 1,
  };
  // string connection_id = 2;
  void clear_connection_id();
  const std::string& connection_id() const;
  void set_connection_id(const std::string& value);
  void set_connection_id(std::string&& value);
  void set_connection_id(const char* value);
  void set_connection_id(const char* value, size_t size);
  std::string* mutable_connection_id();
  std::string* release_connection_id();
  void set_allocated_connection_id(std::string* connection_id);
  private:
  const std::string& _internal_connection_id() const;
  void _internal_set_connection_id(const std::string& value);
  std::string* _internal_mutable_connection_id();
  public:

  // uint64 obj_id = 1;
  void clear_obj_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id() const;
  void set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_obj_id() const;
  void _internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.ExpectPartialRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr connection_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class ExpectPartialResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.ExpectPartialResponse) */ {
 public:
  ExpectPartialResponse();
  virtual ~ExpectPartialResponse();

  ExpectPartialResponse(const ExpectPartialResponse& from);
  ExpectPartialResponse(ExpectPartialResponse&& from) noexcept
    : ExpectPartialResponse() {
    *this = ::std::move(from);
  }

  inline ExpectPartialResponse& operator=(const ExpectPartialResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExpectPartialResponse& operator=(ExpectPartialResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ExpectPartialResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExpectPartialResponse* internal_default_instance() {
    return reinterpret_cast<const ExpectPartialResponse*>(
               &_ExpectPartialResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(ExpectPartialResponse& a, ExpectPartialResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ExpectPartialResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ExpectPartialResponse* New() const final {
    return CreateMaybeMessage<ExpectPartialResponse>(nullptr);
  }

  ExpectPartialResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ExpectPartialResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ExpectPartialResponse& from);
  void MergeFrom(const ExpectPartialResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExpectPartialResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.ExpectPartialResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:yolo_tf.ExpectPartialResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class DivideRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.DivideRequest) */ {
 public:
  DivideRequest();
  virtual ~DivideRequest();

  DivideRequest(const DivideRequest& from);
  DivideRequest(DivideRequest&& from) noexcept
    : DivideRequest() {
    *this = ::std::move(from);
  }

  inline DivideRequest& operator=(const DivideRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DivideRequest& operator=(DivideRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DivideRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DivideRequest* internal_default_instance() {
    return reinterpret_cast<const DivideRequest*>(
               &_DivideRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(DivideRequest& a, DivideRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DivideRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DivideRequest* New() const final {
    return CreateMaybeMessage<DivideRequest>(nullptr);
  }

  DivideRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DivideRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DivideRequest& from);
  void MergeFrom(const DivideRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DivideRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.DivideRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConnectionIdFieldNumber = 3,
    kObjIdFieldNumber = 1,
    kDivisorFieldNumber = 2,
  };
  // string connection_id = 3;
  void clear_connection_id();
  const std::string& connection_id() const;
  void set_connection_id(const std::string& value);
  void set_connection_id(std::string&& value);
  void set_connection_id(const char* value);
  void set_connection_id(const char* value, size_t size);
  std::string* mutable_connection_id();
  std::string* release_connection_id();
  void set_allocated_connection_id(std::string* connection_id);
  private:
  const std::string& _internal_connection_id() const;
  void _internal_set_connection_id(const std::string& value);
  std::string* _internal_mutable_connection_id();
  public:

  // uint64 obj_id = 1;
  void clear_obj_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id() const;
  void set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_obj_id() const;
  void _internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 divisor = 2;
  void clear_divisor();
  ::PROTOBUF_NAMESPACE_ID::int32 divisor() const;
  void set_divisor(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_divisor() const;
  void _internal_set_divisor(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.DivideRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr connection_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 divisor_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class DivideResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.DivideResponse) */ {
 public:
  DivideResponse();
  virtual ~DivideResponse();

  DivideResponse(const DivideResponse& from);
  DivideResponse(DivideResponse&& from) noexcept
    : DivideResponse() {
    *this = ::std::move(from);
  }

  inline DivideResponse& operator=(const DivideResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DivideResponse& operator=(DivideResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DivideResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DivideResponse* internal_default_instance() {
    return reinterpret_cast<const DivideResponse*>(
               &_DivideResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(DivideResponse& a, DivideResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DivideResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DivideResponse* New() const final {
    return CreateMaybeMessage<DivideResponse>(nullptr);
  }

  DivideResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DivideResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DivideResponse& from);
  void MergeFrom(const DivideResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DivideResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.DivideResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjIdFieldNumber = 1,
  };
  // uint64 obj_id = 1;
  void clear_obj_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id() const;
  void set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_obj_id() const;
  void _internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.DivideResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class IndexingRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.IndexingRequest) */ {
 public:
  IndexingRequest();
  virtual ~IndexingRequest();

  IndexingRequest(const IndexingRequest& from);
  IndexingRequest(IndexingRequest&& from) noexcept
    : IndexingRequest() {
    *this = ::std::move(from);
  }

  inline IndexingRequest& operator=(const IndexingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline IndexingRequest& operator=(IndexingRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IndexingRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IndexingRequest* internal_default_instance() {
    return reinterpret_cast<const IndexingRequest*>(
               &_IndexingRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(IndexingRequest& a, IndexingRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(IndexingRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IndexingRequest* New() const final {
    return CreateMaybeMessage<IndexingRequest>(nullptr);
  }

  IndexingRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IndexingRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IndexingRequest& from);
  void MergeFrom(const IndexingRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IndexingRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.IndexingRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIndicesFieldNumber = 2,
    kConnectionIdFieldNumber = 3,
    kObjIdFieldNumber = 1,
  };
  // repeated uint32 indices = 2;
  int indices_size() const;
  private:
  int _internal_indices_size() const;
  public:
  void clear_indices();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_indices(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal_indices() const;
  void _internal_add_indices(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable_indices();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 indices(int index) const;
  void set_indices(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add_indices(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      indices() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable_indices();

  // string connection_id = 3;
  void clear_connection_id();
  const std::string& connection_id() const;
  void set_connection_id(const std::string& value);
  void set_connection_id(std::string&& value);
  void set_connection_id(const char* value);
  void set_connection_id(const char* value, size_t size);
  std::string* mutable_connection_id();
  std::string* release_connection_id();
  void set_allocated_connection_id(std::string* connection_id);
  private:
  const std::string& _internal_connection_id() const;
  void _internal_set_connection_id(const std::string& value);
  std::string* _internal_mutable_connection_id();
  public:

  // uint64 obj_id = 1;
  void clear_obj_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id() const;
  void set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_obj_id() const;
  void _internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.IndexingRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > indices_;
  mutable std::atomic<int> _indices_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr connection_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class IndexingResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.IndexingResponse) */ {
 public:
  IndexingResponse();
  virtual ~IndexingResponse();

  IndexingResponse(const IndexingResponse& from);
  IndexingResponse(IndexingResponse&& from) noexcept
    : IndexingResponse() {
    *this = ::std::move(from);
  }

  inline IndexingResponse& operator=(const IndexingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline IndexingResponse& operator=(IndexingResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IndexingResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IndexingResponse* internal_default_instance() {
    return reinterpret_cast<const IndexingResponse*>(
               &_IndexingResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(IndexingResponse& a, IndexingResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(IndexingResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IndexingResponse* New() const final {
    return CreateMaybeMessage<IndexingResponse>(nullptr);
  }

  IndexingResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IndexingResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IndexingResponse& from);
  void MergeFrom(const IndexingResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IndexingResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.IndexingResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPickledResultFieldNumber = 1,
  };
  // bytes pickled_result = 1;
  void clear_pickled_result();
  const std::string& pickled_result() const;
  void set_pickled_result(const std::string& value);
  void set_pickled_result(std::string&& value);
  void set_pickled_result(const char* value);
  void set_pickled_result(const void* value, size_t size);
  std::string* mutable_pickled_result();
  std::string* release_pickled_result();
  void set_allocated_pickled_result(std::string* pickled_result);
  private:
  const std::string& _internal_pickled_result() const;
  void _internal_set_pickled_result(const std::string& value);
  std::string* _internal_mutable_pickled_result();
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.IndexingResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pickled_result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class TensorToNumpyRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.TensorToNumpyRequest) */ {
 public:
  TensorToNumpyRequest();
  virtual ~TensorToNumpyRequest();

  TensorToNumpyRequest(const TensorToNumpyRequest& from);
  TensorToNumpyRequest(TensorToNumpyRequest&& from) noexcept
    : TensorToNumpyRequest() {
    *this = ::std::move(from);
  }

  inline TensorToNumpyRequest& operator=(const TensorToNumpyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TensorToNumpyRequest& operator=(TensorToNumpyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TensorToNumpyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TensorToNumpyRequest* internal_default_instance() {
    return reinterpret_cast<const TensorToNumpyRequest*>(
               &_TensorToNumpyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(TensorToNumpyRequest& a, TensorToNumpyRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(TensorToNumpyRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TensorToNumpyRequest* New() const final {
    return CreateMaybeMessage<TensorToNumpyRequest>(nullptr);
  }

  TensorToNumpyRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TensorToNumpyRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TensorToNumpyRequest& from);
  void MergeFrom(const TensorToNumpyRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TensorToNumpyRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.TensorToNumpyRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConnectionIdFieldNumber = 2,
    kObjIdFieldNumber = 1,
  };
  // string connection_id = 2;
  void clear_connection_id();
  const std::string& connection_id() const;
  void set_connection_id(const std::string& value);
  void set_connection_id(std::string&& value);
  void set_connection_id(const char* value);
  void set_connection_id(const char* value, size_t size);
  std::string* mutable_connection_id();
  std::string* release_connection_id();
  void set_allocated_connection_id(std::string* connection_id);
  private:
  const std::string& _internal_connection_id() const;
  void _internal_set_connection_id(const std::string& value);
  std::string* _internal_mutable_connection_id();
  public:

  // uint64 obj_id = 1;
  void clear_obj_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id() const;
  void set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_obj_id() const;
  void _internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.TensorToNumpyRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr connection_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class TensorToNumPyResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.TensorToNumPyResponse) */ {
 public:
  TensorToNumPyResponse();
  virtual ~TensorToNumPyResponse();

  TensorToNumPyResponse(const TensorToNumPyResponse& from);
  TensorToNumPyResponse(TensorToNumPyResponse&& from) noexcept
    : TensorToNumPyResponse() {
    *this = ::std::move(from);
  }

  inline TensorToNumPyResponse& operator=(const TensorToNumPyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline TensorToNumPyResponse& operator=(TensorToNumPyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TensorToNumPyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TensorToNumPyResponse* internal_default_instance() {
    return reinterpret_cast<const TensorToNumPyResponse*>(
               &_TensorToNumPyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(TensorToNumPyResponse& a, TensorToNumPyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(TensorToNumPyResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TensorToNumPyResponse* New() const final {
    return CreateMaybeMessage<TensorToNumPyResponse>(nullptr);
  }

  TensorToNumPyResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TensorToNumPyResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TensorToNumPyResponse& from);
  void MergeFrom(const TensorToNumPyResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TensorToNumPyResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.TensorToNumPyResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPickledArrayFieldNumber = 1,
  };
  // bytes pickled_array = 1;
  void clear_pickled_array();
  const std::string& pickled_array() const;
  void set_pickled_array(const std::string& value);
  void set_pickled_array(std::string&& value);
  void set_pickled_array(const char* value);
  void set_pickled_array(const void* value, size_t size);
  std::string* mutable_pickled_array();
  std::string* release_pickled_array();
  void set_allocated_pickled_array(std::string* pickled_array);
  private:
  const std::string& _internal_pickled_array() const;
  void _internal_set_pickled_array(const std::string& value);
  std::string* _internal_mutable_pickled_array();
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.TensorToNumPyResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pickled_array_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class GetObjectRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.GetObjectRequest) */ {
 public:
  GetObjectRequest();
  virtual ~GetObjectRequest();

  GetObjectRequest(const GetObjectRequest& from);
  GetObjectRequest(GetObjectRequest&& from) noexcept
    : GetObjectRequest() {
    *this = ::std::move(from);
  }

  inline GetObjectRequest& operator=(const GetObjectRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetObjectRequest& operator=(GetObjectRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetObjectRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetObjectRequest* internal_default_instance() {
    return reinterpret_cast<const GetObjectRequest*>(
               &_GetObjectRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(GetObjectRequest& a, GetObjectRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetObjectRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetObjectRequest* New() const final {
    return CreateMaybeMessage<GetObjectRequest>(nullptr);
  }

  GetObjectRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetObjectRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetObjectRequest& from);
  void MergeFrom(const GetObjectRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetObjectRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.GetObjectRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConnectionIdFieldNumber = 2,
    kObjIdFieldNumber = 1,
  };
  // string connection_id = 2;
  void clear_connection_id();
  const std::string& connection_id() const;
  void set_connection_id(const std::string& value);
  void set_connection_id(std::string&& value);
  void set_connection_id(const char* value);
  void set_connection_id(const char* value, size_t size);
  std::string* mutable_connection_id();
  std::string* release_connection_id();
  void set_allocated_connection_id(std::string* connection_id);
  private:
  const std::string& _internal_connection_id() const;
  void _internal_set_connection_id(const std::string& value);
  std::string* _internal_mutable_connection_id();
  public:

  // uint64 obj_id = 1;
  void clear_obj_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id() const;
  void set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_obj_id() const;
  void _internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.GetObjectRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr connection_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class GetObjectResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.GetObjectResponse) */ {
 public:
  GetObjectResponse();
  virtual ~GetObjectResponse();

  GetObjectResponse(const GetObjectResponse& from);
  GetObjectResponse(GetObjectResponse&& from) noexcept
    : GetObjectResponse() {
    *this = ::std::move(from);
  }

  inline GetObjectResponse& operator=(const GetObjectResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetObjectResponse& operator=(GetObjectResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GetObjectResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetObjectResponse* internal_default_instance() {
    return reinterpret_cast<const GetObjectResponse*>(
               &_GetObjectResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(GetObjectResponse& a, GetObjectResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetObjectResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GetObjectResponse* New() const final {
    return CreateMaybeMessage<GetObjectResponse>(nullptr);
  }

  GetObjectResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GetObjectResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GetObjectResponse& from);
  void MergeFrom(const GetObjectResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetObjectResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.GetObjectResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjectFieldNumber = 1,
  };
  // bytes object = 1;
  void clear_object();
  const std::string& object() const;
  void set_object(const std::string& value);
  void set_object(std::string&& value);
  void set_object(const char* value);
  void set_object(const void* value, size_t size);
  std::string* mutable_object();
  std::string* release_object();
  void set_allocated_object(std::string* object);
  private:
  const std::string& _internal_object() const;
  void _internal_set_object(const std::string& value);
  std::string* _internal_mutable_object();
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.GetObjectResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr object_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class BatchNormRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.BatchNormRequest) */ {
 public:
  BatchNormRequest();
  virtual ~BatchNormRequest();

  BatchNormRequest(const BatchNormRequest& from);
  BatchNormRequest(BatchNormRequest&& from) noexcept
    : BatchNormRequest() {
    *this = ::std::move(from);
  }

  inline BatchNormRequest& operator=(const BatchNormRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline BatchNormRequest& operator=(BatchNormRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BatchNormRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatchNormRequest* internal_default_instance() {
    return reinterpret_cast<const BatchNormRequest*>(
               &_BatchNormRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(BatchNormRequest& a, BatchNormRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(BatchNormRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BatchNormRequest* New() const final {
    return CreateMaybeMessage<BatchNormRequest>(nullptr);
  }

  BatchNormRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BatchNormRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BatchNormRequest& from);
  void MergeFrom(const BatchNormRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BatchNormRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.BatchNormRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kConnectionIdFieldNumber = 2,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string connection_id = 2;
  void clear_connection_id();
  const std::string& connection_id() const;
  void set_connection_id(const std::string& value);
  void set_connection_id(std::string&& value);
  void set_connection_id(const char* value);
  void set_connection_id(const char* value, size_t size);
  std::string* mutable_connection_id();
  std::string* release_connection_id();
  void set_allocated_connection_id(std::string* connection_id);
  private:
  const std::string& _internal_connection_id() const;
  void _internal_set_connection_id(const std::string& value);
  std::string* _internal_mutable_connection_id();
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.BatchNormRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr connection_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// -------------------------------------------------------------------

class BatchNormResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolo_tf.BatchNormResponse) */ {
 public:
  BatchNormResponse();
  virtual ~BatchNormResponse();

  BatchNormResponse(const BatchNormResponse& from);
  BatchNormResponse(BatchNormResponse&& from) noexcept
    : BatchNormResponse() {
    *this = ::std::move(from);
  }

  inline BatchNormResponse& operator=(const BatchNormResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline BatchNormResponse& operator=(BatchNormResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const BatchNormResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BatchNormResponse* internal_default_instance() {
    return reinterpret_cast<const BatchNormResponse*>(
               &_BatchNormResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(BatchNormResponse& a, BatchNormResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(BatchNormResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline BatchNormResponse* New() const final {
    return CreateMaybeMessage<BatchNormResponse>(nullptr);
  }

  BatchNormResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<BatchNormResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const BatchNormResponse& from);
  void MergeFrom(const BatchNormResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BatchNormResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolo_tf.BatchNormResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_yolo_2eproto);
    return ::descriptor_table_yolo_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kObjIdFieldNumber = 1,
  };
  // uint64 obj_id = 1;
  void clear_obj_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id() const;
  void set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_obj_id() const;
  void _internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:yolo_tf.BatchNormResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 obj_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolo_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ConnectRequest

// string id = 1;
inline void ConnectRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ConnectRequest::id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.ConnectRequest.id)
  return _internal_id();
}
inline void ConnectRequest::set_id(const std::string& value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.ConnectRequest.id)
}
inline std::string* ConnectRequest::mutable_id() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.ConnectRequest.id)
  return _internal_mutable_id();
}
inline const std::string& ConnectRequest::_internal_id() const {
  return id_.GetNoArena();
}
inline void ConnectRequest::_internal_set_id(const std::string& value) {
  
  id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ConnectRequest::set_id(std::string&& value) {
  
  id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.ConnectRequest.id)
}
inline void ConnectRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.ConnectRequest.id)
}
inline void ConnectRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.ConnectRequest.id)
}
inline std::string* ConnectRequest::_internal_mutable_id() {
  
  return id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ConnectRequest::release_id() {
  // @@protoc_insertion_point(field_release:yolo_tf.ConnectRequest.id)
  
  return id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ConnectRequest::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.ConnectRequest.id)
}

// -------------------------------------------------------------------

// ConnectResponse

// bool accept = 1;
inline void ConnectResponse::clear_accept() {
  accept_ = false;
}
inline bool ConnectResponse::_internal_accept() const {
  return accept_;
}
inline bool ConnectResponse::accept() const {
  // @@protoc_insertion_point(field_get:yolo_tf.ConnectResponse.accept)
  return _internal_accept();
}
inline void ConnectResponse::_internal_set_accept(bool value) {
  
  accept_ = value;
}
inline void ConnectResponse::set_accept(bool value) {
  _internal_set_accept(value);
  // @@protoc_insertion_point(field_set:yolo_tf.ConnectResponse.accept)
}

// -------------------------------------------------------------------

// DisconnectRequest

// string id = 1;
inline void DisconnectRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& DisconnectRequest::id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.DisconnectRequest.id)
  return _internal_id();
}
inline void DisconnectRequest::set_id(const std::string& value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.DisconnectRequest.id)
}
inline std::string* DisconnectRequest::mutable_id() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.DisconnectRequest.id)
  return _internal_mutable_id();
}
inline const std::string& DisconnectRequest::_internal_id() const {
  return id_.GetNoArena();
}
inline void DisconnectRequest::_internal_set_id(const std::string& value) {
  
  id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void DisconnectRequest::set_id(std::string&& value) {
  
  id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.DisconnectRequest.id)
}
inline void DisconnectRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.DisconnectRequest.id)
}
inline void DisconnectRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.DisconnectRequest.id)
}
inline std::string* DisconnectRequest::_internal_mutable_id() {
  
  return id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DisconnectRequest::release_id() {
  // @@protoc_insertion_point(field_release:yolo_tf.DisconnectRequest.id)
  
  return id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DisconnectRequest::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.DisconnectRequest.id)
}

// -------------------------------------------------------------------

// DisconnectResponse

// -------------------------------------------------------------------

// HelloRequest

// string name = 1;
inline void HelloRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& HelloRequest::name() const {
  // @@protoc_insertion_point(field_get:yolo_tf.HelloRequest.name)
  return _internal_name();
}
inline void HelloRequest::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:yolo_tf.HelloRequest.name)
}
inline std::string* HelloRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.HelloRequest.name)
  return _internal_mutable_name();
}
inline const std::string& HelloRequest::_internal_name() const {
  return name_.GetNoArena();
}
inline void HelloRequest::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void HelloRequest::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.HelloRequest.name)
}
inline void HelloRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.HelloRequest.name)
}
inline void HelloRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.HelloRequest.name)
}
inline std::string* HelloRequest::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* HelloRequest::release_name() {
  // @@protoc_insertion_point(field_release:yolo_tf.HelloRequest.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void HelloRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.HelloRequest.name)
}

// -------------------------------------------------------------------

// HelloReply

// string message = 1;
inline void HelloReply::clear_message() {
  message_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& HelloReply::message() const {
  // @@protoc_insertion_point(field_get:yolo_tf.HelloReply.message)
  return _internal_message();
}
inline void HelloReply::set_message(const std::string& value) {
  _internal_set_message(value);
  // @@protoc_insertion_point(field_set:yolo_tf.HelloReply.message)
}
inline std::string* HelloReply::mutable_message() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.HelloReply.message)
  return _internal_mutable_message();
}
inline const std::string& HelloReply::_internal_message() const {
  return message_.GetNoArena();
}
inline void HelloReply::_internal_set_message(const std::string& value) {
  
  message_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void HelloReply::set_message(std::string&& value) {
  
  message_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.HelloReply.message)
}
inline void HelloReply::set_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  message_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.HelloReply.message)
}
inline void HelloReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.HelloReply.message)
}
inline std::string* HelloReply::_internal_mutable_message() {
  
  return message_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* HelloReply::release_message() {
  // @@protoc_insertion_point(field_release:yolo_tf.HelloReply.message)
  
  return message_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void HelloReply::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.HelloReply.message)
}

// -------------------------------------------------------------------

// CallRequest_ObjId

// uint64 obj_id = 1;
inline void CallRequest_ObjId::clear_obj_id() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CallRequest_ObjId::_internal_obj_id() const {
  return obj_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CallRequest_ObjId::obj_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.CallRequest.ObjId.obj_id)
  return _internal_obj_id();
}
inline void CallRequest_ObjId::_internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  obj_id_ = value;
}
inline void CallRequest_ObjId::set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_obj_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.CallRequest.ObjId.obj_id)
}

// bool release = 2;
inline void CallRequest_ObjId::clear_release() {
  release_ = false;
}
inline bool CallRequest_ObjId::_internal_release() const {
  return release_;
}
inline bool CallRequest_ObjId::release() const {
  // @@protoc_insertion_point(field_get:yolo_tf.CallRequest.ObjId.release)
  return _internal_release();
}
inline void CallRequest_ObjId::_internal_set_release(bool value) {
  
  release_ = value;
}
inline void CallRequest_ObjId::set_release(bool value) {
  _internal_set_release(value);
  // @@protoc_insertion_point(field_set:yolo_tf.CallRequest.ObjId.release)
}

// -------------------------------------------------------------------

// CallRequest

// uint64 callable_obj_id = 1;
inline void CallRequest::clear_callable_obj_id() {
  callable_obj_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CallRequest::_internal_callable_obj_id() const {
  return callable_obj_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CallRequest::callable_obj_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.CallRequest.callable_obj_id)
  return _internal_callable_obj_id();
}
inline void CallRequest::_internal_set_callable_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  callable_obj_id_ = value;
}
inline void CallRequest::set_callable_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_callable_obj_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.CallRequest.callable_obj_id)
}

// bool args_pickled = 2;
inline void CallRequest::clear_args_pickled() {
  args_pickled_ = false;
}
inline bool CallRequest::_internal_args_pickled() const {
  return args_pickled_;
}
inline bool CallRequest::args_pickled() const {
  // @@protoc_insertion_point(field_get:yolo_tf.CallRequest.args_pickled)
  return _internal_args_pickled();
}
inline void CallRequest::_internal_set_args_pickled(bool value) {
  
  args_pickled_ = value;
}
inline void CallRequest::set_args_pickled(bool value) {
  _internal_set_args_pickled(value);
  // @@protoc_insertion_point(field_set:yolo_tf.CallRequest.args_pickled)
}

// repeated bytes pickled_args = 3;
inline int CallRequest::_internal_pickled_args_size() const {
  return pickled_args_.size();
}
inline int CallRequest::pickled_args_size() const {
  return _internal_pickled_args_size();
}
inline void CallRequest::clear_pickled_args() {
  pickled_args_.Clear();
}
inline std::string* CallRequest::add_pickled_args() {
  // @@protoc_insertion_point(field_add_mutable:yolo_tf.CallRequest.pickled_args)
  return _internal_add_pickled_args();
}
inline const std::string& CallRequest::_internal_pickled_args(int index) const {
  return pickled_args_.Get(index);
}
inline const std::string& CallRequest::pickled_args(int index) const {
  // @@protoc_insertion_point(field_get:yolo_tf.CallRequest.pickled_args)
  return _internal_pickled_args(index);
}
inline std::string* CallRequest::mutable_pickled_args(int index) {
  // @@protoc_insertion_point(field_mutable:yolo_tf.CallRequest.pickled_args)
  return pickled_args_.Mutable(index);
}
inline void CallRequest::set_pickled_args(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:yolo_tf.CallRequest.pickled_args)
  pickled_args_.Mutable(index)->assign(value);
}
inline void CallRequest::set_pickled_args(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:yolo_tf.CallRequest.pickled_args)
  pickled_args_.Mutable(index)->assign(std::move(value));
}
inline void CallRequest::set_pickled_args(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  pickled_args_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:yolo_tf.CallRequest.pickled_args)
}
inline void CallRequest::set_pickled_args(int index, const void* value, size_t size) {
  pickled_args_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.CallRequest.pickled_args)
}
inline std::string* CallRequest::_internal_add_pickled_args() {
  return pickled_args_.Add();
}
inline void CallRequest::add_pickled_args(const std::string& value) {
  pickled_args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:yolo_tf.CallRequest.pickled_args)
}
inline void CallRequest::add_pickled_args(std::string&& value) {
  pickled_args_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:yolo_tf.CallRequest.pickled_args)
}
inline void CallRequest::add_pickled_args(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  pickled_args_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:yolo_tf.CallRequest.pickled_args)
}
inline void CallRequest::add_pickled_args(const void* value, size_t size) {
  pickled_args_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:yolo_tf.CallRequest.pickled_args)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CallRequest::pickled_args() const {
  // @@protoc_insertion_point(field_list:yolo_tf.CallRequest.pickled_args)
  return pickled_args_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CallRequest::mutable_pickled_args() {
  // @@protoc_insertion_point(field_mutable_list:yolo_tf.CallRequest.pickled_args)
  return &pickled_args_;
}

// repeated .yolo_tf.CallRequest.ObjId obj_ids = 4;
inline int CallRequest::_internal_obj_ids_size() const {
  return obj_ids_.size();
}
inline int CallRequest::obj_ids_size() const {
  return _internal_obj_ids_size();
}
inline void CallRequest::clear_obj_ids() {
  obj_ids_.Clear();
}
inline ::yolo_tf::CallRequest_ObjId* CallRequest::mutable_obj_ids(int index) {
  // @@protoc_insertion_point(field_mutable:yolo_tf.CallRequest.obj_ids)
  return obj_ids_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yolo_tf::CallRequest_ObjId >*
CallRequest::mutable_obj_ids() {
  // @@protoc_insertion_point(field_mutable_list:yolo_tf.CallRequest.obj_ids)
  return &obj_ids_;
}
inline const ::yolo_tf::CallRequest_ObjId& CallRequest::_internal_obj_ids(int index) const {
  return obj_ids_.Get(index);
}
inline const ::yolo_tf::CallRequest_ObjId& CallRequest::obj_ids(int index) const {
  // @@protoc_insertion_point(field_get:yolo_tf.CallRequest.obj_ids)
  return _internal_obj_ids(index);
}
inline ::yolo_tf::CallRequest_ObjId* CallRequest::_internal_add_obj_ids() {
  return obj_ids_.Add();
}
inline ::yolo_tf::CallRequest_ObjId* CallRequest::add_obj_ids() {
  // @@protoc_insertion_point(field_add:yolo_tf.CallRequest.obj_ids)
  return _internal_add_obj_ids();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yolo_tf::CallRequest_ObjId >&
CallRequest::obj_ids() const {
  // @@protoc_insertion_point(field_list:yolo_tf.CallRequest.obj_ids)
  return obj_ids_;
}

// int32 num_of_returns = 5;
inline void CallRequest::clear_num_of_returns() {
  num_of_returns_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CallRequest::_internal_num_of_returns() const {
  return num_of_returns_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CallRequest::num_of_returns() const {
  // @@protoc_insertion_point(field_get:yolo_tf.CallRequest.num_of_returns)
  return _internal_num_of_returns();
}
inline void CallRequest::_internal_set_num_of_returns(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  num_of_returns_ = value;
}
inline void CallRequest::set_num_of_returns(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_num_of_returns(value);
  // @@protoc_insertion_point(field_set:yolo_tf.CallRequest.num_of_returns)
}

// string connection_id = 6;
inline void CallRequest::clear_connection_id() {
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& CallRequest::connection_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.CallRequest.connection_id)
  return _internal_connection_id();
}
inline void CallRequest::set_connection_id(const std::string& value) {
  _internal_set_connection_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.CallRequest.connection_id)
}
inline std::string* CallRequest::mutable_connection_id() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.CallRequest.connection_id)
  return _internal_mutable_connection_id();
}
inline const std::string& CallRequest::_internal_connection_id() const {
  return connection_id_.GetNoArena();
}
inline void CallRequest::_internal_set_connection_id(const std::string& value) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void CallRequest::set_connection_id(std::string&& value) {
  
  connection_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.CallRequest.connection_id)
}
inline void CallRequest::set_connection_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.CallRequest.connection_id)
}
inline void CallRequest::set_connection_id(const char* value, size_t size) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.CallRequest.connection_id)
}
inline std::string* CallRequest::_internal_mutable_connection_id() {
  
  return connection_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* CallRequest::release_connection_id() {
  // @@protoc_insertion_point(field_release:yolo_tf.CallRequest.connection_id)
  
  return connection_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void CallRequest::set_allocated_connection_id(std::string* connection_id) {
  if (connection_id != nullptr) {
    
  } else {
    
  }
  connection_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), connection_id);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.CallRequest.connection_id)
}

// -------------------------------------------------------------------

// CallResponse

// bool pickled = 1;
inline void CallResponse::clear_pickled() {
  pickled_ = false;
}
inline bool CallResponse::_internal_pickled() const {
  return pickled_;
}
inline bool CallResponse::pickled() const {
  // @@protoc_insertion_point(field_get:yolo_tf.CallResponse.pickled)
  return _internal_pickled();
}
inline void CallResponse::_internal_set_pickled(bool value) {
  
  pickled_ = value;
}
inline void CallResponse::set_pickled(bool value) {
  _internal_set_pickled(value);
  // @@protoc_insertion_point(field_set:yolo_tf.CallResponse.pickled)
}

// repeated bytes pickled_result = 2;
inline int CallResponse::_internal_pickled_result_size() const {
  return pickled_result_.size();
}
inline int CallResponse::pickled_result_size() const {
  return _internal_pickled_result_size();
}
inline void CallResponse::clear_pickled_result() {
  pickled_result_.Clear();
}
inline std::string* CallResponse::add_pickled_result() {
  // @@protoc_insertion_point(field_add_mutable:yolo_tf.CallResponse.pickled_result)
  return _internal_add_pickled_result();
}
inline const std::string& CallResponse::_internal_pickled_result(int index) const {
  return pickled_result_.Get(index);
}
inline const std::string& CallResponse::pickled_result(int index) const {
  // @@protoc_insertion_point(field_get:yolo_tf.CallResponse.pickled_result)
  return _internal_pickled_result(index);
}
inline std::string* CallResponse::mutable_pickled_result(int index) {
  // @@protoc_insertion_point(field_mutable:yolo_tf.CallResponse.pickled_result)
  return pickled_result_.Mutable(index);
}
inline void CallResponse::set_pickled_result(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:yolo_tf.CallResponse.pickled_result)
  pickled_result_.Mutable(index)->assign(value);
}
inline void CallResponse::set_pickled_result(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:yolo_tf.CallResponse.pickled_result)
  pickled_result_.Mutable(index)->assign(std::move(value));
}
inline void CallResponse::set_pickled_result(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  pickled_result_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:yolo_tf.CallResponse.pickled_result)
}
inline void CallResponse::set_pickled_result(int index, const void* value, size_t size) {
  pickled_result_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.CallResponse.pickled_result)
}
inline std::string* CallResponse::_internal_add_pickled_result() {
  return pickled_result_.Add();
}
inline void CallResponse::add_pickled_result(const std::string& value) {
  pickled_result_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:yolo_tf.CallResponse.pickled_result)
}
inline void CallResponse::add_pickled_result(std::string&& value) {
  pickled_result_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:yolo_tf.CallResponse.pickled_result)
}
inline void CallResponse::add_pickled_result(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  pickled_result_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:yolo_tf.CallResponse.pickled_result)
}
inline void CallResponse::add_pickled_result(const void* value, size_t size) {
  pickled_result_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:yolo_tf.CallResponse.pickled_result)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
CallResponse::pickled_result() const {
  // @@protoc_insertion_point(field_list:yolo_tf.CallResponse.pickled_result)
  return pickled_result_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
CallResponse::mutable_pickled_result() {
  // @@protoc_insertion_point(field_mutable_list:yolo_tf.CallResponse.pickled_result)
  return &pickled_result_;
}

// repeated uint64 obj_ids = 3;
inline int CallResponse::_internal_obj_ids_size() const {
  return obj_ids_.size();
}
inline int CallResponse::obj_ids_size() const {
  return _internal_obj_ids_size();
}
inline void CallResponse::clear_obj_ids() {
  obj_ids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CallResponse::_internal_obj_ids(int index) const {
  return obj_ids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 CallResponse::obj_ids(int index) const {
  // @@protoc_insertion_point(field_get:yolo_tf.CallResponse.obj_ids)
  return _internal_obj_ids(index);
}
inline void CallResponse::set_obj_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  obj_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:yolo_tf.CallResponse.obj_ids)
}
inline void CallResponse::_internal_add_obj_ids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  obj_ids_.Add(value);
}
inline void CallResponse::add_obj_ids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_obj_ids(value);
  // @@protoc_insertion_point(field_add:yolo_tf.CallResponse.obj_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CallResponse::_internal_obj_ids() const {
  return obj_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
CallResponse::obj_ids() const {
  // @@protoc_insertion_point(field_list:yolo_tf.CallResponse.obj_ids)
  return _internal_obj_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CallResponse::_internal_mutable_obj_ids() {
  return &obj_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
CallResponse::mutable_obj_ids() {
  // @@protoc_insertion_point(field_mutable_list:yolo_tf.CallResponse.obj_ids)
  return _internal_mutable_obj_ids();
}

// -------------------------------------------------------------------

// SlicingRequest

// uint64 iterable_id = 1;
inline void SlicingRequest::clear_iterable_id() {
  iterable_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SlicingRequest::_internal_iterable_id() const {
  return iterable_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SlicingRequest::iterable_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.SlicingRequest.iterable_id)
  return _internal_iterable_id();
}
inline void SlicingRequest::_internal_set_iterable_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  iterable_id_ = value;
}
inline void SlicingRequest::set_iterable_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_iterable_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.SlicingRequest.iterable_id)
}

// uint32 start = 2;
inline void SlicingRequest::clear_start() {
  start_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SlicingRequest::_internal_start() const {
  return start_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SlicingRequest::start() const {
  // @@protoc_insertion_point(field_get:yolo_tf.SlicingRequest.start)
  return _internal_start();
}
inline void SlicingRequest::_internal_set_start(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  start_ = value;
}
inline void SlicingRequest::set_start(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_start(value);
  // @@protoc_insertion_point(field_set:yolo_tf.SlicingRequest.start)
}

// uint32 end = 3;
inline void SlicingRequest::clear_end() {
  end_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SlicingRequest::_internal_end() const {
  return end_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SlicingRequest::end() const {
  // @@protoc_insertion_point(field_get:yolo_tf.SlicingRequest.end)
  return _internal_end();
}
inline void SlicingRequest::_internal_set_end(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  end_ = value;
}
inline void SlicingRequest::set_end(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_end(value);
  // @@protoc_insertion_point(field_set:yolo_tf.SlicingRequest.end)
}

// string connection_id = 4;
inline void SlicingRequest::clear_connection_id() {
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SlicingRequest::connection_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.SlicingRequest.connection_id)
  return _internal_connection_id();
}
inline void SlicingRequest::set_connection_id(const std::string& value) {
  _internal_set_connection_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.SlicingRequest.connection_id)
}
inline std::string* SlicingRequest::mutable_connection_id() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.SlicingRequest.connection_id)
  return _internal_mutable_connection_id();
}
inline const std::string& SlicingRequest::_internal_connection_id() const {
  return connection_id_.GetNoArena();
}
inline void SlicingRequest::_internal_set_connection_id(const std::string& value) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SlicingRequest::set_connection_id(std::string&& value) {
  
  connection_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.SlicingRequest.connection_id)
}
inline void SlicingRequest::set_connection_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.SlicingRequest.connection_id)
}
inline void SlicingRequest::set_connection_id(const char* value, size_t size) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.SlicingRequest.connection_id)
}
inline std::string* SlicingRequest::_internal_mutable_connection_id() {
  
  return connection_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SlicingRequest::release_connection_id() {
  // @@protoc_insertion_point(field_release:yolo_tf.SlicingRequest.connection_id)
  
  return connection_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SlicingRequest::set_allocated_connection_id(std::string* connection_id) {
  if (connection_id != nullptr) {
    
  } else {
    
  }
  connection_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), connection_id);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.SlicingRequest.connection_id)
}

// -------------------------------------------------------------------

// SlicingResponse

// uint64 obj_id = 1;
inline void SlicingResponse::clear_obj_id() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SlicingResponse::_internal_obj_id() const {
  return obj_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SlicingResponse::obj_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.SlicingResponse.obj_id)
  return _internal_obj_id();
}
inline void SlicingResponse::_internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  obj_id_ = value;
}
inline void SlicingResponse::set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_obj_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.SlicingResponse.obj_id)
}

// -------------------------------------------------------------------

// ConstantRequest

// bytes value = 1;
inline void ConstantRequest::clear_value() {
  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ConstantRequest::value() const {
  // @@protoc_insertion_point(field_get:yolo_tf.ConstantRequest.value)
  return _internal_value();
}
inline void ConstantRequest::set_value(const std::string& value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:yolo_tf.ConstantRequest.value)
}
inline std::string* ConstantRequest::mutable_value() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.ConstantRequest.value)
  return _internal_mutable_value();
}
inline const std::string& ConstantRequest::_internal_value() const {
  return value_.GetNoArena();
}
inline void ConstantRequest::_internal_set_value(const std::string& value) {
  
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ConstantRequest::set_value(std::string&& value) {
  
  value_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.ConstantRequest.value)
}
inline void ConstantRequest::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.ConstantRequest.value)
}
inline void ConstantRequest::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.ConstantRequest.value)
}
inline std::string* ConstantRequest::_internal_mutable_value() {
  
  return value_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ConstantRequest::release_value() {
  // @@protoc_insertion_point(field_release:yolo_tf.ConstantRequest.value)
  
  return value_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ConstantRequest::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.ConstantRequest.value)
}

// string connection_id = 2;
inline void ConstantRequest::clear_connection_id() {
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ConstantRequest::connection_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.ConstantRequest.connection_id)
  return _internal_connection_id();
}
inline void ConstantRequest::set_connection_id(const std::string& value) {
  _internal_set_connection_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.ConstantRequest.connection_id)
}
inline std::string* ConstantRequest::mutable_connection_id() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.ConstantRequest.connection_id)
  return _internal_mutable_connection_id();
}
inline const std::string& ConstantRequest::_internal_connection_id() const {
  return connection_id_.GetNoArena();
}
inline void ConstantRequest::_internal_set_connection_id(const std::string& value) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ConstantRequest::set_connection_id(std::string&& value) {
  
  connection_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.ConstantRequest.connection_id)
}
inline void ConstantRequest::set_connection_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.ConstantRequest.connection_id)
}
inline void ConstantRequest::set_connection_id(const char* value, size_t size) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.ConstantRequest.connection_id)
}
inline std::string* ConstantRequest::_internal_mutable_connection_id() {
  
  return connection_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ConstantRequest::release_connection_id() {
  // @@protoc_insertion_point(field_release:yolo_tf.ConstantRequest.connection_id)
  
  return connection_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ConstantRequest::set_allocated_connection_id(std::string* connection_id) {
  if (connection_id != nullptr) {
    
  } else {
    
  }
  connection_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), connection_id);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.ConstantRequest.connection_id)
}

// -------------------------------------------------------------------

// ConstantResponse

// bytes tensor = 1;
inline void ConstantResponse::clear_tensor() {
  tensor_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ConstantResponse::tensor() const {
  // @@protoc_insertion_point(field_get:yolo_tf.ConstantResponse.tensor)
  return _internal_tensor();
}
inline void ConstantResponse::set_tensor(const std::string& value) {
  _internal_set_tensor(value);
  // @@protoc_insertion_point(field_set:yolo_tf.ConstantResponse.tensor)
}
inline std::string* ConstantResponse::mutable_tensor() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.ConstantResponse.tensor)
  return _internal_mutable_tensor();
}
inline const std::string& ConstantResponse::_internal_tensor() const {
  return tensor_.GetNoArena();
}
inline void ConstantResponse::_internal_set_tensor(const std::string& value) {
  
  tensor_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ConstantResponse::set_tensor(std::string&& value) {
  
  tensor_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.ConstantResponse.tensor)
}
inline void ConstantResponse::set_tensor(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tensor_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.ConstantResponse.tensor)
}
inline void ConstantResponse::set_tensor(const void* value, size_t size) {
  
  tensor_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.ConstantResponse.tensor)
}
inline std::string* ConstantResponse::_internal_mutable_tensor() {
  
  return tensor_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ConstantResponse::release_tensor() {
  // @@protoc_insertion_point(field_release:yolo_tf.ConstantResponse.tensor)
  
  return tensor_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ConstantResponse::set_allocated_tensor(std::string* tensor) {
  if (tensor != nullptr) {
    
  } else {
    
  }
  tensor_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tensor);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.ConstantResponse.tensor)
}

// -------------------------------------------------------------------

// DeviceType

// string device_type = 1;
inline void DeviceType::clear_device_type() {
  device_type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& DeviceType::device_type() const {
  // @@protoc_insertion_point(field_get:yolo_tf.DeviceType.device_type)
  return _internal_device_type();
}
inline void DeviceType::set_device_type(const std::string& value) {
  _internal_set_device_type(value);
  // @@protoc_insertion_point(field_set:yolo_tf.DeviceType.device_type)
}
inline std::string* DeviceType::mutable_device_type() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.DeviceType.device_type)
  return _internal_mutable_device_type();
}
inline const std::string& DeviceType::_internal_device_type() const {
  return device_type_.GetNoArena();
}
inline void DeviceType::_internal_set_device_type(const std::string& value) {
  
  device_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void DeviceType::set_device_type(std::string&& value) {
  
  device_type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.DeviceType.device_type)
}
inline void DeviceType::set_device_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  device_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.DeviceType.device_type)
}
inline void DeviceType::set_device_type(const char* value, size_t size) {
  
  device_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.DeviceType.device_type)
}
inline std::string* DeviceType::_internal_mutable_device_type() {
  
  return device_type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DeviceType::release_device_type() {
  // @@protoc_insertion_point(field_release:yolo_tf.DeviceType.device_type)
  
  return device_type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DeviceType::set_allocated_device_type(std::string* device_type) {
  if (device_type != nullptr) {
    
  } else {
    
  }
  device_type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), device_type);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.DeviceType.device_type)
}

// string connection_id = 2;
inline void DeviceType::clear_connection_id() {
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& DeviceType::connection_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.DeviceType.connection_id)
  return _internal_connection_id();
}
inline void DeviceType::set_connection_id(const std::string& value) {
  _internal_set_connection_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.DeviceType.connection_id)
}
inline std::string* DeviceType::mutable_connection_id() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.DeviceType.connection_id)
  return _internal_mutable_connection_id();
}
inline const std::string& DeviceType::_internal_connection_id() const {
  return connection_id_.GetNoArena();
}
inline void DeviceType::_internal_set_connection_id(const std::string& value) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void DeviceType::set_connection_id(std::string&& value) {
  
  connection_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.DeviceType.connection_id)
}
inline void DeviceType::set_connection_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.DeviceType.connection_id)
}
inline void DeviceType::set_connection_id(const char* value, size_t size) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.DeviceType.connection_id)
}
inline std::string* DeviceType::_internal_mutable_connection_id() {
  
  return connection_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DeviceType::release_connection_id() {
  // @@protoc_insertion_point(field_release:yolo_tf.DeviceType.connection_id)
  
  return connection_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DeviceType::set_allocated_connection_id(std::string* connection_id) {
  if (connection_id != nullptr) {
    
  } else {
    
  }
  connection_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), connection_id);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.DeviceType.connection_id)
}

// -------------------------------------------------------------------

// PhysicalDevices_PhysicalDevice

// string name = 1;
inline void PhysicalDevices_PhysicalDevice::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PhysicalDevices_PhysicalDevice::name() const {
  // @@protoc_insertion_point(field_get:yolo_tf.PhysicalDevices.PhysicalDevice.name)
  return _internal_name();
}
inline void PhysicalDevices_PhysicalDevice::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:yolo_tf.PhysicalDevices.PhysicalDevice.name)
}
inline std::string* PhysicalDevices_PhysicalDevice::mutable_name() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.PhysicalDevices.PhysicalDevice.name)
  return _internal_mutable_name();
}
inline const std::string& PhysicalDevices_PhysicalDevice::_internal_name() const {
  return name_.GetNoArena();
}
inline void PhysicalDevices_PhysicalDevice::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PhysicalDevices_PhysicalDevice::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.PhysicalDevices.PhysicalDevice.name)
}
inline void PhysicalDevices_PhysicalDevice::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.PhysicalDevices.PhysicalDevice.name)
}
inline void PhysicalDevices_PhysicalDevice::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.PhysicalDevices.PhysicalDevice.name)
}
inline std::string* PhysicalDevices_PhysicalDevice::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PhysicalDevices_PhysicalDevice::release_name() {
  // @@protoc_insertion_point(field_release:yolo_tf.PhysicalDevices.PhysicalDevice.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PhysicalDevices_PhysicalDevice::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.PhysicalDevices.PhysicalDevice.name)
}

// string device_type = 2;
inline void PhysicalDevices_PhysicalDevice::clear_device_type() {
  device_type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& PhysicalDevices_PhysicalDevice::device_type() const {
  // @@protoc_insertion_point(field_get:yolo_tf.PhysicalDevices.PhysicalDevice.device_type)
  return _internal_device_type();
}
inline void PhysicalDevices_PhysicalDevice::set_device_type(const std::string& value) {
  _internal_set_device_type(value);
  // @@protoc_insertion_point(field_set:yolo_tf.PhysicalDevices.PhysicalDevice.device_type)
}
inline std::string* PhysicalDevices_PhysicalDevice::mutable_device_type() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.PhysicalDevices.PhysicalDevice.device_type)
  return _internal_mutable_device_type();
}
inline const std::string& PhysicalDevices_PhysicalDevice::_internal_device_type() const {
  return device_type_.GetNoArena();
}
inline void PhysicalDevices_PhysicalDevice::_internal_set_device_type(const std::string& value) {
  
  device_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void PhysicalDevices_PhysicalDevice::set_device_type(std::string&& value) {
  
  device_type_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.PhysicalDevices.PhysicalDevice.device_type)
}
inline void PhysicalDevices_PhysicalDevice::set_device_type(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  device_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.PhysicalDevices.PhysicalDevice.device_type)
}
inline void PhysicalDevices_PhysicalDevice::set_device_type(const char* value, size_t size) {
  
  device_type_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.PhysicalDevices.PhysicalDevice.device_type)
}
inline std::string* PhysicalDevices_PhysicalDevice::_internal_mutable_device_type() {
  
  return device_type_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* PhysicalDevices_PhysicalDevice::release_device_type() {
  // @@protoc_insertion_point(field_release:yolo_tf.PhysicalDevices.PhysicalDevice.device_type)
  
  return device_type_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void PhysicalDevices_PhysicalDevice::set_allocated_device_type(std::string* device_type) {
  if (device_type != nullptr) {
    
  } else {
    
  }
  device_type_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), device_type);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.PhysicalDevices.PhysicalDevice.device_type)
}

// -------------------------------------------------------------------

// PhysicalDevices

// repeated .yolo_tf.PhysicalDevices.PhysicalDevice devices = 1;
inline int PhysicalDevices::_internal_devices_size() const {
  return devices_.size();
}
inline int PhysicalDevices::devices_size() const {
  return _internal_devices_size();
}
inline void PhysicalDevices::clear_devices() {
  devices_.Clear();
}
inline ::yolo_tf::PhysicalDevices_PhysicalDevice* PhysicalDevices::mutable_devices(int index) {
  // @@protoc_insertion_point(field_mutable:yolo_tf.PhysicalDevices.devices)
  return devices_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yolo_tf::PhysicalDevices_PhysicalDevice >*
PhysicalDevices::mutable_devices() {
  // @@protoc_insertion_point(field_mutable_list:yolo_tf.PhysicalDevices.devices)
  return &devices_;
}
inline const ::yolo_tf::PhysicalDevices_PhysicalDevice& PhysicalDevices::_internal_devices(int index) const {
  return devices_.Get(index);
}
inline const ::yolo_tf::PhysicalDevices_PhysicalDevice& PhysicalDevices::devices(int index) const {
  // @@protoc_insertion_point(field_get:yolo_tf.PhysicalDevices.devices)
  return _internal_devices(index);
}
inline ::yolo_tf::PhysicalDevices_PhysicalDevice* PhysicalDevices::_internal_add_devices() {
  return devices_.Add();
}
inline ::yolo_tf::PhysicalDevices_PhysicalDevice* PhysicalDevices::add_devices() {
  // @@protoc_insertion_point(field_add:yolo_tf.PhysicalDevices.devices)
  return _internal_add_devices();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yolo_tf::PhysicalDevices_PhysicalDevice >&
PhysicalDevices::devices() const {
  // @@protoc_insertion_point(field_list:yolo_tf.PhysicalDevices.devices)
  return devices_;
}

// -------------------------------------------------------------------

// DecodeImageRequest

// bytes byte_image = 1;
inline void DecodeImageRequest::clear_byte_image() {
  byte_image_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& DecodeImageRequest::byte_image() const {
  // @@protoc_insertion_point(field_get:yolo_tf.DecodeImageRequest.byte_image)
  return _internal_byte_image();
}
inline void DecodeImageRequest::set_byte_image(const std::string& value) {
  _internal_set_byte_image(value);
  // @@protoc_insertion_point(field_set:yolo_tf.DecodeImageRequest.byte_image)
}
inline std::string* DecodeImageRequest::mutable_byte_image() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.DecodeImageRequest.byte_image)
  return _internal_mutable_byte_image();
}
inline const std::string& DecodeImageRequest::_internal_byte_image() const {
  return byte_image_.GetNoArena();
}
inline void DecodeImageRequest::_internal_set_byte_image(const std::string& value) {
  
  byte_image_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void DecodeImageRequest::set_byte_image(std::string&& value) {
  
  byte_image_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.DecodeImageRequest.byte_image)
}
inline void DecodeImageRequest::set_byte_image(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  byte_image_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.DecodeImageRequest.byte_image)
}
inline void DecodeImageRequest::set_byte_image(const void* value, size_t size) {
  
  byte_image_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.DecodeImageRequest.byte_image)
}
inline std::string* DecodeImageRequest::_internal_mutable_byte_image() {
  
  return byte_image_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DecodeImageRequest::release_byte_image() {
  // @@protoc_insertion_point(field_release:yolo_tf.DecodeImageRequest.byte_image)
  
  return byte_image_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DecodeImageRequest::set_allocated_byte_image(std::string* byte_image) {
  if (byte_image != nullptr) {
    
  } else {
    
  }
  byte_image_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), byte_image);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.DecodeImageRequest.byte_image)
}

// int32 size = 2;
inline void DecodeImageRequest::clear_size() {
  size_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DecodeImageRequest::_internal_size() const {
  return size_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DecodeImageRequest::size() const {
  // @@protoc_insertion_point(field_get:yolo_tf.DecodeImageRequest.size)
  return _internal_size();
}
inline void DecodeImageRequest::_internal_set_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  size_ = value;
}
inline void DecodeImageRequest::set_size(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:yolo_tf.DecodeImageRequest.size)
}

// int32 channels = 3;
inline void DecodeImageRequest::clear_channels() {
  channels_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DecodeImageRequest::_internal_channels() const {
  return channels_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DecodeImageRequest::channels() const {
  // @@protoc_insertion_point(field_get:yolo_tf.DecodeImageRequest.channels)
  return _internal_channels();
}
inline void DecodeImageRequest::_internal_set_channels(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  channels_ = value;
}
inline void DecodeImageRequest::set_channels(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_channels(value);
  // @@protoc_insertion_point(field_set:yolo_tf.DecodeImageRequest.channels)
}

// string connection_id = 4;
inline void DecodeImageRequest::clear_connection_id() {
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& DecodeImageRequest::connection_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.DecodeImageRequest.connection_id)
  return _internal_connection_id();
}
inline void DecodeImageRequest::set_connection_id(const std::string& value) {
  _internal_set_connection_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.DecodeImageRequest.connection_id)
}
inline std::string* DecodeImageRequest::mutable_connection_id() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.DecodeImageRequest.connection_id)
  return _internal_mutable_connection_id();
}
inline const std::string& DecodeImageRequest::_internal_connection_id() const {
  return connection_id_.GetNoArena();
}
inline void DecodeImageRequest::_internal_set_connection_id(const std::string& value) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void DecodeImageRequest::set_connection_id(std::string&& value) {
  
  connection_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.DecodeImageRequest.connection_id)
}
inline void DecodeImageRequest::set_connection_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.DecodeImageRequest.connection_id)
}
inline void DecodeImageRequest::set_connection_id(const char* value, size_t size) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.DecodeImageRequest.connection_id)
}
inline std::string* DecodeImageRequest::_internal_mutable_connection_id() {
  
  return connection_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DecodeImageRequest::release_connection_id() {
  // @@protoc_insertion_point(field_release:yolo_tf.DecodeImageRequest.connection_id)
  
  return connection_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DecodeImageRequest::set_allocated_connection_id(std::string* connection_id) {
  if (connection_id != nullptr) {
    
  } else {
    
  }
  connection_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), connection_id);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.DecodeImageRequest.connection_id)
}

// -------------------------------------------------------------------

// DecodeImageResponse

// uint64 obj_id = 1;
inline void DecodeImageResponse::clear_obj_id() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DecodeImageResponse::_internal_obj_id() const {
  return obj_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DecodeImageResponse::obj_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.DecodeImageResponse.obj_id)
  return _internal_obj_id();
}
inline void DecodeImageResponse::_internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  obj_id_ = value;
}
inline void DecodeImageResponse::set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_obj_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.DecodeImageResponse.obj_id)
}

// -------------------------------------------------------------------

// ExpandDemensionRequest

// uint64 obj_id = 1;
inline void ExpandDemensionRequest::clear_obj_id() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ExpandDemensionRequest::_internal_obj_id() const {
  return obj_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ExpandDemensionRequest::obj_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.ExpandDemensionRequest.obj_id)
  return _internal_obj_id();
}
inline void ExpandDemensionRequest::_internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  obj_id_ = value;
}
inline void ExpandDemensionRequest::set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_obj_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.ExpandDemensionRequest.obj_id)
}

// int32 axis = 2;
inline void ExpandDemensionRequest::clear_axis() {
  axis_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ExpandDemensionRequest::_internal_axis() const {
  return axis_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ExpandDemensionRequest::axis() const {
  // @@protoc_insertion_point(field_get:yolo_tf.ExpandDemensionRequest.axis)
  return _internal_axis();
}
inline void ExpandDemensionRequest::_internal_set_axis(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  axis_ = value;
}
inline void ExpandDemensionRequest::set_axis(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_axis(value);
  // @@protoc_insertion_point(field_set:yolo_tf.ExpandDemensionRequest.axis)
}

// string connection_id = 3;
inline void ExpandDemensionRequest::clear_connection_id() {
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ExpandDemensionRequest::connection_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.ExpandDemensionRequest.connection_id)
  return _internal_connection_id();
}
inline void ExpandDemensionRequest::set_connection_id(const std::string& value) {
  _internal_set_connection_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.ExpandDemensionRequest.connection_id)
}
inline std::string* ExpandDemensionRequest::mutable_connection_id() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.ExpandDemensionRequest.connection_id)
  return _internal_mutable_connection_id();
}
inline const std::string& ExpandDemensionRequest::_internal_connection_id() const {
  return connection_id_.GetNoArena();
}
inline void ExpandDemensionRequest::_internal_set_connection_id(const std::string& value) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ExpandDemensionRequest::set_connection_id(std::string&& value) {
  
  connection_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.ExpandDemensionRequest.connection_id)
}
inline void ExpandDemensionRequest::set_connection_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.ExpandDemensionRequest.connection_id)
}
inline void ExpandDemensionRequest::set_connection_id(const char* value, size_t size) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.ExpandDemensionRequest.connection_id)
}
inline std::string* ExpandDemensionRequest::_internal_mutable_connection_id() {
  
  return connection_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ExpandDemensionRequest::release_connection_id() {
  // @@protoc_insertion_point(field_release:yolo_tf.ExpandDemensionRequest.connection_id)
  
  return connection_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ExpandDemensionRequest::set_allocated_connection_id(std::string* connection_id) {
  if (connection_id != nullptr) {
    
  } else {
    
  }
  connection_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), connection_id);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.ExpandDemensionRequest.connection_id)
}

// -------------------------------------------------------------------

// ExpandDemensionResponse

// uint64 obj_id = 1;
inline void ExpandDemensionResponse::clear_obj_id() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ExpandDemensionResponse::_internal_obj_id() const {
  return obj_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ExpandDemensionResponse::obj_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.ExpandDemensionResponse.obj_id)
  return _internal_obj_id();
}
inline void ExpandDemensionResponse::_internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  obj_id_ = value;
}
inline void ExpandDemensionResponse::set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_obj_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.ExpandDemensionResponse.obj_id)
}

// -------------------------------------------------------------------

// InputRequest

// repeated int32 shape = 1;
inline int InputRequest::_internal_shape_size() const {
  return shape_.size();
}
inline int InputRequest::shape_size() const {
  return _internal_shape_size();
}
inline void InputRequest::clear_shape() {
  shape_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputRequest::_internal_shape(int index) const {
  return shape_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 InputRequest::shape(int index) const {
  // @@protoc_insertion_point(field_get:yolo_tf.InputRequest.shape)
  return _internal_shape(index);
}
inline void InputRequest::set_shape(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  shape_.Set(index, value);
  // @@protoc_insertion_point(field_set:yolo_tf.InputRequest.shape)
}
inline void InputRequest::_internal_add_shape(::PROTOBUF_NAMESPACE_ID::int32 value) {
  shape_.Add(value);
}
inline void InputRequest::add_shape(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_shape(value);
  // @@protoc_insertion_point(field_add:yolo_tf.InputRequest.shape)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
InputRequest::_internal_shape() const {
  return shape_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
InputRequest::shape() const {
  // @@protoc_insertion_point(field_list:yolo_tf.InputRequest.shape)
  return _internal_shape();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
InputRequest::_internal_mutable_shape() {
  return &shape_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
InputRequest::mutable_shape() {
  // @@protoc_insertion_point(field_mutable_list:yolo_tf.InputRequest.shape)
  return _internal_mutable_shape();
}

// string name = 2;
inline void InputRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& InputRequest::name() const {
  // @@protoc_insertion_point(field_get:yolo_tf.InputRequest.name)
  return _internal_name();
}
inline void InputRequest::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:yolo_tf.InputRequest.name)
}
inline std::string* InputRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.InputRequest.name)
  return _internal_mutable_name();
}
inline const std::string& InputRequest::_internal_name() const {
  return name_.GetNoArena();
}
inline void InputRequest::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void InputRequest::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.InputRequest.name)
}
inline void InputRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.InputRequest.name)
}
inline void InputRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.InputRequest.name)
}
inline std::string* InputRequest::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* InputRequest::release_name() {
  // @@protoc_insertion_point(field_release:yolo_tf.InputRequest.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void InputRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.InputRequest.name)
}

// string connection_id = 3;
inline void InputRequest::clear_connection_id() {
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& InputRequest::connection_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.InputRequest.connection_id)
  return _internal_connection_id();
}
inline void InputRequest::set_connection_id(const std::string& value) {
  _internal_set_connection_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.InputRequest.connection_id)
}
inline std::string* InputRequest::mutable_connection_id() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.InputRequest.connection_id)
  return _internal_mutable_connection_id();
}
inline const std::string& InputRequest::_internal_connection_id() const {
  return connection_id_.GetNoArena();
}
inline void InputRequest::_internal_set_connection_id(const std::string& value) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void InputRequest::set_connection_id(std::string&& value) {
  
  connection_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.InputRequest.connection_id)
}
inline void InputRequest::set_connection_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.InputRequest.connection_id)
}
inline void InputRequest::set_connection_id(const char* value, size_t size) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.InputRequest.connection_id)
}
inline std::string* InputRequest::_internal_mutable_connection_id() {
  
  return connection_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* InputRequest::release_connection_id() {
  // @@protoc_insertion_point(field_release:yolo_tf.InputRequest.connection_id)
  
  return connection_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void InputRequest::set_allocated_connection_id(std::string* connection_id) {
  if (connection_id != nullptr) {
    
  } else {
    
  }
  connection_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), connection_id);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.InputRequest.connection_id)
}

// -------------------------------------------------------------------

// InputResponse

// uint64 obj_id = 1;
inline void InputResponse::clear_obj_id() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 InputResponse::_internal_obj_id() const {
  return obj_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 InputResponse::obj_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.InputResponse.obj_id)
  return _internal_obj_id();
}
inline void InputResponse::_internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  obj_id_ = value;
}
inline void InputResponse::set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_obj_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.InputResponse.obj_id)
}

// -------------------------------------------------------------------

// ModelRequest

// repeated uint64 input_ids = 1;
inline int ModelRequest::_internal_input_ids_size() const {
  return input_ids_.size();
}
inline int ModelRequest::input_ids_size() const {
  return _internal_input_ids_size();
}
inline void ModelRequest::clear_input_ids() {
  input_ids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ModelRequest::_internal_input_ids(int index) const {
  return input_ids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ModelRequest::input_ids(int index) const {
  // @@protoc_insertion_point(field_get:yolo_tf.ModelRequest.input_ids)
  return _internal_input_ids(index);
}
inline void ModelRequest::set_input_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  input_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:yolo_tf.ModelRequest.input_ids)
}
inline void ModelRequest::_internal_add_input_ids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  input_ids_.Add(value);
}
inline void ModelRequest::add_input_ids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_input_ids(value);
  // @@protoc_insertion_point(field_add:yolo_tf.ModelRequest.input_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
ModelRequest::_internal_input_ids() const {
  return input_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
ModelRequest::input_ids() const {
  // @@protoc_insertion_point(field_list:yolo_tf.ModelRequest.input_ids)
  return _internal_input_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
ModelRequest::_internal_mutable_input_ids() {
  return &input_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
ModelRequest::mutable_input_ids() {
  // @@protoc_insertion_point(field_mutable_list:yolo_tf.ModelRequest.input_ids)
  return _internal_mutable_input_ids();
}

// repeated uint64 output_ids = 2;
inline int ModelRequest::_internal_output_ids_size() const {
  return output_ids_.size();
}
inline int ModelRequest::output_ids_size() const {
  return _internal_output_ids_size();
}
inline void ModelRequest::clear_output_ids() {
  output_ids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ModelRequest::_internal_output_ids(int index) const {
  return output_ids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ModelRequest::output_ids(int index) const {
  // @@protoc_insertion_point(field_get:yolo_tf.ModelRequest.output_ids)
  return _internal_output_ids(index);
}
inline void ModelRequest::set_output_ids(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  output_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:yolo_tf.ModelRequest.output_ids)
}
inline void ModelRequest::_internal_add_output_ids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  output_ids_.Add(value);
}
inline void ModelRequest::add_output_ids(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_output_ids(value);
  // @@protoc_insertion_point(field_add:yolo_tf.ModelRequest.output_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
ModelRequest::_internal_output_ids() const {
  return output_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
ModelRequest::output_ids() const {
  // @@protoc_insertion_point(field_list:yolo_tf.ModelRequest.output_ids)
  return _internal_output_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
ModelRequest::_internal_mutable_output_ids() {
  return &output_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
ModelRequest::mutable_output_ids() {
  // @@protoc_insertion_point(field_mutable_list:yolo_tf.ModelRequest.output_ids)
  return _internal_mutable_output_ids();
}

// string name = 3;
inline void ModelRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ModelRequest::name() const {
  // @@protoc_insertion_point(field_get:yolo_tf.ModelRequest.name)
  return _internal_name();
}
inline void ModelRequest::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:yolo_tf.ModelRequest.name)
}
inline std::string* ModelRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.ModelRequest.name)
  return _internal_mutable_name();
}
inline const std::string& ModelRequest::_internal_name() const {
  return name_.GetNoArena();
}
inline void ModelRequest::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ModelRequest::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.ModelRequest.name)
}
inline void ModelRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.ModelRequest.name)
}
inline void ModelRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.ModelRequest.name)
}
inline std::string* ModelRequest::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ModelRequest::release_name() {
  // @@protoc_insertion_point(field_release:yolo_tf.ModelRequest.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ModelRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.ModelRequest.name)
}

// string connection_id = 4;
inline void ModelRequest::clear_connection_id() {
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ModelRequest::connection_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.ModelRequest.connection_id)
  return _internal_connection_id();
}
inline void ModelRequest::set_connection_id(const std::string& value) {
  _internal_set_connection_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.ModelRequest.connection_id)
}
inline std::string* ModelRequest::mutable_connection_id() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.ModelRequest.connection_id)
  return _internal_mutable_connection_id();
}
inline const std::string& ModelRequest::_internal_connection_id() const {
  return connection_id_.GetNoArena();
}
inline void ModelRequest::_internal_set_connection_id(const std::string& value) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ModelRequest::set_connection_id(std::string&& value) {
  
  connection_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.ModelRequest.connection_id)
}
inline void ModelRequest::set_connection_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.ModelRequest.connection_id)
}
inline void ModelRequest::set_connection_id(const char* value, size_t size) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.ModelRequest.connection_id)
}
inline std::string* ModelRequest::_internal_mutable_connection_id() {
  
  return connection_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ModelRequest::release_connection_id() {
  // @@protoc_insertion_point(field_release:yolo_tf.ModelRequest.connection_id)
  
  return connection_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ModelRequest::set_allocated_connection_id(std::string* connection_id) {
  if (connection_id != nullptr) {
    
  } else {
    
  }
  connection_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), connection_id);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.ModelRequest.connection_id)
}

// -------------------------------------------------------------------

// ModelResponse

// uint64 obj_id = 1;
inline void ModelResponse::clear_obj_id() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ModelResponse::_internal_obj_id() const {
  return obj_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ModelResponse::obj_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.ModelResponse.obj_id)
  return _internal_obj_id();
}
inline void ModelResponse::_internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  obj_id_ = value;
}
inline void ModelResponse::set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_obj_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.ModelResponse.obj_id)
}

// -------------------------------------------------------------------

// ZeroPadding2DRequest

// bytes padding = 1;
inline void ZeroPadding2DRequest::clear_padding() {
  padding_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZeroPadding2DRequest::padding() const {
  // @@protoc_insertion_point(field_get:yolo_tf.ZeroPadding2DRequest.padding)
  return _internal_padding();
}
inline void ZeroPadding2DRequest::set_padding(const std::string& value) {
  _internal_set_padding(value);
  // @@protoc_insertion_point(field_set:yolo_tf.ZeroPadding2DRequest.padding)
}
inline std::string* ZeroPadding2DRequest::mutable_padding() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.ZeroPadding2DRequest.padding)
  return _internal_mutable_padding();
}
inline const std::string& ZeroPadding2DRequest::_internal_padding() const {
  return padding_.GetNoArena();
}
inline void ZeroPadding2DRequest::_internal_set_padding(const std::string& value) {
  
  padding_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZeroPadding2DRequest::set_padding(std::string&& value) {
  
  padding_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.ZeroPadding2DRequest.padding)
}
inline void ZeroPadding2DRequest::set_padding(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  padding_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.ZeroPadding2DRequest.padding)
}
inline void ZeroPadding2DRequest::set_padding(const void* value, size_t size) {
  
  padding_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.ZeroPadding2DRequest.padding)
}
inline std::string* ZeroPadding2DRequest::_internal_mutable_padding() {
  
  return padding_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZeroPadding2DRequest::release_padding() {
  // @@protoc_insertion_point(field_release:yolo_tf.ZeroPadding2DRequest.padding)
  
  return padding_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZeroPadding2DRequest::set_allocated_padding(std::string* padding) {
  if (padding != nullptr) {
    
  } else {
    
  }
  padding_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), padding);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.ZeroPadding2DRequest.padding)
}

// string data_format = 2;
inline void ZeroPadding2DRequest::clear_data_format() {
  data_format_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZeroPadding2DRequest::data_format() const {
  // @@protoc_insertion_point(field_get:yolo_tf.ZeroPadding2DRequest.data_format)
  return _internal_data_format();
}
inline void ZeroPadding2DRequest::set_data_format(const std::string& value) {
  _internal_set_data_format(value);
  // @@protoc_insertion_point(field_set:yolo_tf.ZeroPadding2DRequest.data_format)
}
inline std::string* ZeroPadding2DRequest::mutable_data_format() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.ZeroPadding2DRequest.data_format)
  return _internal_mutable_data_format();
}
inline const std::string& ZeroPadding2DRequest::_internal_data_format() const {
  return data_format_.GetNoArena();
}
inline void ZeroPadding2DRequest::_internal_set_data_format(const std::string& value) {
  
  data_format_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZeroPadding2DRequest::set_data_format(std::string&& value) {
  
  data_format_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.ZeroPadding2DRequest.data_format)
}
inline void ZeroPadding2DRequest::set_data_format(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  data_format_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.ZeroPadding2DRequest.data_format)
}
inline void ZeroPadding2DRequest::set_data_format(const char* value, size_t size) {
  
  data_format_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.ZeroPadding2DRequest.data_format)
}
inline std::string* ZeroPadding2DRequest::_internal_mutable_data_format() {
  
  return data_format_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZeroPadding2DRequest::release_data_format() {
  // @@protoc_insertion_point(field_release:yolo_tf.ZeroPadding2DRequest.data_format)
  
  return data_format_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZeroPadding2DRequest::set_allocated_data_format(std::string* data_format) {
  if (data_format != nullptr) {
    
  } else {
    
  }
  data_format_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), data_format);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.ZeroPadding2DRequest.data_format)
}

// string name = 3;
inline void ZeroPadding2DRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZeroPadding2DRequest::name() const {
  // @@protoc_insertion_point(field_get:yolo_tf.ZeroPadding2DRequest.name)
  return _internal_name();
}
inline void ZeroPadding2DRequest::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:yolo_tf.ZeroPadding2DRequest.name)
}
inline std::string* ZeroPadding2DRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.ZeroPadding2DRequest.name)
  return _internal_mutable_name();
}
inline const std::string& ZeroPadding2DRequest::_internal_name() const {
  return name_.GetNoArena();
}
inline void ZeroPadding2DRequest::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZeroPadding2DRequest::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.ZeroPadding2DRequest.name)
}
inline void ZeroPadding2DRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.ZeroPadding2DRequest.name)
}
inline void ZeroPadding2DRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.ZeroPadding2DRequest.name)
}
inline std::string* ZeroPadding2DRequest::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZeroPadding2DRequest::release_name() {
  // @@protoc_insertion_point(field_release:yolo_tf.ZeroPadding2DRequest.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZeroPadding2DRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.ZeroPadding2DRequest.name)
}

// string connection_id = 4;
inline void ZeroPadding2DRequest::clear_connection_id() {
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ZeroPadding2DRequest::connection_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.ZeroPadding2DRequest.connection_id)
  return _internal_connection_id();
}
inline void ZeroPadding2DRequest::set_connection_id(const std::string& value) {
  _internal_set_connection_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.ZeroPadding2DRequest.connection_id)
}
inline std::string* ZeroPadding2DRequest::mutable_connection_id() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.ZeroPadding2DRequest.connection_id)
  return _internal_mutable_connection_id();
}
inline const std::string& ZeroPadding2DRequest::_internal_connection_id() const {
  return connection_id_.GetNoArena();
}
inline void ZeroPadding2DRequest::_internal_set_connection_id(const std::string& value) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ZeroPadding2DRequest::set_connection_id(std::string&& value) {
  
  connection_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.ZeroPadding2DRequest.connection_id)
}
inline void ZeroPadding2DRequest::set_connection_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.ZeroPadding2DRequest.connection_id)
}
inline void ZeroPadding2DRequest::set_connection_id(const char* value, size_t size) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.ZeroPadding2DRequest.connection_id)
}
inline std::string* ZeroPadding2DRequest::_internal_mutable_connection_id() {
  
  return connection_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ZeroPadding2DRequest::release_connection_id() {
  // @@protoc_insertion_point(field_release:yolo_tf.ZeroPadding2DRequest.connection_id)
  
  return connection_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ZeroPadding2DRequest::set_allocated_connection_id(std::string* connection_id) {
  if (connection_id != nullptr) {
    
  } else {
    
  }
  connection_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), connection_id);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.ZeroPadding2DRequest.connection_id)
}

// -------------------------------------------------------------------

// ZeroPadding2DResponse

// uint64 obj_id = 1;
inline void ZeroPadding2DResponse::clear_obj_id() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ZeroPadding2DResponse::_internal_obj_id() const {
  return obj_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ZeroPadding2DResponse::obj_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.ZeroPadding2DResponse.obj_id)
  return _internal_obj_id();
}
inline void ZeroPadding2DResponse::_internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  obj_id_ = value;
}
inline void ZeroPadding2DResponse::set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_obj_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.ZeroPadding2DResponse.obj_id)
}

// -------------------------------------------------------------------

// Conv2DRequest

// int32 filters = 1;
inline void Conv2DRequest::clear_filters() {
  filters_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Conv2DRequest::_internal_filters() const {
  return filters_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Conv2DRequest::filters() const {
  // @@protoc_insertion_point(field_get:yolo_tf.Conv2DRequest.filters)
  return _internal_filters();
}
inline void Conv2DRequest::_internal_set_filters(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  filters_ = value;
}
inline void Conv2DRequest::set_filters(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_filters(value);
  // @@protoc_insertion_point(field_set:yolo_tf.Conv2DRequest.filters)
}

// bytes pickled_kernel_size = 2;
inline void Conv2DRequest::clear_pickled_kernel_size() {
  pickled_kernel_size_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Conv2DRequest::pickled_kernel_size() const {
  // @@protoc_insertion_point(field_get:yolo_tf.Conv2DRequest.pickled_kernel_size)
  return _internal_pickled_kernel_size();
}
inline void Conv2DRequest::set_pickled_kernel_size(const std::string& value) {
  _internal_set_pickled_kernel_size(value);
  // @@protoc_insertion_point(field_set:yolo_tf.Conv2DRequest.pickled_kernel_size)
}
inline std::string* Conv2DRequest::mutable_pickled_kernel_size() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.Conv2DRequest.pickled_kernel_size)
  return _internal_mutable_pickled_kernel_size();
}
inline const std::string& Conv2DRequest::_internal_pickled_kernel_size() const {
  return pickled_kernel_size_.GetNoArena();
}
inline void Conv2DRequest::_internal_set_pickled_kernel_size(const std::string& value) {
  
  pickled_kernel_size_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Conv2DRequest::set_pickled_kernel_size(std::string&& value) {
  
  pickled_kernel_size_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.Conv2DRequest.pickled_kernel_size)
}
inline void Conv2DRequest::set_pickled_kernel_size(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pickled_kernel_size_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.Conv2DRequest.pickled_kernel_size)
}
inline void Conv2DRequest::set_pickled_kernel_size(const void* value, size_t size) {
  
  pickled_kernel_size_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.Conv2DRequest.pickled_kernel_size)
}
inline std::string* Conv2DRequest::_internal_mutable_pickled_kernel_size() {
  
  return pickled_kernel_size_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Conv2DRequest::release_pickled_kernel_size() {
  // @@protoc_insertion_point(field_release:yolo_tf.Conv2DRequest.pickled_kernel_size)
  
  return pickled_kernel_size_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Conv2DRequest::set_allocated_pickled_kernel_size(std::string* pickled_kernel_size) {
  if (pickled_kernel_size != nullptr) {
    
  } else {
    
  }
  pickled_kernel_size_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pickled_kernel_size);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.Conv2DRequest.pickled_kernel_size)
}

// bytes pickled_strides = 3;
inline void Conv2DRequest::clear_pickled_strides() {
  pickled_strides_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Conv2DRequest::pickled_strides() const {
  // @@protoc_insertion_point(field_get:yolo_tf.Conv2DRequest.pickled_strides)
  return _internal_pickled_strides();
}
inline void Conv2DRequest::set_pickled_strides(const std::string& value) {
  _internal_set_pickled_strides(value);
  // @@protoc_insertion_point(field_set:yolo_tf.Conv2DRequest.pickled_strides)
}
inline std::string* Conv2DRequest::mutable_pickled_strides() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.Conv2DRequest.pickled_strides)
  return _internal_mutable_pickled_strides();
}
inline const std::string& Conv2DRequest::_internal_pickled_strides() const {
  return pickled_strides_.GetNoArena();
}
inline void Conv2DRequest::_internal_set_pickled_strides(const std::string& value) {
  
  pickled_strides_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Conv2DRequest::set_pickled_strides(std::string&& value) {
  
  pickled_strides_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.Conv2DRequest.pickled_strides)
}
inline void Conv2DRequest::set_pickled_strides(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pickled_strides_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.Conv2DRequest.pickled_strides)
}
inline void Conv2DRequest::set_pickled_strides(const void* value, size_t size) {
  
  pickled_strides_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.Conv2DRequest.pickled_strides)
}
inline std::string* Conv2DRequest::_internal_mutable_pickled_strides() {
  
  return pickled_strides_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Conv2DRequest::release_pickled_strides() {
  // @@protoc_insertion_point(field_release:yolo_tf.Conv2DRequest.pickled_strides)
  
  return pickled_strides_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Conv2DRequest::set_allocated_pickled_strides(std::string* pickled_strides) {
  if (pickled_strides != nullptr) {
    
  } else {
    
  }
  pickled_strides_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pickled_strides);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.Conv2DRequest.pickled_strides)
}

// string padding = 4;
inline void Conv2DRequest::clear_padding() {
  padding_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Conv2DRequest::padding() const {
  // @@protoc_insertion_point(field_get:yolo_tf.Conv2DRequest.padding)
  return _internal_padding();
}
inline void Conv2DRequest::set_padding(const std::string& value) {
  _internal_set_padding(value);
  // @@protoc_insertion_point(field_set:yolo_tf.Conv2DRequest.padding)
}
inline std::string* Conv2DRequest::mutable_padding() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.Conv2DRequest.padding)
  return _internal_mutable_padding();
}
inline const std::string& Conv2DRequest::_internal_padding() const {
  return padding_.GetNoArena();
}
inline void Conv2DRequest::_internal_set_padding(const std::string& value) {
  
  padding_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Conv2DRequest::set_padding(std::string&& value) {
  
  padding_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.Conv2DRequest.padding)
}
inline void Conv2DRequest::set_padding(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  padding_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.Conv2DRequest.padding)
}
inline void Conv2DRequest::set_padding(const char* value, size_t size) {
  
  padding_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.Conv2DRequest.padding)
}
inline std::string* Conv2DRequest::_internal_mutable_padding() {
  
  return padding_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Conv2DRequest::release_padding() {
  // @@protoc_insertion_point(field_release:yolo_tf.Conv2DRequest.padding)
  
  return padding_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Conv2DRequest::set_allocated_padding(std::string* padding) {
  if (padding != nullptr) {
    
  } else {
    
  }
  padding_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), padding);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.Conv2DRequest.padding)
}

// bool use_bias = 5;
inline void Conv2DRequest::clear_use_bias() {
  use_bias_ = false;
}
inline bool Conv2DRequest::_internal_use_bias() const {
  return use_bias_;
}
inline bool Conv2DRequest::use_bias() const {
  // @@protoc_insertion_point(field_get:yolo_tf.Conv2DRequest.use_bias)
  return _internal_use_bias();
}
inline void Conv2DRequest::_internal_set_use_bias(bool value) {
  
  use_bias_ = value;
}
inline void Conv2DRequest::set_use_bias(bool value) {
  _internal_set_use_bias(value);
  // @@protoc_insertion_point(field_set:yolo_tf.Conv2DRequest.use_bias)
}

// bytes pickled_kernel_regularizer = 6;
inline void Conv2DRequest::clear_pickled_kernel_regularizer() {
  pickled_kernel_regularizer_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Conv2DRequest::pickled_kernel_regularizer() const {
  // @@protoc_insertion_point(field_get:yolo_tf.Conv2DRequest.pickled_kernel_regularizer)
  return _internal_pickled_kernel_regularizer();
}
inline void Conv2DRequest::set_pickled_kernel_regularizer(const std::string& value) {
  _internal_set_pickled_kernel_regularizer(value);
  // @@protoc_insertion_point(field_set:yolo_tf.Conv2DRequest.pickled_kernel_regularizer)
}
inline std::string* Conv2DRequest::mutable_pickled_kernel_regularizer() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.Conv2DRequest.pickled_kernel_regularizer)
  return _internal_mutable_pickled_kernel_regularizer();
}
inline const std::string& Conv2DRequest::_internal_pickled_kernel_regularizer() const {
  return pickled_kernel_regularizer_.GetNoArena();
}
inline void Conv2DRequest::_internal_set_pickled_kernel_regularizer(const std::string& value) {
  
  pickled_kernel_regularizer_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Conv2DRequest::set_pickled_kernel_regularizer(std::string&& value) {
  
  pickled_kernel_regularizer_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.Conv2DRequest.pickled_kernel_regularizer)
}
inline void Conv2DRequest::set_pickled_kernel_regularizer(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pickled_kernel_regularizer_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.Conv2DRequest.pickled_kernel_regularizer)
}
inline void Conv2DRequest::set_pickled_kernel_regularizer(const void* value, size_t size) {
  
  pickled_kernel_regularizer_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.Conv2DRequest.pickled_kernel_regularizer)
}
inline std::string* Conv2DRequest::_internal_mutable_pickled_kernel_regularizer() {
  
  return pickled_kernel_regularizer_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Conv2DRequest::release_pickled_kernel_regularizer() {
  // @@protoc_insertion_point(field_release:yolo_tf.Conv2DRequest.pickled_kernel_regularizer)
  
  return pickled_kernel_regularizer_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Conv2DRequest::set_allocated_pickled_kernel_regularizer(std::string* pickled_kernel_regularizer) {
  if (pickled_kernel_regularizer != nullptr) {
    
  } else {
    
  }
  pickled_kernel_regularizer_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pickled_kernel_regularizer);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.Conv2DRequest.pickled_kernel_regularizer)
}

// string name = 7;
inline void Conv2DRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Conv2DRequest::name() const {
  // @@protoc_insertion_point(field_get:yolo_tf.Conv2DRequest.name)
  return _internal_name();
}
inline void Conv2DRequest::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:yolo_tf.Conv2DRequest.name)
}
inline std::string* Conv2DRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.Conv2DRequest.name)
  return _internal_mutable_name();
}
inline const std::string& Conv2DRequest::_internal_name() const {
  return name_.GetNoArena();
}
inline void Conv2DRequest::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Conv2DRequest::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.Conv2DRequest.name)
}
inline void Conv2DRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.Conv2DRequest.name)
}
inline void Conv2DRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.Conv2DRequest.name)
}
inline std::string* Conv2DRequest::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Conv2DRequest::release_name() {
  // @@protoc_insertion_point(field_release:yolo_tf.Conv2DRequest.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Conv2DRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.Conv2DRequest.name)
}

// string connection_id = 8;
inline void Conv2DRequest::clear_connection_id() {
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& Conv2DRequest::connection_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.Conv2DRequest.connection_id)
  return _internal_connection_id();
}
inline void Conv2DRequest::set_connection_id(const std::string& value) {
  _internal_set_connection_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.Conv2DRequest.connection_id)
}
inline std::string* Conv2DRequest::mutable_connection_id() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.Conv2DRequest.connection_id)
  return _internal_mutable_connection_id();
}
inline const std::string& Conv2DRequest::_internal_connection_id() const {
  return connection_id_.GetNoArena();
}
inline void Conv2DRequest::_internal_set_connection_id(const std::string& value) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void Conv2DRequest::set_connection_id(std::string&& value) {
  
  connection_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.Conv2DRequest.connection_id)
}
inline void Conv2DRequest::set_connection_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.Conv2DRequest.connection_id)
}
inline void Conv2DRequest::set_connection_id(const char* value, size_t size) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.Conv2DRequest.connection_id)
}
inline std::string* Conv2DRequest::_internal_mutable_connection_id() {
  
  return connection_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* Conv2DRequest::release_connection_id() {
  // @@protoc_insertion_point(field_release:yolo_tf.Conv2DRequest.connection_id)
  
  return connection_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void Conv2DRequest::set_allocated_connection_id(std::string* connection_id) {
  if (connection_id != nullptr) {
    
  } else {
    
  }
  connection_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), connection_id);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.Conv2DRequest.connection_id)
}

// -------------------------------------------------------------------

// Conv2DResponse

// uint64 obj_id = 1;
inline void Conv2DResponse::clear_obj_id() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Conv2DResponse::_internal_obj_id() const {
  return obj_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Conv2DResponse::obj_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.Conv2DResponse.obj_id)
  return _internal_obj_id();
}
inline void Conv2DResponse::_internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  obj_id_ = value;
}
inline void Conv2DResponse::set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_obj_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.Conv2DResponse.obj_id)
}

// -------------------------------------------------------------------

// LeakyReluRequest

// float alpha = 1;
inline void LeakyReluRequest::clear_alpha() {
  alpha_ = 0;
}
inline float LeakyReluRequest::_internal_alpha() const {
  return alpha_;
}
inline float LeakyReluRequest::alpha() const {
  // @@protoc_insertion_point(field_get:yolo_tf.LeakyReluRequest.alpha)
  return _internal_alpha();
}
inline void LeakyReluRequest::_internal_set_alpha(float value) {
  
  alpha_ = value;
}
inline void LeakyReluRequest::set_alpha(float value) {
  _internal_set_alpha(value);
  // @@protoc_insertion_point(field_set:yolo_tf.LeakyReluRequest.alpha)
}

// string name = 2;
inline void LeakyReluRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& LeakyReluRequest::name() const {
  // @@protoc_insertion_point(field_get:yolo_tf.LeakyReluRequest.name)
  return _internal_name();
}
inline void LeakyReluRequest::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:yolo_tf.LeakyReluRequest.name)
}
inline std::string* LeakyReluRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.LeakyReluRequest.name)
  return _internal_mutable_name();
}
inline const std::string& LeakyReluRequest::_internal_name() const {
  return name_.GetNoArena();
}
inline void LeakyReluRequest::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void LeakyReluRequest::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.LeakyReluRequest.name)
}
inline void LeakyReluRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.LeakyReluRequest.name)
}
inline void LeakyReluRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.LeakyReluRequest.name)
}
inline std::string* LeakyReluRequest::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* LeakyReluRequest::release_name() {
  // @@protoc_insertion_point(field_release:yolo_tf.LeakyReluRequest.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void LeakyReluRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.LeakyReluRequest.name)
}

// string connection_id = 3;
inline void LeakyReluRequest::clear_connection_id() {
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& LeakyReluRequest::connection_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.LeakyReluRequest.connection_id)
  return _internal_connection_id();
}
inline void LeakyReluRequest::set_connection_id(const std::string& value) {
  _internal_set_connection_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.LeakyReluRequest.connection_id)
}
inline std::string* LeakyReluRequest::mutable_connection_id() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.LeakyReluRequest.connection_id)
  return _internal_mutable_connection_id();
}
inline const std::string& LeakyReluRequest::_internal_connection_id() const {
  return connection_id_.GetNoArena();
}
inline void LeakyReluRequest::_internal_set_connection_id(const std::string& value) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void LeakyReluRequest::set_connection_id(std::string&& value) {
  
  connection_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.LeakyReluRequest.connection_id)
}
inline void LeakyReluRequest::set_connection_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.LeakyReluRequest.connection_id)
}
inline void LeakyReluRequest::set_connection_id(const char* value, size_t size) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.LeakyReluRequest.connection_id)
}
inline std::string* LeakyReluRequest::_internal_mutable_connection_id() {
  
  return connection_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* LeakyReluRequest::release_connection_id() {
  // @@protoc_insertion_point(field_release:yolo_tf.LeakyReluRequest.connection_id)
  
  return connection_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void LeakyReluRequest::set_allocated_connection_id(std::string* connection_id) {
  if (connection_id != nullptr) {
    
  } else {
    
  }
  connection_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), connection_id);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.LeakyReluRequest.connection_id)
}

// -------------------------------------------------------------------

// LeakyReluResponse

// uint64 obj_id = 1;
inline void LeakyReluResponse::clear_obj_id() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LeakyReluResponse::_internal_obj_id() const {
  return obj_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LeakyReluResponse::obj_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.LeakyReluResponse.obj_id)
  return _internal_obj_id();
}
inline void LeakyReluResponse::_internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  obj_id_ = value;
}
inline void LeakyReluResponse::set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_obj_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.LeakyReluResponse.obj_id)
}

// -------------------------------------------------------------------

// AddRequest

// string name = 1;
inline void AddRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& AddRequest::name() const {
  // @@protoc_insertion_point(field_get:yolo_tf.AddRequest.name)
  return _internal_name();
}
inline void AddRequest::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:yolo_tf.AddRequest.name)
}
inline std::string* AddRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.AddRequest.name)
  return _internal_mutable_name();
}
inline const std::string& AddRequest::_internal_name() const {
  return name_.GetNoArena();
}
inline void AddRequest::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void AddRequest::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.AddRequest.name)
}
inline void AddRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.AddRequest.name)
}
inline void AddRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.AddRequest.name)
}
inline std::string* AddRequest::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AddRequest::release_name() {
  // @@protoc_insertion_point(field_release:yolo_tf.AddRequest.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AddRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.AddRequest.name)
}

// string connection_id = 2;
inline void AddRequest::clear_connection_id() {
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& AddRequest::connection_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.AddRequest.connection_id)
  return _internal_connection_id();
}
inline void AddRequest::set_connection_id(const std::string& value) {
  _internal_set_connection_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.AddRequest.connection_id)
}
inline std::string* AddRequest::mutable_connection_id() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.AddRequest.connection_id)
  return _internal_mutable_connection_id();
}
inline const std::string& AddRequest::_internal_connection_id() const {
  return connection_id_.GetNoArena();
}
inline void AddRequest::_internal_set_connection_id(const std::string& value) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void AddRequest::set_connection_id(std::string&& value) {
  
  connection_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.AddRequest.connection_id)
}
inline void AddRequest::set_connection_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.AddRequest.connection_id)
}
inline void AddRequest::set_connection_id(const char* value, size_t size) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.AddRequest.connection_id)
}
inline std::string* AddRequest::_internal_mutable_connection_id() {
  
  return connection_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* AddRequest::release_connection_id() {
  // @@protoc_insertion_point(field_release:yolo_tf.AddRequest.connection_id)
  
  return connection_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void AddRequest::set_allocated_connection_id(std::string* connection_id) {
  if (connection_id != nullptr) {
    
  } else {
    
  }
  connection_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), connection_id);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.AddRequest.connection_id)
}

// -------------------------------------------------------------------

// AddResponse

// uint64 obj_id = 1;
inline void AddResponse::clear_obj_id() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AddResponse::_internal_obj_id() const {
  return obj_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AddResponse::obj_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.AddResponse.obj_id)
  return _internal_obj_id();
}
inline void AddResponse::_internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  obj_id_ = value;
}
inline void AddResponse::set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_obj_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.AddResponse.obj_id)
}

// -------------------------------------------------------------------

// LambdaRequest

// string expr = 1;
inline void LambdaRequest::clear_expr() {
  expr_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& LambdaRequest::expr() const {
  // @@protoc_insertion_point(field_get:yolo_tf.LambdaRequest.expr)
  return _internal_expr();
}
inline void LambdaRequest::set_expr(const std::string& value) {
  _internal_set_expr(value);
  // @@protoc_insertion_point(field_set:yolo_tf.LambdaRequest.expr)
}
inline std::string* LambdaRequest::mutable_expr() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.LambdaRequest.expr)
  return _internal_mutable_expr();
}
inline const std::string& LambdaRequest::_internal_expr() const {
  return expr_.GetNoArena();
}
inline void LambdaRequest::_internal_set_expr(const std::string& value) {
  
  expr_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void LambdaRequest::set_expr(std::string&& value) {
  
  expr_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.LambdaRequest.expr)
}
inline void LambdaRequest::set_expr(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  expr_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.LambdaRequest.expr)
}
inline void LambdaRequest::set_expr(const char* value, size_t size) {
  
  expr_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.LambdaRequest.expr)
}
inline std::string* LambdaRequest::_internal_mutable_expr() {
  
  return expr_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* LambdaRequest::release_expr() {
  // @@protoc_insertion_point(field_release:yolo_tf.LambdaRequest.expr)
  
  return expr_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void LambdaRequest::set_allocated_expr(std::string* expr) {
  if (expr != nullptr) {
    
  } else {
    
  }
  expr_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), expr);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.LambdaRequest.expr)
}

// string name = 2;
inline void LambdaRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& LambdaRequest::name() const {
  // @@protoc_insertion_point(field_get:yolo_tf.LambdaRequest.name)
  return _internal_name();
}
inline void LambdaRequest::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:yolo_tf.LambdaRequest.name)
}
inline std::string* LambdaRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.LambdaRequest.name)
  return _internal_mutable_name();
}
inline const std::string& LambdaRequest::_internal_name() const {
  return name_.GetNoArena();
}
inline void LambdaRequest::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void LambdaRequest::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.LambdaRequest.name)
}
inline void LambdaRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.LambdaRequest.name)
}
inline void LambdaRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.LambdaRequest.name)
}
inline std::string* LambdaRequest::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* LambdaRequest::release_name() {
  // @@protoc_insertion_point(field_release:yolo_tf.LambdaRequest.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void LambdaRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.LambdaRequest.name)
}

// string connection_id = 3;
inline void LambdaRequest::clear_connection_id() {
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& LambdaRequest::connection_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.LambdaRequest.connection_id)
  return _internal_connection_id();
}
inline void LambdaRequest::set_connection_id(const std::string& value) {
  _internal_set_connection_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.LambdaRequest.connection_id)
}
inline std::string* LambdaRequest::mutable_connection_id() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.LambdaRequest.connection_id)
  return _internal_mutable_connection_id();
}
inline const std::string& LambdaRequest::_internal_connection_id() const {
  return connection_id_.GetNoArena();
}
inline void LambdaRequest::_internal_set_connection_id(const std::string& value) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void LambdaRequest::set_connection_id(std::string&& value) {
  
  connection_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.LambdaRequest.connection_id)
}
inline void LambdaRequest::set_connection_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.LambdaRequest.connection_id)
}
inline void LambdaRequest::set_connection_id(const char* value, size_t size) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.LambdaRequest.connection_id)
}
inline std::string* LambdaRequest::_internal_mutable_connection_id() {
  
  return connection_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* LambdaRequest::release_connection_id() {
  // @@protoc_insertion_point(field_release:yolo_tf.LambdaRequest.connection_id)
  
  return connection_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void LambdaRequest::set_allocated_connection_id(std::string* connection_id) {
  if (connection_id != nullptr) {
    
  } else {
    
  }
  connection_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), connection_id);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.LambdaRequest.connection_id)
}

// -------------------------------------------------------------------

// LambdaResponse

// uint64 obj_id = 1;
inline void LambdaResponse::clear_obj_id() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LambdaResponse::_internal_obj_id() const {
  return obj_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LambdaResponse::obj_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.LambdaResponse.obj_id)
  return _internal_obj_id();
}
inline void LambdaResponse::_internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  obj_id_ = value;
}
inline void LambdaResponse::set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_obj_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.LambdaResponse.obj_id)
}

// -------------------------------------------------------------------

// UpSampling2DRequest

// uint32 size = 1;
inline void UpSampling2DRequest::clear_size() {
  size_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UpSampling2DRequest::_internal_size() const {
  return size_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 UpSampling2DRequest::size() const {
  // @@protoc_insertion_point(field_get:yolo_tf.UpSampling2DRequest.size)
  return _internal_size();
}
inline void UpSampling2DRequest::_internal_set_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  size_ = value;
}
inline void UpSampling2DRequest::set_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:yolo_tf.UpSampling2DRequest.size)
}

// string connection_id = 2;
inline void UpSampling2DRequest::clear_connection_id() {
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& UpSampling2DRequest::connection_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.UpSampling2DRequest.connection_id)
  return _internal_connection_id();
}
inline void UpSampling2DRequest::set_connection_id(const std::string& value) {
  _internal_set_connection_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.UpSampling2DRequest.connection_id)
}
inline std::string* UpSampling2DRequest::mutable_connection_id() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.UpSampling2DRequest.connection_id)
  return _internal_mutable_connection_id();
}
inline const std::string& UpSampling2DRequest::_internal_connection_id() const {
  return connection_id_.GetNoArena();
}
inline void UpSampling2DRequest::_internal_set_connection_id(const std::string& value) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void UpSampling2DRequest::set_connection_id(std::string&& value) {
  
  connection_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.UpSampling2DRequest.connection_id)
}
inline void UpSampling2DRequest::set_connection_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.UpSampling2DRequest.connection_id)
}
inline void UpSampling2DRequest::set_connection_id(const char* value, size_t size) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.UpSampling2DRequest.connection_id)
}
inline std::string* UpSampling2DRequest::_internal_mutable_connection_id() {
  
  return connection_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* UpSampling2DRequest::release_connection_id() {
  // @@protoc_insertion_point(field_release:yolo_tf.UpSampling2DRequest.connection_id)
  
  return connection_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void UpSampling2DRequest::set_allocated_connection_id(std::string* connection_id) {
  if (connection_id != nullptr) {
    
  } else {
    
  }
  connection_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), connection_id);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.UpSampling2DRequest.connection_id)
}

// -------------------------------------------------------------------

// UpSampling2DResponse

// uint64 obj_id = 1;
inline void UpSampling2DResponse::clear_obj_id() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UpSampling2DResponse::_internal_obj_id() const {
  return obj_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 UpSampling2DResponse::obj_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.UpSampling2DResponse.obj_id)
  return _internal_obj_id();
}
inline void UpSampling2DResponse::_internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  obj_id_ = value;
}
inline void UpSampling2DResponse::set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_obj_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.UpSampling2DResponse.obj_id)
}

// -------------------------------------------------------------------

// ConcatenateRequest

// string connection_id = 1;
inline void ConcatenateRequest::clear_connection_id() {
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ConcatenateRequest::connection_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.ConcatenateRequest.connection_id)
  return _internal_connection_id();
}
inline void ConcatenateRequest::set_connection_id(const std::string& value) {
  _internal_set_connection_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.ConcatenateRequest.connection_id)
}
inline std::string* ConcatenateRequest::mutable_connection_id() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.ConcatenateRequest.connection_id)
  return _internal_mutable_connection_id();
}
inline const std::string& ConcatenateRequest::_internal_connection_id() const {
  return connection_id_.GetNoArena();
}
inline void ConcatenateRequest::_internal_set_connection_id(const std::string& value) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ConcatenateRequest::set_connection_id(std::string&& value) {
  
  connection_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.ConcatenateRequest.connection_id)
}
inline void ConcatenateRequest::set_connection_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.ConcatenateRequest.connection_id)
}
inline void ConcatenateRequest::set_connection_id(const char* value, size_t size) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.ConcatenateRequest.connection_id)
}
inline std::string* ConcatenateRequest::_internal_mutable_connection_id() {
  
  return connection_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ConcatenateRequest::release_connection_id() {
  // @@protoc_insertion_point(field_release:yolo_tf.ConcatenateRequest.connection_id)
  
  return connection_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ConcatenateRequest::set_allocated_connection_id(std::string* connection_id) {
  if (connection_id != nullptr) {
    
  } else {
    
  }
  connection_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), connection_id);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.ConcatenateRequest.connection_id)
}

// -------------------------------------------------------------------

// ContcatenateResponse

// uint64 obj_id = 1;
inline void ContcatenateResponse::clear_obj_id() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ContcatenateResponse::_internal_obj_id() const {
  return obj_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ContcatenateResponse::obj_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.ContcatenateResponse.obj_id)
  return _internal_obj_id();
}
inline void ContcatenateResponse::_internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  obj_id_ = value;
}
inline void ContcatenateResponse::set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_obj_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.ContcatenateResponse.obj_id)
}

// -------------------------------------------------------------------

// l2Request

// float l = 1;
inline void l2Request::clear_l() {
  l_ = 0;
}
inline float l2Request::_internal_l() const {
  return l_;
}
inline float l2Request::l() const {
  // @@protoc_insertion_point(field_get:yolo_tf.l2Request.l)
  return _internal_l();
}
inline void l2Request::_internal_set_l(float value) {
  
  l_ = value;
}
inline void l2Request::set_l(float value) {
  _internal_set_l(value);
  // @@protoc_insertion_point(field_set:yolo_tf.l2Request.l)
}

// string connection_id = 2;
inline void l2Request::clear_connection_id() {
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& l2Request::connection_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.l2Request.connection_id)
  return _internal_connection_id();
}
inline void l2Request::set_connection_id(const std::string& value) {
  _internal_set_connection_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.l2Request.connection_id)
}
inline std::string* l2Request::mutable_connection_id() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.l2Request.connection_id)
  return _internal_mutable_connection_id();
}
inline const std::string& l2Request::_internal_connection_id() const {
  return connection_id_.GetNoArena();
}
inline void l2Request::_internal_set_connection_id(const std::string& value) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void l2Request::set_connection_id(std::string&& value) {
  
  connection_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.l2Request.connection_id)
}
inline void l2Request::set_connection_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.l2Request.connection_id)
}
inline void l2Request::set_connection_id(const char* value, size_t size) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.l2Request.connection_id)
}
inline std::string* l2Request::_internal_mutable_connection_id() {
  
  return connection_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* l2Request::release_connection_id() {
  // @@protoc_insertion_point(field_release:yolo_tf.l2Request.connection_id)
  
  return connection_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void l2Request::set_allocated_connection_id(std::string* connection_id) {
  if (connection_id != nullptr) {
    
  } else {
    
  }
  connection_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), connection_id);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.l2Request.connection_id)
}

// -------------------------------------------------------------------

// l2Response

// bytes pickled_l2 = 1;
inline void l2Response::clear_pickled_l2() {
  pickled_l2_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& l2Response::pickled_l2() const {
  // @@protoc_insertion_point(field_get:yolo_tf.l2Response.pickled_l2)
  return _internal_pickled_l2();
}
inline void l2Response::set_pickled_l2(const std::string& value) {
  _internal_set_pickled_l2(value);
  // @@protoc_insertion_point(field_set:yolo_tf.l2Response.pickled_l2)
}
inline std::string* l2Response::mutable_pickled_l2() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.l2Response.pickled_l2)
  return _internal_mutable_pickled_l2();
}
inline const std::string& l2Response::_internal_pickled_l2() const {
  return pickled_l2_.GetNoArena();
}
inline void l2Response::_internal_set_pickled_l2(const std::string& value) {
  
  pickled_l2_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void l2Response::set_pickled_l2(std::string&& value) {
  
  pickled_l2_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.l2Response.pickled_l2)
}
inline void l2Response::set_pickled_l2(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pickled_l2_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.l2Response.pickled_l2)
}
inline void l2Response::set_pickled_l2(const void* value, size_t size) {
  
  pickled_l2_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.l2Response.pickled_l2)
}
inline std::string* l2Response::_internal_mutable_pickled_l2() {
  
  return pickled_l2_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* l2Response::release_pickled_l2() {
  // @@protoc_insertion_point(field_release:yolo_tf.l2Response.pickled_l2)
  
  return pickled_l2_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void l2Response::set_allocated_pickled_l2(std::string* pickled_l2) {
  if (pickled_l2 != nullptr) {
    
  } else {
    
  }
  pickled_l2_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pickled_l2);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.l2Response.pickled_l2)
}

// -------------------------------------------------------------------

// ImageResizeRequest

// uint64 obj_id = 1;
inline void ImageResizeRequest::clear_obj_id() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ImageResizeRequest::_internal_obj_id() const {
  return obj_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ImageResizeRequest::obj_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.ImageResizeRequest.obj_id)
  return _internal_obj_id();
}
inline void ImageResizeRequest::_internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  obj_id_ = value;
}
inline void ImageResizeRequest::set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_obj_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.ImageResizeRequest.obj_id)
}

// repeated uint32 size = 2;
inline int ImageResizeRequest::_internal_size_size() const {
  return size_.size();
}
inline int ImageResizeRequest::size_size() const {
  return _internal_size_size();
}
inline void ImageResizeRequest::clear_size() {
  size_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ImageResizeRequest::_internal_size(int index) const {
  return size_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ImageResizeRequest::size(int index) const {
  // @@protoc_insertion_point(field_get:yolo_tf.ImageResizeRequest.size)
  return _internal_size(index);
}
inline void ImageResizeRequest::set_size(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  size_.Set(index, value);
  // @@protoc_insertion_point(field_set:yolo_tf.ImageResizeRequest.size)
}
inline void ImageResizeRequest::_internal_add_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  size_.Add(value);
}
inline void ImageResizeRequest::add_size(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_size(value);
  // @@protoc_insertion_point(field_add:yolo_tf.ImageResizeRequest.size)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
ImageResizeRequest::_internal_size() const {
  return size_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
ImageResizeRequest::size() const {
  // @@protoc_insertion_point(field_list:yolo_tf.ImageResizeRequest.size)
  return _internal_size();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
ImageResizeRequest::_internal_mutable_size() {
  return &size_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
ImageResizeRequest::mutable_size() {
  // @@protoc_insertion_point(field_mutable_list:yolo_tf.ImageResizeRequest.size)
  return _internal_mutable_size();
}

// string connection_id = 3;
inline void ImageResizeRequest::clear_connection_id() {
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ImageResizeRequest::connection_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.ImageResizeRequest.connection_id)
  return _internal_connection_id();
}
inline void ImageResizeRequest::set_connection_id(const std::string& value) {
  _internal_set_connection_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.ImageResizeRequest.connection_id)
}
inline std::string* ImageResizeRequest::mutable_connection_id() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.ImageResizeRequest.connection_id)
  return _internal_mutable_connection_id();
}
inline const std::string& ImageResizeRequest::_internal_connection_id() const {
  return connection_id_.GetNoArena();
}
inline void ImageResizeRequest::_internal_set_connection_id(const std::string& value) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ImageResizeRequest::set_connection_id(std::string&& value) {
  
  connection_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.ImageResizeRequest.connection_id)
}
inline void ImageResizeRequest::set_connection_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.ImageResizeRequest.connection_id)
}
inline void ImageResizeRequest::set_connection_id(const char* value, size_t size) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.ImageResizeRequest.connection_id)
}
inline std::string* ImageResizeRequest::_internal_mutable_connection_id() {
  
  return connection_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ImageResizeRequest::release_connection_id() {
  // @@protoc_insertion_point(field_release:yolo_tf.ImageResizeRequest.connection_id)
  
  return connection_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ImageResizeRequest::set_allocated_connection_id(std::string* connection_id) {
  if (connection_id != nullptr) {
    
  } else {
    
  }
  connection_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), connection_id);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.ImageResizeRequest.connection_id)
}

// -------------------------------------------------------------------

// ImageResizeResponse

// uint64 obj_id = 1;
inline void ImageResizeResponse::clear_obj_id() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ImageResizeResponse::_internal_obj_id() const {
  return obj_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ImageResizeResponse::obj_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.ImageResizeResponse.obj_id)
  return _internal_obj_id();
}
inline void ImageResizeResponse::_internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  obj_id_ = value;
}
inline void ImageResizeResponse::set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_obj_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.ImageResizeResponse.obj_id)
}

// -------------------------------------------------------------------

// TensorShapeRequest

// uint64 obj_id = 1;
inline void TensorShapeRequest::clear_obj_id() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TensorShapeRequest::_internal_obj_id() const {
  return obj_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TensorShapeRequest::obj_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.TensorShapeRequest.obj_id)
  return _internal_obj_id();
}
inline void TensorShapeRequest::_internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  obj_id_ = value;
}
inline void TensorShapeRequest::set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_obj_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.TensorShapeRequest.obj_id)
}

// uint32 start = 2;
inline void TensorShapeRequest::clear_start() {
  start_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TensorShapeRequest::_internal_start() const {
  return start_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TensorShapeRequest::start() const {
  // @@protoc_insertion_point(field_get:yolo_tf.TensorShapeRequest.start)
  return _internal_start();
}
inline void TensorShapeRequest::_internal_set_start(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  start_ = value;
}
inline void TensorShapeRequest::set_start(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_start(value);
  // @@protoc_insertion_point(field_set:yolo_tf.TensorShapeRequest.start)
}

// uint32 end = 3;
inline void TensorShapeRequest::clear_end() {
  end_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TensorShapeRequest::_internal_end() const {
  return end_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 TensorShapeRequest::end() const {
  // @@protoc_insertion_point(field_get:yolo_tf.TensorShapeRequest.end)
  return _internal_end();
}
inline void TensorShapeRequest::_internal_set_end(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  end_ = value;
}
inline void TensorShapeRequest::set_end(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_end(value);
  // @@protoc_insertion_point(field_set:yolo_tf.TensorShapeRequest.end)
}

// string connection_id = 4;
inline void TensorShapeRequest::clear_connection_id() {
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& TensorShapeRequest::connection_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.TensorShapeRequest.connection_id)
  return _internal_connection_id();
}
inline void TensorShapeRequest::set_connection_id(const std::string& value) {
  _internal_set_connection_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.TensorShapeRequest.connection_id)
}
inline std::string* TensorShapeRequest::mutable_connection_id() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.TensorShapeRequest.connection_id)
  return _internal_mutable_connection_id();
}
inline const std::string& TensorShapeRequest::_internal_connection_id() const {
  return connection_id_.GetNoArena();
}
inline void TensorShapeRequest::_internal_set_connection_id(const std::string& value) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void TensorShapeRequest::set_connection_id(std::string&& value) {
  
  connection_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.TensorShapeRequest.connection_id)
}
inline void TensorShapeRequest::set_connection_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.TensorShapeRequest.connection_id)
}
inline void TensorShapeRequest::set_connection_id(const char* value, size_t size) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.TensorShapeRequest.connection_id)
}
inline std::string* TensorShapeRequest::_internal_mutable_connection_id() {
  
  return connection_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* TensorShapeRequest::release_connection_id() {
  // @@protoc_insertion_point(field_release:yolo_tf.TensorShapeRequest.connection_id)
  
  return connection_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void TensorShapeRequest::set_allocated_connection_id(std::string* connection_id) {
  if (connection_id != nullptr) {
    
  } else {
    
  }
  connection_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), connection_id);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.TensorShapeRequest.connection_id)
}

// -------------------------------------------------------------------

// TensorShapeResponse

// uint64 obj_id = 1;
inline void TensorShapeResponse::clear_obj_id() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TensorShapeResponse::_internal_obj_id() const {
  return obj_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TensorShapeResponse::obj_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.TensorShapeResponse.obj_id)
  return _internal_obj_id();
}
inline void TensorShapeResponse::_internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  obj_id_ = value;
}
inline void TensorShapeResponse::set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_obj_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.TensorShapeResponse.obj_id)
}

// repeated int32 shape = 2;
inline int TensorShapeResponse::_internal_shape_size() const {
  return shape_.size();
}
inline int TensorShapeResponse::shape_size() const {
  return _internal_shape_size();
}
inline void TensorShapeResponse::clear_shape() {
  shape_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TensorShapeResponse::_internal_shape(int index) const {
  return shape_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TensorShapeResponse::shape(int index) const {
  // @@protoc_insertion_point(field_get:yolo_tf.TensorShapeResponse.shape)
  return _internal_shape(index);
}
inline void TensorShapeResponse::set_shape(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  shape_.Set(index, value);
  // @@protoc_insertion_point(field_set:yolo_tf.TensorShapeResponse.shape)
}
inline void TensorShapeResponse::_internal_add_shape(::PROTOBUF_NAMESPACE_ID::int32 value) {
  shape_.Add(value);
}
inline void TensorShapeResponse::add_shape(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_shape(value);
  // @@protoc_insertion_point(field_add:yolo_tf.TensorShapeResponse.shape)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TensorShapeResponse::_internal_shape() const {
  return shape_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
TensorShapeResponse::shape() const {
  // @@protoc_insertion_point(field_list:yolo_tf.TensorShapeResponse.shape)
  return _internal_shape();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TensorShapeResponse::_internal_mutable_shape() {
  return &shape_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
TensorShapeResponse::mutable_shape() {
  // @@protoc_insertion_point(field_mutable_list:yolo_tf.TensorShapeResponse.shape)
  return _internal_mutable_shape();
}

// -------------------------------------------------------------------

// LoadWeightsRequest

// uint64 model_obj_id = 1;
inline void LoadWeightsRequest::clear_model_obj_id() {
  model_obj_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LoadWeightsRequest::_internal_model_obj_id() const {
  return model_obj_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LoadWeightsRequest::model_obj_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.LoadWeightsRequest.model_obj_id)
  return _internal_model_obj_id();
}
inline void LoadWeightsRequest::_internal_set_model_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  model_obj_id_ = value;
}
inline void LoadWeightsRequest::set_model_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_model_obj_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.LoadWeightsRequest.model_obj_id)
}

// string weights_path = 2;
inline void LoadWeightsRequest::clear_weights_path() {
  weights_path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& LoadWeightsRequest::weights_path() const {
  // @@protoc_insertion_point(field_get:yolo_tf.LoadWeightsRequest.weights_path)
  return _internal_weights_path();
}
inline void LoadWeightsRequest::set_weights_path(const std::string& value) {
  _internal_set_weights_path(value);
  // @@protoc_insertion_point(field_set:yolo_tf.LoadWeightsRequest.weights_path)
}
inline std::string* LoadWeightsRequest::mutable_weights_path() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.LoadWeightsRequest.weights_path)
  return _internal_mutable_weights_path();
}
inline const std::string& LoadWeightsRequest::_internal_weights_path() const {
  return weights_path_.GetNoArena();
}
inline void LoadWeightsRequest::_internal_set_weights_path(const std::string& value) {
  
  weights_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void LoadWeightsRequest::set_weights_path(std::string&& value) {
  
  weights_path_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.LoadWeightsRequest.weights_path)
}
inline void LoadWeightsRequest::set_weights_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  weights_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.LoadWeightsRequest.weights_path)
}
inline void LoadWeightsRequest::set_weights_path(const char* value, size_t size) {
  
  weights_path_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.LoadWeightsRequest.weights_path)
}
inline std::string* LoadWeightsRequest::_internal_mutable_weights_path() {
  
  return weights_path_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* LoadWeightsRequest::release_weights_path() {
  // @@protoc_insertion_point(field_release:yolo_tf.LoadWeightsRequest.weights_path)
  
  return weights_path_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void LoadWeightsRequest::set_allocated_weights_path(std::string* weights_path) {
  if (weights_path != nullptr) {
    
  } else {
    
  }
  weights_path_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), weights_path);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.LoadWeightsRequest.weights_path)
}

// string connection_id = 3;
inline void LoadWeightsRequest::clear_connection_id() {
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& LoadWeightsRequest::connection_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.LoadWeightsRequest.connection_id)
  return _internal_connection_id();
}
inline void LoadWeightsRequest::set_connection_id(const std::string& value) {
  _internal_set_connection_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.LoadWeightsRequest.connection_id)
}
inline std::string* LoadWeightsRequest::mutable_connection_id() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.LoadWeightsRequest.connection_id)
  return _internal_mutable_connection_id();
}
inline const std::string& LoadWeightsRequest::_internal_connection_id() const {
  return connection_id_.GetNoArena();
}
inline void LoadWeightsRequest::_internal_set_connection_id(const std::string& value) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void LoadWeightsRequest::set_connection_id(std::string&& value) {
  
  connection_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.LoadWeightsRequest.connection_id)
}
inline void LoadWeightsRequest::set_connection_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.LoadWeightsRequest.connection_id)
}
inline void LoadWeightsRequest::set_connection_id(const char* value, size_t size) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.LoadWeightsRequest.connection_id)
}
inline std::string* LoadWeightsRequest::_internal_mutable_connection_id() {
  
  return connection_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* LoadWeightsRequest::release_connection_id() {
  // @@protoc_insertion_point(field_release:yolo_tf.LoadWeightsRequest.connection_id)
  
  return connection_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void LoadWeightsRequest::set_allocated_connection_id(std::string* connection_id) {
  if (connection_id != nullptr) {
    
  } else {
    
  }
  connection_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), connection_id);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.LoadWeightsRequest.connection_id)
}

// -------------------------------------------------------------------

// LoadWeightsResponse

// uint64 obj_id = 1;
inline void LoadWeightsResponse::clear_obj_id() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LoadWeightsResponse::_internal_obj_id() const {
  return obj_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 LoadWeightsResponse::obj_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.LoadWeightsResponse.obj_id)
  return _internal_obj_id();
}
inline void LoadWeightsResponse::_internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  obj_id_ = value;
}
inline void LoadWeightsResponse::set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_obj_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.LoadWeightsResponse.obj_id)
}

// -------------------------------------------------------------------

// ExpectPartialRequest

// uint64 obj_id = 1;
inline void ExpectPartialRequest::clear_obj_id() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ExpectPartialRequest::_internal_obj_id() const {
  return obj_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ExpectPartialRequest::obj_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.ExpectPartialRequest.obj_id)
  return _internal_obj_id();
}
inline void ExpectPartialRequest::_internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  obj_id_ = value;
}
inline void ExpectPartialRequest::set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_obj_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.ExpectPartialRequest.obj_id)
}

// string connection_id = 2;
inline void ExpectPartialRequest::clear_connection_id() {
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ExpectPartialRequest::connection_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.ExpectPartialRequest.connection_id)
  return _internal_connection_id();
}
inline void ExpectPartialRequest::set_connection_id(const std::string& value) {
  _internal_set_connection_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.ExpectPartialRequest.connection_id)
}
inline std::string* ExpectPartialRequest::mutable_connection_id() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.ExpectPartialRequest.connection_id)
  return _internal_mutable_connection_id();
}
inline const std::string& ExpectPartialRequest::_internal_connection_id() const {
  return connection_id_.GetNoArena();
}
inline void ExpectPartialRequest::_internal_set_connection_id(const std::string& value) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ExpectPartialRequest::set_connection_id(std::string&& value) {
  
  connection_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.ExpectPartialRequest.connection_id)
}
inline void ExpectPartialRequest::set_connection_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.ExpectPartialRequest.connection_id)
}
inline void ExpectPartialRequest::set_connection_id(const char* value, size_t size) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.ExpectPartialRequest.connection_id)
}
inline std::string* ExpectPartialRequest::_internal_mutable_connection_id() {
  
  return connection_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ExpectPartialRequest::release_connection_id() {
  // @@protoc_insertion_point(field_release:yolo_tf.ExpectPartialRequest.connection_id)
  
  return connection_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ExpectPartialRequest::set_allocated_connection_id(std::string* connection_id) {
  if (connection_id != nullptr) {
    
  } else {
    
  }
  connection_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), connection_id);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.ExpectPartialRequest.connection_id)
}

// -------------------------------------------------------------------

// ExpectPartialResponse

// -------------------------------------------------------------------

// DivideRequest

// uint64 obj_id = 1;
inline void DivideRequest::clear_obj_id() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DivideRequest::_internal_obj_id() const {
  return obj_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DivideRequest::obj_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.DivideRequest.obj_id)
  return _internal_obj_id();
}
inline void DivideRequest::_internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  obj_id_ = value;
}
inline void DivideRequest::set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_obj_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.DivideRequest.obj_id)
}

// int32 divisor = 2;
inline void DivideRequest::clear_divisor() {
  divisor_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DivideRequest::_internal_divisor() const {
  return divisor_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DivideRequest::divisor() const {
  // @@protoc_insertion_point(field_get:yolo_tf.DivideRequest.divisor)
  return _internal_divisor();
}
inline void DivideRequest::_internal_set_divisor(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  divisor_ = value;
}
inline void DivideRequest::set_divisor(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_divisor(value);
  // @@protoc_insertion_point(field_set:yolo_tf.DivideRequest.divisor)
}

// string connection_id = 3;
inline void DivideRequest::clear_connection_id() {
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& DivideRequest::connection_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.DivideRequest.connection_id)
  return _internal_connection_id();
}
inline void DivideRequest::set_connection_id(const std::string& value) {
  _internal_set_connection_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.DivideRequest.connection_id)
}
inline std::string* DivideRequest::mutable_connection_id() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.DivideRequest.connection_id)
  return _internal_mutable_connection_id();
}
inline const std::string& DivideRequest::_internal_connection_id() const {
  return connection_id_.GetNoArena();
}
inline void DivideRequest::_internal_set_connection_id(const std::string& value) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void DivideRequest::set_connection_id(std::string&& value) {
  
  connection_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.DivideRequest.connection_id)
}
inline void DivideRequest::set_connection_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.DivideRequest.connection_id)
}
inline void DivideRequest::set_connection_id(const char* value, size_t size) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.DivideRequest.connection_id)
}
inline std::string* DivideRequest::_internal_mutable_connection_id() {
  
  return connection_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DivideRequest::release_connection_id() {
  // @@protoc_insertion_point(field_release:yolo_tf.DivideRequest.connection_id)
  
  return connection_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DivideRequest::set_allocated_connection_id(std::string* connection_id) {
  if (connection_id != nullptr) {
    
  } else {
    
  }
  connection_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), connection_id);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.DivideRequest.connection_id)
}

// -------------------------------------------------------------------

// DivideResponse

// uint64 obj_id = 1;
inline void DivideResponse::clear_obj_id() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DivideResponse::_internal_obj_id() const {
  return obj_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 DivideResponse::obj_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.DivideResponse.obj_id)
  return _internal_obj_id();
}
inline void DivideResponse::_internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  obj_id_ = value;
}
inline void DivideResponse::set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_obj_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.DivideResponse.obj_id)
}

// -------------------------------------------------------------------

// IndexingRequest

// uint64 obj_id = 1;
inline void IndexingRequest::clear_obj_id() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 IndexingRequest::_internal_obj_id() const {
  return obj_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 IndexingRequest::obj_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.IndexingRequest.obj_id)
  return _internal_obj_id();
}
inline void IndexingRequest::_internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  obj_id_ = value;
}
inline void IndexingRequest::set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_obj_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.IndexingRequest.obj_id)
}

// repeated uint32 indices = 2;
inline int IndexingRequest::_internal_indices_size() const {
  return indices_.size();
}
inline int IndexingRequest::indices_size() const {
  return _internal_indices_size();
}
inline void IndexingRequest::clear_indices() {
  indices_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 IndexingRequest::_internal_indices(int index) const {
  return indices_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 IndexingRequest::indices(int index) const {
  // @@protoc_insertion_point(field_get:yolo_tf.IndexingRequest.indices)
  return _internal_indices(index);
}
inline void IndexingRequest::set_indices(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  indices_.Set(index, value);
  // @@protoc_insertion_point(field_set:yolo_tf.IndexingRequest.indices)
}
inline void IndexingRequest::_internal_add_indices(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  indices_.Add(value);
}
inline void IndexingRequest::add_indices(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add_indices(value);
  // @@protoc_insertion_point(field_add:yolo_tf.IndexingRequest.indices)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
IndexingRequest::_internal_indices() const {
  return indices_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
IndexingRequest::indices() const {
  // @@protoc_insertion_point(field_list:yolo_tf.IndexingRequest.indices)
  return _internal_indices();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
IndexingRequest::_internal_mutable_indices() {
  return &indices_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
IndexingRequest::mutable_indices() {
  // @@protoc_insertion_point(field_mutable_list:yolo_tf.IndexingRequest.indices)
  return _internal_mutable_indices();
}

// string connection_id = 3;
inline void IndexingRequest::clear_connection_id() {
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& IndexingRequest::connection_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.IndexingRequest.connection_id)
  return _internal_connection_id();
}
inline void IndexingRequest::set_connection_id(const std::string& value) {
  _internal_set_connection_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.IndexingRequest.connection_id)
}
inline std::string* IndexingRequest::mutable_connection_id() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.IndexingRequest.connection_id)
  return _internal_mutable_connection_id();
}
inline const std::string& IndexingRequest::_internal_connection_id() const {
  return connection_id_.GetNoArena();
}
inline void IndexingRequest::_internal_set_connection_id(const std::string& value) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void IndexingRequest::set_connection_id(std::string&& value) {
  
  connection_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.IndexingRequest.connection_id)
}
inline void IndexingRequest::set_connection_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.IndexingRequest.connection_id)
}
inline void IndexingRequest::set_connection_id(const char* value, size_t size) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.IndexingRequest.connection_id)
}
inline std::string* IndexingRequest::_internal_mutable_connection_id() {
  
  return connection_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* IndexingRequest::release_connection_id() {
  // @@protoc_insertion_point(field_release:yolo_tf.IndexingRequest.connection_id)
  
  return connection_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void IndexingRequest::set_allocated_connection_id(std::string* connection_id) {
  if (connection_id != nullptr) {
    
  } else {
    
  }
  connection_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), connection_id);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.IndexingRequest.connection_id)
}

// -------------------------------------------------------------------

// IndexingResponse

// bytes pickled_result = 1;
inline void IndexingResponse::clear_pickled_result() {
  pickled_result_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& IndexingResponse::pickled_result() const {
  // @@protoc_insertion_point(field_get:yolo_tf.IndexingResponse.pickled_result)
  return _internal_pickled_result();
}
inline void IndexingResponse::set_pickled_result(const std::string& value) {
  _internal_set_pickled_result(value);
  // @@protoc_insertion_point(field_set:yolo_tf.IndexingResponse.pickled_result)
}
inline std::string* IndexingResponse::mutable_pickled_result() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.IndexingResponse.pickled_result)
  return _internal_mutable_pickled_result();
}
inline const std::string& IndexingResponse::_internal_pickled_result() const {
  return pickled_result_.GetNoArena();
}
inline void IndexingResponse::_internal_set_pickled_result(const std::string& value) {
  
  pickled_result_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void IndexingResponse::set_pickled_result(std::string&& value) {
  
  pickled_result_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.IndexingResponse.pickled_result)
}
inline void IndexingResponse::set_pickled_result(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pickled_result_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.IndexingResponse.pickled_result)
}
inline void IndexingResponse::set_pickled_result(const void* value, size_t size) {
  
  pickled_result_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.IndexingResponse.pickled_result)
}
inline std::string* IndexingResponse::_internal_mutable_pickled_result() {
  
  return pickled_result_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* IndexingResponse::release_pickled_result() {
  // @@protoc_insertion_point(field_release:yolo_tf.IndexingResponse.pickled_result)
  
  return pickled_result_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void IndexingResponse::set_allocated_pickled_result(std::string* pickled_result) {
  if (pickled_result != nullptr) {
    
  } else {
    
  }
  pickled_result_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pickled_result);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.IndexingResponse.pickled_result)
}

// -------------------------------------------------------------------

// TensorToNumpyRequest

// uint64 obj_id = 1;
inline void TensorToNumpyRequest::clear_obj_id() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TensorToNumpyRequest::_internal_obj_id() const {
  return obj_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TensorToNumpyRequest::obj_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.TensorToNumpyRequest.obj_id)
  return _internal_obj_id();
}
inline void TensorToNumpyRequest::_internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  obj_id_ = value;
}
inline void TensorToNumpyRequest::set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_obj_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.TensorToNumpyRequest.obj_id)
}

// string connection_id = 2;
inline void TensorToNumpyRequest::clear_connection_id() {
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& TensorToNumpyRequest::connection_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.TensorToNumpyRequest.connection_id)
  return _internal_connection_id();
}
inline void TensorToNumpyRequest::set_connection_id(const std::string& value) {
  _internal_set_connection_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.TensorToNumpyRequest.connection_id)
}
inline std::string* TensorToNumpyRequest::mutable_connection_id() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.TensorToNumpyRequest.connection_id)
  return _internal_mutable_connection_id();
}
inline const std::string& TensorToNumpyRequest::_internal_connection_id() const {
  return connection_id_.GetNoArena();
}
inline void TensorToNumpyRequest::_internal_set_connection_id(const std::string& value) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void TensorToNumpyRequest::set_connection_id(std::string&& value) {
  
  connection_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.TensorToNumpyRequest.connection_id)
}
inline void TensorToNumpyRequest::set_connection_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.TensorToNumpyRequest.connection_id)
}
inline void TensorToNumpyRequest::set_connection_id(const char* value, size_t size) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.TensorToNumpyRequest.connection_id)
}
inline std::string* TensorToNumpyRequest::_internal_mutable_connection_id() {
  
  return connection_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* TensorToNumpyRequest::release_connection_id() {
  // @@protoc_insertion_point(field_release:yolo_tf.TensorToNumpyRequest.connection_id)
  
  return connection_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void TensorToNumpyRequest::set_allocated_connection_id(std::string* connection_id) {
  if (connection_id != nullptr) {
    
  } else {
    
  }
  connection_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), connection_id);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.TensorToNumpyRequest.connection_id)
}

// -------------------------------------------------------------------

// TensorToNumPyResponse

// bytes pickled_array = 1;
inline void TensorToNumPyResponse::clear_pickled_array() {
  pickled_array_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& TensorToNumPyResponse::pickled_array() const {
  // @@protoc_insertion_point(field_get:yolo_tf.TensorToNumPyResponse.pickled_array)
  return _internal_pickled_array();
}
inline void TensorToNumPyResponse::set_pickled_array(const std::string& value) {
  _internal_set_pickled_array(value);
  // @@protoc_insertion_point(field_set:yolo_tf.TensorToNumPyResponse.pickled_array)
}
inline std::string* TensorToNumPyResponse::mutable_pickled_array() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.TensorToNumPyResponse.pickled_array)
  return _internal_mutable_pickled_array();
}
inline const std::string& TensorToNumPyResponse::_internal_pickled_array() const {
  return pickled_array_.GetNoArena();
}
inline void TensorToNumPyResponse::_internal_set_pickled_array(const std::string& value) {
  
  pickled_array_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void TensorToNumPyResponse::set_pickled_array(std::string&& value) {
  
  pickled_array_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.TensorToNumPyResponse.pickled_array)
}
inline void TensorToNumPyResponse::set_pickled_array(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pickled_array_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.TensorToNumPyResponse.pickled_array)
}
inline void TensorToNumPyResponse::set_pickled_array(const void* value, size_t size) {
  
  pickled_array_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.TensorToNumPyResponse.pickled_array)
}
inline std::string* TensorToNumPyResponse::_internal_mutable_pickled_array() {
  
  return pickled_array_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* TensorToNumPyResponse::release_pickled_array() {
  // @@protoc_insertion_point(field_release:yolo_tf.TensorToNumPyResponse.pickled_array)
  
  return pickled_array_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void TensorToNumPyResponse::set_allocated_pickled_array(std::string* pickled_array) {
  if (pickled_array != nullptr) {
    
  } else {
    
  }
  pickled_array_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pickled_array);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.TensorToNumPyResponse.pickled_array)
}

// -------------------------------------------------------------------

// GetObjectRequest

// uint64 obj_id = 1;
inline void GetObjectRequest::clear_obj_id() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetObjectRequest::_internal_obj_id() const {
  return obj_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GetObjectRequest::obj_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.GetObjectRequest.obj_id)
  return _internal_obj_id();
}
inline void GetObjectRequest::_internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  obj_id_ = value;
}
inline void GetObjectRequest::set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_obj_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.GetObjectRequest.obj_id)
}

// string connection_id = 2;
inline void GetObjectRequest::clear_connection_id() {
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& GetObjectRequest::connection_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.GetObjectRequest.connection_id)
  return _internal_connection_id();
}
inline void GetObjectRequest::set_connection_id(const std::string& value) {
  _internal_set_connection_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.GetObjectRequest.connection_id)
}
inline std::string* GetObjectRequest::mutable_connection_id() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.GetObjectRequest.connection_id)
  return _internal_mutable_connection_id();
}
inline const std::string& GetObjectRequest::_internal_connection_id() const {
  return connection_id_.GetNoArena();
}
inline void GetObjectRequest::_internal_set_connection_id(const std::string& value) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void GetObjectRequest::set_connection_id(std::string&& value) {
  
  connection_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.GetObjectRequest.connection_id)
}
inline void GetObjectRequest::set_connection_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.GetObjectRequest.connection_id)
}
inline void GetObjectRequest::set_connection_id(const char* value, size_t size) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.GetObjectRequest.connection_id)
}
inline std::string* GetObjectRequest::_internal_mutable_connection_id() {
  
  return connection_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GetObjectRequest::release_connection_id() {
  // @@protoc_insertion_point(field_release:yolo_tf.GetObjectRequest.connection_id)
  
  return connection_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GetObjectRequest::set_allocated_connection_id(std::string* connection_id) {
  if (connection_id != nullptr) {
    
  } else {
    
  }
  connection_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), connection_id);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.GetObjectRequest.connection_id)
}

// -------------------------------------------------------------------

// GetObjectResponse

// bytes object = 1;
inline void GetObjectResponse::clear_object() {
  object_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& GetObjectResponse::object() const {
  // @@protoc_insertion_point(field_get:yolo_tf.GetObjectResponse.object)
  return _internal_object();
}
inline void GetObjectResponse::set_object(const std::string& value) {
  _internal_set_object(value);
  // @@protoc_insertion_point(field_set:yolo_tf.GetObjectResponse.object)
}
inline std::string* GetObjectResponse::mutable_object() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.GetObjectResponse.object)
  return _internal_mutable_object();
}
inline const std::string& GetObjectResponse::_internal_object() const {
  return object_.GetNoArena();
}
inline void GetObjectResponse::_internal_set_object(const std::string& value) {
  
  object_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void GetObjectResponse::set_object(std::string&& value) {
  
  object_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.GetObjectResponse.object)
}
inline void GetObjectResponse::set_object(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  object_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.GetObjectResponse.object)
}
inline void GetObjectResponse::set_object(const void* value, size_t size) {
  
  object_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.GetObjectResponse.object)
}
inline std::string* GetObjectResponse::_internal_mutable_object() {
  
  return object_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GetObjectResponse::release_object() {
  // @@protoc_insertion_point(field_release:yolo_tf.GetObjectResponse.object)
  
  return object_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GetObjectResponse::set_allocated_object(std::string* object) {
  if (object != nullptr) {
    
  } else {
    
  }
  object_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), object);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.GetObjectResponse.object)
}

// -------------------------------------------------------------------

// BatchNormRequest

// string name = 1;
inline void BatchNormRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& BatchNormRequest::name() const {
  // @@protoc_insertion_point(field_get:yolo_tf.BatchNormRequest.name)
  return _internal_name();
}
inline void BatchNormRequest::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:yolo_tf.BatchNormRequest.name)
}
inline std::string* BatchNormRequest::mutable_name() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.BatchNormRequest.name)
  return _internal_mutable_name();
}
inline const std::string& BatchNormRequest::_internal_name() const {
  return name_.GetNoArena();
}
inline void BatchNormRequest::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void BatchNormRequest::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.BatchNormRequest.name)
}
inline void BatchNormRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.BatchNormRequest.name)
}
inline void BatchNormRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.BatchNormRequest.name)
}
inline std::string* BatchNormRequest::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* BatchNormRequest::release_name() {
  // @@protoc_insertion_point(field_release:yolo_tf.BatchNormRequest.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void BatchNormRequest::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.BatchNormRequest.name)
}

// string connection_id = 2;
inline void BatchNormRequest::clear_connection_id() {
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& BatchNormRequest::connection_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.BatchNormRequest.connection_id)
  return _internal_connection_id();
}
inline void BatchNormRequest::set_connection_id(const std::string& value) {
  _internal_set_connection_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.BatchNormRequest.connection_id)
}
inline std::string* BatchNormRequest::mutable_connection_id() {
  // @@protoc_insertion_point(field_mutable:yolo_tf.BatchNormRequest.connection_id)
  return _internal_mutable_connection_id();
}
inline const std::string& BatchNormRequest::_internal_connection_id() const {
  return connection_id_.GetNoArena();
}
inline void BatchNormRequest::_internal_set_connection_id(const std::string& value) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void BatchNormRequest::set_connection_id(std::string&& value) {
  
  connection_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:yolo_tf.BatchNormRequest.connection_id)
}
inline void BatchNormRequest::set_connection_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:yolo_tf.BatchNormRequest.connection_id)
}
inline void BatchNormRequest::set_connection_id(const char* value, size_t size) {
  
  connection_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:yolo_tf.BatchNormRequest.connection_id)
}
inline std::string* BatchNormRequest::_internal_mutable_connection_id() {
  
  return connection_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* BatchNormRequest::release_connection_id() {
  // @@protoc_insertion_point(field_release:yolo_tf.BatchNormRequest.connection_id)
  
  return connection_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void BatchNormRequest::set_allocated_connection_id(std::string* connection_id) {
  if (connection_id != nullptr) {
    
  } else {
    
  }
  connection_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), connection_id);
  // @@protoc_insertion_point(field_set_allocated:yolo_tf.BatchNormRequest.connection_id)
}

// -------------------------------------------------------------------

// BatchNormResponse

// uint64 obj_id = 1;
inline void BatchNormResponse::clear_obj_id() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BatchNormResponse::_internal_obj_id() const {
  return obj_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 BatchNormResponse::obj_id() const {
  // @@protoc_insertion_point(field_get:yolo_tf.BatchNormResponse.obj_id)
  return _internal_obj_id();
}
inline void BatchNormResponse::_internal_set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  obj_id_ = value;
}
inline void BatchNormResponse::set_obj_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_obj_id(value);
  // @@protoc_insertion_point(field_set:yolo_tf.BatchNormResponse.obj_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace yolo_tf

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_yolo_2eproto
