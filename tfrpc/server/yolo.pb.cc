// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yolo.proto

#include "yolo.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_yolo_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CallRequest_ObjId_yolo_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_yolo_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PhysicalDevices_PhysicalDevice_yolo_2eproto;
namespace yolo_tf {
class ConnectRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConnectRequest> _instance;
} _ConnectRequest_default_instance_;
class ConnectResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConnectResponse> _instance;
} _ConnectResponse_default_instance_;
class DisconnectRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DisconnectRequest> _instance;
} _DisconnectRequest_default_instance_;
class DisconnectResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DisconnectResponse> _instance;
} _DisconnectResponse_default_instance_;
class HelloRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HelloRequest> _instance;
} _HelloRequest_default_instance_;
class HelloReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HelloReply> _instance;
} _HelloReply_default_instance_;
class CallRequest_ObjIdDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CallRequest_ObjId> _instance;
} _CallRequest_ObjId_default_instance_;
class CallRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CallRequest> _instance;
} _CallRequest_default_instance_;
class CallResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CallResponse> _instance;
} _CallResponse_default_instance_;
class SlicingRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SlicingRequest> _instance;
} _SlicingRequest_default_instance_;
class SlicingResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SlicingResponse> _instance;
} _SlicingResponse_default_instance_;
class ConstantRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConstantRequest> _instance;
} _ConstantRequest_default_instance_;
class ConstantResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConstantResponse> _instance;
} _ConstantResponse_default_instance_;
class DeviceTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeviceType> _instance;
} _DeviceType_default_instance_;
class PhysicalDevices_PhysicalDeviceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PhysicalDevices_PhysicalDevice> _instance;
} _PhysicalDevices_PhysicalDevice_default_instance_;
class PhysicalDevicesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PhysicalDevices> _instance;
} _PhysicalDevices_default_instance_;
class DecodeImageRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DecodeImageRequest> _instance;
} _DecodeImageRequest_default_instance_;
class DecodeImageResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DecodeImageResponse> _instance;
} _DecodeImageResponse_default_instance_;
class ExpandDemensionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExpandDemensionRequest> _instance;
} _ExpandDemensionRequest_default_instance_;
class ExpandDemensionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExpandDemensionResponse> _instance;
} _ExpandDemensionResponse_default_instance_;
class InputRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InputRequest> _instance;
} _InputRequest_default_instance_;
class InputResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InputResponse> _instance;
} _InputResponse_default_instance_;
class ModelRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModelRequest> _instance;
} _ModelRequest_default_instance_;
class ModelResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModelResponse> _instance;
} _ModelResponse_default_instance_;
class ZeroPadding2DRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ZeroPadding2DRequest> _instance;
} _ZeroPadding2DRequest_default_instance_;
class ZeroPadding2DResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ZeroPadding2DResponse> _instance;
} _ZeroPadding2DResponse_default_instance_;
class Conv2DRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Conv2DRequest> _instance;
} _Conv2DRequest_default_instance_;
class Conv2DResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Conv2DResponse> _instance;
} _Conv2DResponse_default_instance_;
class LeakyReluRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LeakyReluRequest> _instance;
} _LeakyReluRequest_default_instance_;
class LeakyReluResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LeakyReluResponse> _instance;
} _LeakyReluResponse_default_instance_;
class AddRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddRequest> _instance;
} _AddRequest_default_instance_;
class AddResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddResponse> _instance;
} _AddResponse_default_instance_;
class LambdaRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LambdaRequest> _instance;
} _LambdaRequest_default_instance_;
class LambdaResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LambdaResponse> _instance;
} _LambdaResponse_default_instance_;
class UpSampling2DRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpSampling2DRequest> _instance;
} _UpSampling2DRequest_default_instance_;
class UpSampling2DResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpSampling2DResponse> _instance;
} _UpSampling2DResponse_default_instance_;
class ConcatenateRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConcatenateRequest> _instance;
} _ConcatenateRequest_default_instance_;
class ContcatenateResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ContcatenateResponse> _instance;
} _ContcatenateResponse_default_instance_;
class l2RequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<l2Request> _instance;
} _l2Request_default_instance_;
class l2ResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<l2Response> _instance;
} _l2Response_default_instance_;
class ImageResizeRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImageResizeRequest> _instance;
} _ImageResizeRequest_default_instance_;
class ImageResizeResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ImageResizeResponse> _instance;
} _ImageResizeResponse_default_instance_;
class TensorShapeRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TensorShapeRequest> _instance;
} _TensorShapeRequest_default_instance_;
class TensorShapeResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TensorShapeResponse> _instance;
} _TensorShapeResponse_default_instance_;
class LoadWeightsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoadWeightsRequest> _instance;
} _LoadWeightsRequest_default_instance_;
class LoadWeightsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LoadWeightsResponse> _instance;
} _LoadWeightsResponse_default_instance_;
class ExpectPartialRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExpectPartialRequest> _instance;
} _ExpectPartialRequest_default_instance_;
class ExpectPartialResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExpectPartialResponse> _instance;
} _ExpectPartialResponse_default_instance_;
class DivideRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DivideRequest> _instance;
} _DivideRequest_default_instance_;
class DivideResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DivideResponse> _instance;
} _DivideResponse_default_instance_;
class IndexingRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IndexingRequest> _instance;
} _IndexingRequest_default_instance_;
class IndexingResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IndexingResponse> _instance;
} _IndexingResponse_default_instance_;
class TensorToNumpyRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TensorToNumpyRequest> _instance;
} _TensorToNumpyRequest_default_instance_;
class TensorToNumPyResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TensorToNumPyResponse> _instance;
} _TensorToNumPyResponse_default_instance_;
class GetObjectRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetObjectRequest> _instance;
} _GetObjectRequest_default_instance_;
class GetObjectResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetObjectResponse> _instance;
} _GetObjectResponse_default_instance_;
class BatchNormRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BatchNormRequest> _instance;
} _BatchNormRequest_default_instance_;
class BatchNormResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BatchNormResponse> _instance;
} _BatchNormResponse_default_instance_;
}  // namespace yolo_tf
static void InitDefaultsscc_info_AddRequest_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_AddRequest_default_instance_;
    new (ptr) ::yolo_tf::AddRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::AddRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddRequest_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddRequest_yolo_2eproto}, {}};

static void InitDefaultsscc_info_AddResponse_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_AddResponse_default_instance_;
    new (ptr) ::yolo_tf::AddResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::AddResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddResponse_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddResponse_yolo_2eproto}, {}};

static void InitDefaultsscc_info_BatchNormRequest_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_BatchNormRequest_default_instance_;
    new (ptr) ::yolo_tf::BatchNormRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::BatchNormRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BatchNormRequest_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BatchNormRequest_yolo_2eproto}, {}};

static void InitDefaultsscc_info_BatchNormResponse_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_BatchNormResponse_default_instance_;
    new (ptr) ::yolo_tf::BatchNormResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::BatchNormResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BatchNormResponse_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BatchNormResponse_yolo_2eproto}, {}};

static void InitDefaultsscc_info_CallRequest_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_CallRequest_default_instance_;
    new (ptr) ::yolo_tf::CallRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::CallRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CallRequest_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CallRequest_yolo_2eproto}, {
      &scc_info_CallRequest_ObjId_yolo_2eproto.base,}};

static void InitDefaultsscc_info_CallRequest_ObjId_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_CallRequest_ObjId_default_instance_;
    new (ptr) ::yolo_tf::CallRequest_ObjId();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::CallRequest_ObjId::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CallRequest_ObjId_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CallRequest_ObjId_yolo_2eproto}, {}};

static void InitDefaultsscc_info_CallResponse_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_CallResponse_default_instance_;
    new (ptr) ::yolo_tf::CallResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::CallResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CallResponse_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CallResponse_yolo_2eproto}, {}};

static void InitDefaultsscc_info_ConcatenateRequest_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_ConcatenateRequest_default_instance_;
    new (ptr) ::yolo_tf::ConcatenateRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::ConcatenateRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ConcatenateRequest_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ConcatenateRequest_yolo_2eproto}, {}};

static void InitDefaultsscc_info_ConnectRequest_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_ConnectRequest_default_instance_;
    new (ptr) ::yolo_tf::ConnectRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::ConnectRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ConnectRequest_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ConnectRequest_yolo_2eproto}, {}};

static void InitDefaultsscc_info_ConnectResponse_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_ConnectResponse_default_instance_;
    new (ptr) ::yolo_tf::ConnectResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::ConnectResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ConnectResponse_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ConnectResponse_yolo_2eproto}, {}};

static void InitDefaultsscc_info_ConstantRequest_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_ConstantRequest_default_instance_;
    new (ptr) ::yolo_tf::ConstantRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::ConstantRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ConstantRequest_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ConstantRequest_yolo_2eproto}, {}};

static void InitDefaultsscc_info_ConstantResponse_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_ConstantResponse_default_instance_;
    new (ptr) ::yolo_tf::ConstantResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::ConstantResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ConstantResponse_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ConstantResponse_yolo_2eproto}, {}};

static void InitDefaultsscc_info_ContcatenateResponse_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_ContcatenateResponse_default_instance_;
    new (ptr) ::yolo_tf::ContcatenateResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::ContcatenateResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ContcatenateResponse_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ContcatenateResponse_yolo_2eproto}, {}};

static void InitDefaultsscc_info_Conv2DRequest_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_Conv2DRequest_default_instance_;
    new (ptr) ::yolo_tf::Conv2DRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::Conv2DRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Conv2DRequest_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Conv2DRequest_yolo_2eproto}, {}};

static void InitDefaultsscc_info_Conv2DResponse_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_Conv2DResponse_default_instance_;
    new (ptr) ::yolo_tf::Conv2DResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::Conv2DResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Conv2DResponse_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Conv2DResponse_yolo_2eproto}, {}};

static void InitDefaultsscc_info_DecodeImageRequest_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_DecodeImageRequest_default_instance_;
    new (ptr) ::yolo_tf::DecodeImageRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::DecodeImageRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DecodeImageRequest_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DecodeImageRequest_yolo_2eproto}, {}};

static void InitDefaultsscc_info_DecodeImageResponse_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_DecodeImageResponse_default_instance_;
    new (ptr) ::yolo_tf::DecodeImageResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::DecodeImageResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DecodeImageResponse_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DecodeImageResponse_yolo_2eproto}, {}};

static void InitDefaultsscc_info_DeviceType_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_DeviceType_default_instance_;
    new (ptr) ::yolo_tf::DeviceType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::DeviceType::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeviceType_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeviceType_yolo_2eproto}, {}};

static void InitDefaultsscc_info_DisconnectRequest_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_DisconnectRequest_default_instance_;
    new (ptr) ::yolo_tf::DisconnectRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::DisconnectRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DisconnectRequest_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DisconnectRequest_yolo_2eproto}, {}};

static void InitDefaultsscc_info_DisconnectResponse_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_DisconnectResponse_default_instance_;
    new (ptr) ::yolo_tf::DisconnectResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::DisconnectResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DisconnectResponse_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DisconnectResponse_yolo_2eproto}, {}};

static void InitDefaultsscc_info_DivideRequest_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_DivideRequest_default_instance_;
    new (ptr) ::yolo_tf::DivideRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::DivideRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DivideRequest_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DivideRequest_yolo_2eproto}, {}};

static void InitDefaultsscc_info_DivideResponse_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_DivideResponse_default_instance_;
    new (ptr) ::yolo_tf::DivideResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::DivideResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DivideResponse_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DivideResponse_yolo_2eproto}, {}};

static void InitDefaultsscc_info_ExpandDemensionRequest_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_ExpandDemensionRequest_default_instance_;
    new (ptr) ::yolo_tf::ExpandDemensionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::ExpandDemensionRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExpandDemensionRequest_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ExpandDemensionRequest_yolo_2eproto}, {}};

static void InitDefaultsscc_info_ExpandDemensionResponse_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_ExpandDemensionResponse_default_instance_;
    new (ptr) ::yolo_tf::ExpandDemensionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::ExpandDemensionResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExpandDemensionResponse_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ExpandDemensionResponse_yolo_2eproto}, {}};

static void InitDefaultsscc_info_ExpectPartialRequest_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_ExpectPartialRequest_default_instance_;
    new (ptr) ::yolo_tf::ExpectPartialRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::ExpectPartialRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExpectPartialRequest_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ExpectPartialRequest_yolo_2eproto}, {}};

static void InitDefaultsscc_info_ExpectPartialResponse_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_ExpectPartialResponse_default_instance_;
    new (ptr) ::yolo_tf::ExpectPartialResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::ExpectPartialResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExpectPartialResponse_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ExpectPartialResponse_yolo_2eproto}, {}};

static void InitDefaultsscc_info_GetObjectRequest_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_GetObjectRequest_default_instance_;
    new (ptr) ::yolo_tf::GetObjectRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::GetObjectRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetObjectRequest_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetObjectRequest_yolo_2eproto}, {}};

static void InitDefaultsscc_info_GetObjectResponse_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_GetObjectResponse_default_instance_;
    new (ptr) ::yolo_tf::GetObjectResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::GetObjectResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetObjectResponse_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetObjectResponse_yolo_2eproto}, {}};

static void InitDefaultsscc_info_HelloReply_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_HelloReply_default_instance_;
    new (ptr) ::yolo_tf::HelloReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::HelloReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HelloReply_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HelloReply_yolo_2eproto}, {}};

static void InitDefaultsscc_info_HelloRequest_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_HelloRequest_default_instance_;
    new (ptr) ::yolo_tf::HelloRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::HelloRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HelloRequest_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HelloRequest_yolo_2eproto}, {}};

static void InitDefaultsscc_info_ImageResizeRequest_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_ImageResizeRequest_default_instance_;
    new (ptr) ::yolo_tf::ImageResizeRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::ImageResizeRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImageResizeRequest_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImageResizeRequest_yolo_2eproto}, {}};

static void InitDefaultsscc_info_ImageResizeResponse_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_ImageResizeResponse_default_instance_;
    new (ptr) ::yolo_tf::ImageResizeResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::ImageResizeResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ImageResizeResponse_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ImageResizeResponse_yolo_2eproto}, {}};

static void InitDefaultsscc_info_IndexingRequest_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_IndexingRequest_default_instance_;
    new (ptr) ::yolo_tf::IndexingRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::IndexingRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IndexingRequest_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IndexingRequest_yolo_2eproto}, {}};

static void InitDefaultsscc_info_IndexingResponse_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_IndexingResponse_default_instance_;
    new (ptr) ::yolo_tf::IndexingResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::IndexingResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IndexingResponse_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IndexingResponse_yolo_2eproto}, {}};

static void InitDefaultsscc_info_InputRequest_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_InputRequest_default_instance_;
    new (ptr) ::yolo_tf::InputRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::InputRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InputRequest_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InputRequest_yolo_2eproto}, {}};

static void InitDefaultsscc_info_InputResponse_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_InputResponse_default_instance_;
    new (ptr) ::yolo_tf::InputResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::InputResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InputResponse_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InputResponse_yolo_2eproto}, {}};

static void InitDefaultsscc_info_LambdaRequest_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_LambdaRequest_default_instance_;
    new (ptr) ::yolo_tf::LambdaRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::LambdaRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LambdaRequest_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LambdaRequest_yolo_2eproto}, {}};

static void InitDefaultsscc_info_LambdaResponse_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_LambdaResponse_default_instance_;
    new (ptr) ::yolo_tf::LambdaResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::LambdaResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LambdaResponse_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LambdaResponse_yolo_2eproto}, {}};

static void InitDefaultsscc_info_LeakyReluRequest_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_LeakyReluRequest_default_instance_;
    new (ptr) ::yolo_tf::LeakyReluRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::LeakyReluRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LeakyReluRequest_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LeakyReluRequest_yolo_2eproto}, {}};

static void InitDefaultsscc_info_LeakyReluResponse_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_LeakyReluResponse_default_instance_;
    new (ptr) ::yolo_tf::LeakyReluResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::LeakyReluResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LeakyReluResponse_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LeakyReluResponse_yolo_2eproto}, {}};

static void InitDefaultsscc_info_LoadWeightsRequest_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_LoadWeightsRequest_default_instance_;
    new (ptr) ::yolo_tf::LoadWeightsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::LoadWeightsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoadWeightsRequest_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LoadWeightsRequest_yolo_2eproto}, {}};

static void InitDefaultsscc_info_LoadWeightsResponse_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_LoadWeightsResponse_default_instance_;
    new (ptr) ::yolo_tf::LoadWeightsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::LoadWeightsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LoadWeightsResponse_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LoadWeightsResponse_yolo_2eproto}, {}};

static void InitDefaultsscc_info_ModelRequest_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_ModelRequest_default_instance_;
    new (ptr) ::yolo_tf::ModelRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::ModelRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ModelRequest_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ModelRequest_yolo_2eproto}, {}};

static void InitDefaultsscc_info_ModelResponse_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_ModelResponse_default_instance_;
    new (ptr) ::yolo_tf::ModelResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::ModelResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ModelResponse_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ModelResponse_yolo_2eproto}, {}};

static void InitDefaultsscc_info_PhysicalDevices_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_PhysicalDevices_default_instance_;
    new (ptr) ::yolo_tf::PhysicalDevices();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::PhysicalDevices::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PhysicalDevices_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PhysicalDevices_yolo_2eproto}, {
      &scc_info_PhysicalDevices_PhysicalDevice_yolo_2eproto.base,}};

static void InitDefaultsscc_info_PhysicalDevices_PhysicalDevice_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_PhysicalDevices_PhysicalDevice_default_instance_;
    new (ptr) ::yolo_tf::PhysicalDevices_PhysicalDevice();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::PhysicalDevices_PhysicalDevice::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PhysicalDevices_PhysicalDevice_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PhysicalDevices_PhysicalDevice_yolo_2eproto}, {}};

static void InitDefaultsscc_info_SlicingRequest_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_SlicingRequest_default_instance_;
    new (ptr) ::yolo_tf::SlicingRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::SlicingRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SlicingRequest_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SlicingRequest_yolo_2eproto}, {}};

static void InitDefaultsscc_info_SlicingResponse_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_SlicingResponse_default_instance_;
    new (ptr) ::yolo_tf::SlicingResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::SlicingResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SlicingResponse_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SlicingResponse_yolo_2eproto}, {}};

static void InitDefaultsscc_info_TensorShapeRequest_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_TensorShapeRequest_default_instance_;
    new (ptr) ::yolo_tf::TensorShapeRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::TensorShapeRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TensorShapeRequest_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TensorShapeRequest_yolo_2eproto}, {}};

static void InitDefaultsscc_info_TensorShapeResponse_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_TensorShapeResponse_default_instance_;
    new (ptr) ::yolo_tf::TensorShapeResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::TensorShapeResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TensorShapeResponse_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TensorShapeResponse_yolo_2eproto}, {}};

static void InitDefaultsscc_info_TensorToNumPyResponse_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_TensorToNumPyResponse_default_instance_;
    new (ptr) ::yolo_tf::TensorToNumPyResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::TensorToNumPyResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TensorToNumPyResponse_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TensorToNumPyResponse_yolo_2eproto}, {}};

static void InitDefaultsscc_info_TensorToNumpyRequest_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_TensorToNumpyRequest_default_instance_;
    new (ptr) ::yolo_tf::TensorToNumpyRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::TensorToNumpyRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TensorToNumpyRequest_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TensorToNumpyRequest_yolo_2eproto}, {}};

static void InitDefaultsscc_info_UpSampling2DRequest_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_UpSampling2DRequest_default_instance_;
    new (ptr) ::yolo_tf::UpSampling2DRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::UpSampling2DRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpSampling2DRequest_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpSampling2DRequest_yolo_2eproto}, {}};

static void InitDefaultsscc_info_UpSampling2DResponse_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_UpSampling2DResponse_default_instance_;
    new (ptr) ::yolo_tf::UpSampling2DResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::UpSampling2DResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UpSampling2DResponse_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UpSampling2DResponse_yolo_2eproto}, {}};

static void InitDefaultsscc_info_ZeroPadding2DRequest_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_ZeroPadding2DRequest_default_instance_;
    new (ptr) ::yolo_tf::ZeroPadding2DRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::ZeroPadding2DRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ZeroPadding2DRequest_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ZeroPadding2DRequest_yolo_2eproto}, {}};

static void InitDefaultsscc_info_ZeroPadding2DResponse_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_ZeroPadding2DResponse_default_instance_;
    new (ptr) ::yolo_tf::ZeroPadding2DResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::ZeroPadding2DResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ZeroPadding2DResponse_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ZeroPadding2DResponse_yolo_2eproto}, {}};

static void InitDefaultsscc_info_l2Request_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_l2Request_default_instance_;
    new (ptr) ::yolo_tf::l2Request();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::l2Request::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_l2Request_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_l2Request_yolo_2eproto}, {}};

static void InitDefaultsscc_info_l2Response_yolo_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::yolo_tf::_l2Response_default_instance_;
    new (ptr) ::yolo_tf::l2Response();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::yolo_tf::l2Response::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_l2Response_yolo_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_l2Response_yolo_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_yolo_2eproto[58];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_yolo_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_yolo_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_yolo_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ConnectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ConnectRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ConnectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ConnectResponse, accept_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::DisconnectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::DisconnectRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::DisconnectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::HelloRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::HelloRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::HelloReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::HelloReply, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::CallRequest_ObjId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::CallRequest_ObjId, obj_id_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::CallRequest_ObjId, release_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::CallRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::CallRequest, callable_obj_id_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::CallRequest, args_pickled_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::CallRequest, pickled_args_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::CallRequest, obj_ids_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::CallRequest, num_of_returns_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::CallRequest, connection_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::CallResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::CallResponse, pickled_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::CallResponse, pickled_result_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::CallResponse, obj_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::SlicingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::SlicingRequest, iterable_id_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::SlicingRequest, start_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::SlicingRequest, end_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::SlicingRequest, connection_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::SlicingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::SlicingResponse, obj_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ConstantRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ConstantRequest, value_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ConstantRequest, connection_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ConstantResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ConstantResponse, tensor_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::DeviceType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::DeviceType, device_type_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::DeviceType, connection_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::PhysicalDevices_PhysicalDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::PhysicalDevices_PhysicalDevice, name_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::PhysicalDevices_PhysicalDevice, device_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::PhysicalDevices, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::PhysicalDevices, devices_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::DecodeImageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::DecodeImageRequest, byte_image_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::DecodeImageRequest, size_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::DecodeImageRequest, channels_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::DecodeImageRequest, connection_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::DecodeImageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::DecodeImageResponse, obj_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ExpandDemensionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ExpandDemensionRequest, obj_id_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ExpandDemensionRequest, axis_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ExpandDemensionRequest, connection_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ExpandDemensionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ExpandDemensionResponse, obj_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::InputRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::InputRequest, shape_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::InputRequest, name_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::InputRequest, connection_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::InputResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::InputResponse, obj_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ModelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ModelRequest, input_ids_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ModelRequest, output_ids_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ModelRequest, name_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ModelRequest, connection_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ModelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ModelResponse, obj_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ZeroPadding2DRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ZeroPadding2DRequest, padding_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ZeroPadding2DRequest, data_format_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ZeroPadding2DRequest, name_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ZeroPadding2DRequest, connection_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ZeroPadding2DResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ZeroPadding2DResponse, obj_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::Conv2DRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::Conv2DRequest, filters_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::Conv2DRequest, pickled_kernel_size_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::Conv2DRequest, pickled_strides_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::Conv2DRequest, padding_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::Conv2DRequest, use_bias_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::Conv2DRequest, pickled_kernel_regularizer_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::Conv2DRequest, name_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::Conv2DRequest, connection_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::Conv2DResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::Conv2DResponse, obj_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::LeakyReluRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::LeakyReluRequest, alpha_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::LeakyReluRequest, name_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::LeakyReluRequest, connection_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::LeakyReluResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::LeakyReluResponse, obj_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::AddRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::AddRequest, name_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::AddRequest, connection_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::AddResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::AddResponse, obj_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::LambdaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::LambdaRequest, expr_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::LambdaRequest, name_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::LambdaRequest, connection_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::LambdaResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::LambdaResponse, obj_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::UpSampling2DRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::UpSampling2DRequest, size_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::UpSampling2DRequest, connection_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::UpSampling2DResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::UpSampling2DResponse, obj_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ConcatenateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ConcatenateRequest, connection_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ContcatenateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ContcatenateResponse, obj_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::l2Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::l2Request, l_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::l2Request, connection_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::l2Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::l2Response, pickled_l2_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ImageResizeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ImageResizeRequest, obj_id_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ImageResizeRequest, size_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ImageResizeRequest, connection_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ImageResizeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ImageResizeResponse, obj_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::TensorShapeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::TensorShapeRequest, obj_id_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::TensorShapeRequest, start_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::TensorShapeRequest, end_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::TensorShapeRequest, connection_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::TensorShapeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::TensorShapeResponse, obj_id_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::TensorShapeResponse, shape_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::LoadWeightsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::LoadWeightsRequest, model_obj_id_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::LoadWeightsRequest, weights_path_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::LoadWeightsRequest, connection_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::LoadWeightsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::LoadWeightsResponse, obj_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ExpectPartialRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ExpectPartialRequest, obj_id_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ExpectPartialRequest, connection_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::ExpectPartialResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::DivideRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::DivideRequest, obj_id_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::DivideRequest, divisor_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::DivideRequest, connection_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::DivideResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::DivideResponse, obj_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::IndexingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::IndexingRequest, obj_id_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::IndexingRequest, indices_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::IndexingRequest, connection_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::IndexingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::IndexingResponse, pickled_result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::TensorToNumpyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::TensorToNumpyRequest, obj_id_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::TensorToNumpyRequest, connection_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::TensorToNumPyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::TensorToNumPyResponse, pickled_array_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::GetObjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::GetObjectRequest, obj_id_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::GetObjectRequest, connection_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::GetObjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::GetObjectResponse, object_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::BatchNormRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::BatchNormRequest, name_),
  PROTOBUF_FIELD_OFFSET(::yolo_tf::BatchNormRequest, connection_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::BatchNormResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::yolo_tf::BatchNormResponse, obj_id_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::yolo_tf::ConnectRequest)},
  { 6, -1, sizeof(::yolo_tf::ConnectResponse)},
  { 12, -1, sizeof(::yolo_tf::DisconnectRequest)},
  { 18, -1, sizeof(::yolo_tf::DisconnectResponse)},
  { 23, -1, sizeof(::yolo_tf::HelloRequest)},
  { 29, -1, sizeof(::yolo_tf::HelloReply)},
  { 35, -1, sizeof(::yolo_tf::CallRequest_ObjId)},
  { 42, -1, sizeof(::yolo_tf::CallRequest)},
  { 53, -1, sizeof(::yolo_tf::CallResponse)},
  { 61, -1, sizeof(::yolo_tf::SlicingRequest)},
  { 70, -1, sizeof(::yolo_tf::SlicingResponse)},
  { 76, -1, sizeof(::yolo_tf::ConstantRequest)},
  { 83, -1, sizeof(::yolo_tf::ConstantResponse)},
  { 89, -1, sizeof(::yolo_tf::DeviceType)},
  { 96, -1, sizeof(::yolo_tf::PhysicalDevices_PhysicalDevice)},
  { 103, -1, sizeof(::yolo_tf::PhysicalDevices)},
  { 109, -1, sizeof(::yolo_tf::DecodeImageRequest)},
  { 118, -1, sizeof(::yolo_tf::DecodeImageResponse)},
  { 124, -1, sizeof(::yolo_tf::ExpandDemensionRequest)},
  { 132, -1, sizeof(::yolo_tf::ExpandDemensionResponse)},
  { 138, -1, sizeof(::yolo_tf::InputRequest)},
  { 146, -1, sizeof(::yolo_tf::InputResponse)},
  { 152, -1, sizeof(::yolo_tf::ModelRequest)},
  { 161, -1, sizeof(::yolo_tf::ModelResponse)},
  { 167, -1, sizeof(::yolo_tf::ZeroPadding2DRequest)},
  { 176, -1, sizeof(::yolo_tf::ZeroPadding2DResponse)},
  { 182, -1, sizeof(::yolo_tf::Conv2DRequest)},
  { 195, -1, sizeof(::yolo_tf::Conv2DResponse)},
  { 201, -1, sizeof(::yolo_tf::LeakyReluRequest)},
  { 209, -1, sizeof(::yolo_tf::LeakyReluResponse)},
  { 215, -1, sizeof(::yolo_tf::AddRequest)},
  { 222, -1, sizeof(::yolo_tf::AddResponse)},
  { 228, -1, sizeof(::yolo_tf::LambdaRequest)},
  { 236, -1, sizeof(::yolo_tf::LambdaResponse)},
  { 242, -1, sizeof(::yolo_tf::UpSampling2DRequest)},
  { 249, -1, sizeof(::yolo_tf::UpSampling2DResponse)},
  { 255, -1, sizeof(::yolo_tf::ConcatenateRequest)},
  { 261, -1, sizeof(::yolo_tf::ContcatenateResponse)},
  { 267, -1, sizeof(::yolo_tf::l2Request)},
  { 274, -1, sizeof(::yolo_tf::l2Response)},
  { 280, -1, sizeof(::yolo_tf::ImageResizeRequest)},
  { 288, -1, sizeof(::yolo_tf::ImageResizeResponse)},
  { 294, -1, sizeof(::yolo_tf::TensorShapeRequest)},
  { 303, -1, sizeof(::yolo_tf::TensorShapeResponse)},
  { 310, -1, sizeof(::yolo_tf::LoadWeightsRequest)},
  { 318, -1, sizeof(::yolo_tf::LoadWeightsResponse)},
  { 324, -1, sizeof(::yolo_tf::ExpectPartialRequest)},
  { 331, -1, sizeof(::yolo_tf::ExpectPartialResponse)},
  { 336, -1, sizeof(::yolo_tf::DivideRequest)},
  { 344, -1, sizeof(::yolo_tf::DivideResponse)},
  { 350, -1, sizeof(::yolo_tf::IndexingRequest)},
  { 358, -1, sizeof(::yolo_tf::IndexingResponse)},
  { 364, -1, sizeof(::yolo_tf::TensorToNumpyRequest)},
  { 371, -1, sizeof(::yolo_tf::TensorToNumPyResponse)},
  { 377, -1, sizeof(::yolo_tf::GetObjectRequest)},
  { 384, -1, sizeof(::yolo_tf::GetObjectResponse)},
  { 390, -1, sizeof(::yolo_tf::BatchNormRequest)},
  { 397, -1, sizeof(::yolo_tf::BatchNormResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_ConnectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_ConnectResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_DisconnectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_DisconnectResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_HelloRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_HelloReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_CallRequest_ObjId_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_CallRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_CallResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_SlicingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_SlicingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_ConstantRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_ConstantResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_DeviceType_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_PhysicalDevices_PhysicalDevice_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_PhysicalDevices_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_DecodeImageRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_DecodeImageResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_ExpandDemensionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_ExpandDemensionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_InputRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_InputResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_ModelRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_ModelResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_ZeroPadding2DRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_ZeroPadding2DResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_Conv2DRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_Conv2DResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_LeakyReluRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_LeakyReluResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_AddRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_AddResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_LambdaRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_LambdaResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_UpSampling2DRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_UpSampling2DResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_ConcatenateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_ContcatenateResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_l2Request_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_l2Response_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_ImageResizeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_ImageResizeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_TensorShapeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_TensorShapeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_LoadWeightsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_LoadWeightsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_ExpectPartialRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_ExpectPartialResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_DivideRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_DivideResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_IndexingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_IndexingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_TensorToNumpyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_TensorToNumPyResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_GetObjectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_GetObjectResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_BatchNormRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::yolo_tf::_BatchNormResponse_default_instance_),
};

const char descriptor_table_protodef_yolo_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nyolo.proto\022\007yolo_tf\"\034\n\016ConnectRequest\022"
  "\n\n\002id\030\001 \001(\t\"!\n\017ConnectResponse\022\016\n\006accept"
  "\030\001 \001(\010\"\037\n\021DisconnectRequest\022\n\n\002id\030\001 \001(\t\""
  "\024\n\022DisconnectResponse\"\034\n\014HelloRequest\022\014\n"
  "\004name\030\001 \001(\t\"\035\n\nHelloReply\022\017\n\007message\030\001 \001"
  "(\t\"\330\001\n\013CallRequest\022\027\n\017callable_obj_id\030\001 "
  "\001(\004\022\024\n\014args_pickled\030\002 \001(\010\022\024\n\014pickled_arg"
  "s\030\003 \003(\014\022+\n\007obj_ids\030\004 \003(\0132\032.yolo_tf.CallR"
  "equest.ObjId\022\026\n\016num_of_returns\030\005 \001(\005\022\025\n\r"
  "connection_id\030\006 \001(\t\032(\n\005ObjId\022\016\n\006obj_id\030\001"
  " \001(\004\022\017\n\007release\030\002 \001(\010\"H\n\014CallResponse\022\017\n"
  "\007pickled\030\001 \001(\010\022\026\n\016pickled_result\030\002 \003(\014\022\017"
  "\n\007obj_ids\030\003 \003(\004\"X\n\016SlicingRequest\022\023\n\013ite"
  "rable_id\030\001 \001(\004\022\r\n\005start\030\002 \001(\r\022\013\n\003end\030\003 \001"
  "(\r\022\025\n\rconnection_id\030\004 \001(\t\"!\n\017SlicingResp"
  "onse\022\016\n\006obj_id\030\001 \001(\004\"7\n\017ConstantRequest\022"
  "\r\n\005value\030\001 \001(\014\022\025\n\rconnection_id\030\002 \001(\t\"\"\n"
  "\020ConstantResponse\022\016\n\006tensor\030\001 \001(\014\"8\n\nDev"
  "iceType\022\023\n\013device_type\030\001 \001(\t\022\025\n\rconnecti"
  "on_id\030\002 \001(\t\"\200\001\n\017PhysicalDevices\0228\n\007devic"
  "es\030\001 \003(\0132\'.yolo_tf.PhysicalDevices.Physi"
  "calDevice\0323\n\016PhysicalDevice\022\014\n\004name\030\001 \001("
  "\t\022\023\n\013device_type\030\002 \001(\t\"_\n\022DecodeImageReq"
  "uest\022\022\n\nbyte_image\030\001 \001(\014\022\014\n\004size\030\002 \001(\005\022\020"
  "\n\010channels\030\003 \001(\005\022\025\n\rconnection_id\030\004 \001(\t\""
  "%\n\023DecodeImageResponse\022\016\n\006obj_id\030\001 \001(\004\"M"
  "\n\026ExpandDemensionRequest\022\016\n\006obj_id\030\001 \001(\004"
  "\022\014\n\004axis\030\002 \001(\005\022\025\n\rconnection_id\030\003 \001(\t\")\n"
  "\027ExpandDemensionResponse\022\016\n\006obj_id\030\001 \001(\004"
  "\"B\n\014InputRequest\022\r\n\005shape\030\001 \003(\005\022\014\n\004name\030"
  "\002 \001(\t\022\025\n\rconnection_id\030\003 \001(\t\"\037\n\rInputRes"
  "ponse\022\016\n\006obj_id\030\001 \001(\004\"Z\n\014ModelRequest\022\021\n"
  "\tinput_ids\030\001 \003(\004\022\022\n\noutput_ids\030\002 \003(\004\022\014\n\004"
  "name\030\003 \001(\t\022\025\n\rconnection_id\030\004 \001(\t\"\037\n\rMod"
  "elResponse\022\016\n\006obj_id\030\001 \001(\004\"a\n\024ZeroPaddin"
  "g2DRequest\022\017\n\007padding\030\001 \001(\014\022\023\n\013data_form"
  "at\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\022\025\n\rconnection_id\030"
  "\004 \001(\t\"\'\n\025ZeroPadding2DResponse\022\016\n\006obj_id"
  "\030\001 \001(\004\"\302\001\n\rConv2DRequest\022\017\n\007filters\030\001 \001("
  "\005\022\033\n\023pickled_kernel_size\030\002 \001(\014\022\027\n\017pickle"
  "d_strides\030\003 \001(\014\022\017\n\007padding\030\004 \001(\t\022\020\n\010use_"
  "bias\030\005 \001(\010\022\"\n\032pickled_kernel_regularizer"
  "\030\006 \001(\014\022\014\n\004name\030\007 \001(\t\022\025\n\rconnection_id\030\010 "
  "\001(\t\" \n\016Conv2DResponse\022\016\n\006obj_id\030\001 \001(\004\"F\n"
  "\020LeakyReluRequest\022\r\n\005alpha\030\001 \001(\002\022\014\n\004name"
  "\030\002 \001(\t\022\025\n\rconnection_id\030\003 \001(\t\"#\n\021LeakyRe"
  "luResponse\022\016\n\006obj_id\030\001 \001(\004\"1\n\nAddRequest"
  "\022\014\n\004name\030\001 \001(\t\022\025\n\rconnection_id\030\002 \001(\t\"\035\n"
  "\013AddResponse\022\016\n\006obj_id\030\001 \001(\004\"B\n\rLambdaRe"
  "quest\022\014\n\004expr\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\025\n\rcon"
  "nection_id\030\003 \001(\t\" \n\016LambdaResponse\022\016\n\006ob"
  "j_id\030\001 \001(\004\":\n\023UpSampling2DRequest\022\014\n\004siz"
  "e\030\001 \001(\r\022\025\n\rconnection_id\030\002 \001(\t\"&\n\024UpSamp"
  "ling2DResponse\022\016\n\006obj_id\030\001 \001(\004\"+\n\022Concat"
  "enateRequest\022\025\n\rconnection_id\030\001 \001(\t\"&\n\024C"
  "ontcatenateResponse\022\016\n\006obj_id\030\001 \001(\004\"-\n\tl"
  "2Request\022\t\n\001l\030\001 \001(\002\022\025\n\rconnection_id\030\002 \001"
  "(\t\" \n\nl2Response\022\022\n\npickled_l2\030\001 \001(\014\"I\n\022"
  "ImageResizeRequest\022\016\n\006obj_id\030\001 \001(\004\022\014\n\004si"
  "ze\030\002 \003(\r\022\025\n\rconnection_id\030\003 \001(\t\"%\n\023Image"
  "ResizeResponse\022\016\n\006obj_id\030\001 \001(\004\"W\n\022Tensor"
  "ShapeRequest\022\016\n\006obj_id\030\001 \001(\004\022\r\n\005start\030\002 "
  "\001(\r\022\013\n\003end\030\003 \001(\r\022\025\n\rconnection_id\030\004 \001(\t\""
  "4\n\023TensorShapeResponse\022\016\n\006obj_id\030\001 \001(\004\022\r"
  "\n\005shape\030\002 \003(\005\"W\n\022LoadWeightsRequest\022\024\n\014m"
  "odel_obj_id\030\001 \001(\004\022\024\n\014weights_path\030\002 \001(\t\022"
  "\025\n\rconnection_id\030\003 \001(\t\"%\n\023LoadWeightsRes"
  "ponse\022\016\n\006obj_id\030\001 \001(\004\"=\n\024ExpectPartialRe"
  "quest\022\016\n\006obj_id\030\001 \001(\004\022\025\n\rconnection_id\030\002"
  " \001(\t\"\027\n\025ExpectPartialResponse\"G\n\rDivideR"
  "equest\022\016\n\006obj_id\030\001 \001(\004\022\017\n\007divisor\030\002 \001(\005\022"
  "\025\n\rconnection_id\030\003 \001(\t\" \n\016DivideResponse"
  "\022\016\n\006obj_id\030\001 \001(\004\"I\n\017IndexingRequest\022\016\n\006o"
  "bj_id\030\001 \001(\004\022\017\n\007indices\030\002 \003(\r\022\025\n\rconnecti"
  "on_id\030\003 \001(\t\"*\n\020IndexingResponse\022\026\n\016pickl"
  "ed_result\030\001 \001(\014\"=\n\024TensorToNumpyRequest\022"
  "\016\n\006obj_id\030\001 \001(\004\022\025\n\rconnection_id\030\002 \001(\t\"."
  "\n\025TensorToNumPyResponse\022\025\n\rpickled_array"
  "\030\001 \001(\014\"9\n\020GetObjectRequest\022\016\n\006obj_id\030\001 \001"
  "(\004\022\025\n\rconnection_id\030\002 \001(\t\"#\n\021GetObjectRe"
  "sponse\022\016\n\006object\030\001 \001(\014\"7\n\020BatchNormReque"
  "st\022\014\n\004name\030\001 \001(\t\022\025\n\rconnection_id\030\002 \001(\t\""
  "#\n\021BatchNormResponse\022\016\n\006obj_id\030\001 \001(\0042\262\021\n"
  "\025YoloTensorflowWrapper\022>\n\007Connect\022\027.yolo"
  "_tf.ConnectRequest\032\030.yolo_tf.ConnectResp"
  "onse\"\000\022G\n\nDisconnect\022\032.yolo_tf.Disconnec"
  "tRequest\032\033.yolo_tf.DisconnectResponse\"\000\022"
  "8\n\010SayHello\022\025.yolo_tf.HelloRequest\032\023.yol"
  "o_tf.HelloReply\"\000\022B\n\021callable_emulator\022\024"
  ".yolo_tf.CallRequest\032\025.yolo_tf.CallRespo"
  "nse\"\000\022K\n\024get_iterable_slicing\022\027.yolo_tf."
  "SlicingRequest\032\030.yolo_tf.SlicingResponse"
  "\"\000\022A\n\010constant\022\030.yolo_tf.ConstantRequest"
  "\032\031.yolo_tf.ConstantResponse\"\000\022^\n+config_"
  "experimental_list__physical__devices\022\023.y"
  "olo_tf.DeviceType\032\030.yolo_tf.PhysicalDevi"
  "ces\"\000\022R\n\023image_decode__image\022\033.yolo_tf.D"
  "ecodeImageRequest\032\034.yolo_tf.DecodeImageR"
  "esponse\"\000\022S\n\014expand__dims\022\037.yolo_tf.Expa"
  "ndDemensionRequest\032 .yolo_tf.ExpandDemen"
  "sionResponse\"\000\022E\n\022keras_layers_Input\022\025.y"
  "olo_tf.InputRequest\032\026.yolo_tf.InputRespo"
  "nse\"\000\022>\n\013keras_Model\022\025.yolo_tf.ModelRequ"
  "est\032\026.yolo_tf.ModelResponse\"\000\022]\n\032keras_l"
  "ayers_ZeroPadding2D\022\035.yolo_tf.ZeroPaddin"
  "g2DRequest\032\036.yolo_tf.ZeroPadding2DRespon"
  "se\"\000\022H\n\023keras_layers_Conv2D\022\026.yolo_tf.Co"
  "nv2DRequest\032\027.yolo_tf.Conv2DResponse\"\000\022Q"
  "\n\026keras_layers_LeakyReLU\022\031.yolo_tf.Leaky"
  "ReluRequest\032\032.yolo_tf.LeakyReluResponse\""
  "\000\022\?\n\020keras_layers_Add\022\023.yolo_tf.AddReque"
  "st\032\024.yolo_tf.AddResponse\"\000\022H\n\023keras_laye"
  "rs_Lambda\022\026.yolo_tf.LambdaRequest\032\027.yolo"
  "_tf.LambdaResponse\"\000\022Z\n\031keras_layers_UpS"
  "ampling2D\022\034.yolo_tf.UpSampling2DRequest\032"
  "\035.yolo_tf.UpSampling2DResponse\"\000\022X\n\030kera"
  "s_layers_Concatenate\022\033.yolo_tf.Concatena"
  "teRequest\032\035.yolo_tf.ContcatenateResponse"
  "\"\000\022K\n\014image_resize\022\033.yolo_tf.ImageResize"
  "Request\032\034.yolo_tf.ImageResizeResponse\"\000\022"
  "B\n\025keras_regularizers_l2\022\022.yolo_tf.l2Req"
  "uest\032\023.yolo_tf.l2Response\"\000\022U\n\026attribute"
  "_tensor_shape\022\033.yolo_tf.TensorShapeReque"
  "st\032\034.yolo_tf.TensorShapeResponse\"\000\022[\n\034at"
  "tribute_model_load__weight\022\033.yolo_tf.Loa"
  "dWeightsRequest\032\034.yolo_tf.LoadWeightsRes"
  "ponse\"\000\022g\n$attribute_checkpoint_expect__"
  "partial\022\035.yolo_tf.ExpectPartialRequest\032\036"
  ".yolo_tf.ExpectPartialResponse\"\000\022E\n\020tens"
  "or_op_divide\022\026.yolo_tf.DivideRequest\032\027.y"
  "olo_tf.DivideResponse\"\000\022J\n\021iterable_inde"
  "xing\022\030.yolo_tf.IndexingRequest\032\031.yolo_tf"
  ".IndexingResponse\"\000\022W\n\024byte_tensor_to_nu"
  "mpy\022\035.yolo_tf.TensorToNumpyRequest\032\036.yol"
  "o_tf.TensorToNumPyResponse\"\000\022K\n\020get_obje"
  "ct_by_id\022\031.yolo_tf.GetObjectRequest\032\032.yo"
  "lo_tf.GetObjectResponse\"\000\022N\n\023batch_norma"
  "lization\022\031.yolo_tf.BatchNormRequest\032\032.yo"
  "lo_tf.BatchNormResponse\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_yolo_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_yolo_2eproto_sccs[58] = {
  &scc_info_AddRequest_yolo_2eproto.base,
  &scc_info_AddResponse_yolo_2eproto.base,
  &scc_info_BatchNormRequest_yolo_2eproto.base,
  &scc_info_BatchNormResponse_yolo_2eproto.base,
  &scc_info_CallRequest_yolo_2eproto.base,
  &scc_info_CallRequest_ObjId_yolo_2eproto.base,
  &scc_info_CallResponse_yolo_2eproto.base,
  &scc_info_ConcatenateRequest_yolo_2eproto.base,
  &scc_info_ConnectRequest_yolo_2eproto.base,
  &scc_info_ConnectResponse_yolo_2eproto.base,
  &scc_info_ConstantRequest_yolo_2eproto.base,
  &scc_info_ConstantResponse_yolo_2eproto.base,
  &scc_info_ContcatenateResponse_yolo_2eproto.base,
  &scc_info_Conv2DRequest_yolo_2eproto.base,
  &scc_info_Conv2DResponse_yolo_2eproto.base,
  &scc_info_DecodeImageRequest_yolo_2eproto.base,
  &scc_info_DecodeImageResponse_yolo_2eproto.base,
  &scc_info_DeviceType_yolo_2eproto.base,
  &scc_info_DisconnectRequest_yolo_2eproto.base,
  &scc_info_DisconnectResponse_yolo_2eproto.base,
  &scc_info_DivideRequest_yolo_2eproto.base,
  &scc_info_DivideResponse_yolo_2eproto.base,
  &scc_info_ExpandDemensionRequest_yolo_2eproto.base,
  &scc_info_ExpandDemensionResponse_yolo_2eproto.base,
  &scc_info_ExpectPartialRequest_yolo_2eproto.base,
  &scc_info_ExpectPartialResponse_yolo_2eproto.base,
  &scc_info_GetObjectRequest_yolo_2eproto.base,
  &scc_info_GetObjectResponse_yolo_2eproto.base,
  &scc_info_HelloReply_yolo_2eproto.base,
  &scc_info_HelloRequest_yolo_2eproto.base,
  &scc_info_ImageResizeRequest_yolo_2eproto.base,
  &scc_info_ImageResizeResponse_yolo_2eproto.base,
  &scc_info_IndexingRequest_yolo_2eproto.base,
  &scc_info_IndexingResponse_yolo_2eproto.base,
  &scc_info_InputRequest_yolo_2eproto.base,
  &scc_info_InputResponse_yolo_2eproto.base,
  &scc_info_LambdaRequest_yolo_2eproto.base,
  &scc_info_LambdaResponse_yolo_2eproto.base,
  &scc_info_LeakyReluRequest_yolo_2eproto.base,
  &scc_info_LeakyReluResponse_yolo_2eproto.base,
  &scc_info_LoadWeightsRequest_yolo_2eproto.base,
  &scc_info_LoadWeightsResponse_yolo_2eproto.base,
  &scc_info_ModelRequest_yolo_2eproto.base,
  &scc_info_ModelResponse_yolo_2eproto.base,
  &scc_info_PhysicalDevices_yolo_2eproto.base,
  &scc_info_PhysicalDevices_PhysicalDevice_yolo_2eproto.base,
  &scc_info_SlicingRequest_yolo_2eproto.base,
  &scc_info_SlicingResponse_yolo_2eproto.base,
  &scc_info_TensorShapeRequest_yolo_2eproto.base,
  &scc_info_TensorShapeResponse_yolo_2eproto.base,
  &scc_info_TensorToNumPyResponse_yolo_2eproto.base,
  &scc_info_TensorToNumpyRequest_yolo_2eproto.base,
  &scc_info_UpSampling2DRequest_yolo_2eproto.base,
  &scc_info_UpSampling2DResponse_yolo_2eproto.base,
  &scc_info_ZeroPadding2DRequest_yolo_2eproto.base,
  &scc_info_ZeroPadding2DResponse_yolo_2eproto.base,
  &scc_info_l2Request_yolo_2eproto.base,
  &scc_info_l2Response_yolo_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_yolo_2eproto_once;
static bool descriptor_table_yolo_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_yolo_2eproto = {
  &descriptor_table_yolo_2eproto_initialized, descriptor_table_protodef_yolo_2eproto, "yolo.proto", 5553,
  &descriptor_table_yolo_2eproto_once, descriptor_table_yolo_2eproto_sccs, descriptor_table_yolo_2eproto_deps, 58, 0,
  schemas, file_default_instances, TableStruct_yolo_2eproto::offsets,
  file_level_metadata_yolo_2eproto, 58, file_level_enum_descriptors_yolo_2eproto, file_level_service_descriptors_yolo_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_yolo_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_yolo_2eproto), true);
namespace yolo_tf {

// ===================================================================

void ConnectRequest::InitAsDefaultInstance() {
}
class ConnectRequest::_Internal {
 public:
};

ConnectRequest::ConnectRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.ConnectRequest)
}
ConnectRequest::ConnectRequest(const ConnectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:yolo_tf.ConnectRequest)
}

void ConnectRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ConnectRequest_yolo_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ConnectRequest::~ConnectRequest() {
  // @@protoc_insertion_point(destructor:yolo_tf.ConnectRequest)
  SharedDtor();
}

void ConnectRequest::SharedDtor() {
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ConnectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConnectRequest& ConnectRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConnectRequest_yolo_2eproto.base);
  return *internal_default_instance();
}


void ConnectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.ConnectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* ConnectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.ConnectRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConnectRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.ConnectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.ConnectRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.ConnectRequest)
  return target;
}

size_t ConnectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.ConnectRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.ConnectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConnectRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.ConnectRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.ConnectRequest)
    MergeFrom(*source);
  }
}

void ConnectRequest::MergeFrom(const ConnectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.ConnectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void ConnectRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.ConnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectRequest::CopyFrom(const ConnectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.ConnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectRequest::IsInitialized() const {
  return true;
}

void ConnectRequest::InternalSwap(ConnectRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ConnectRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ConnectResponse::InitAsDefaultInstance() {
}
class ConnectResponse::_Internal {
 public:
};

ConnectResponse::ConnectResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.ConnectResponse)
}
ConnectResponse::ConnectResponse(const ConnectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  accept_ = from.accept_;
  // @@protoc_insertion_point(copy_constructor:yolo_tf.ConnectResponse)
}

void ConnectResponse::SharedCtor() {
  accept_ = false;
}

ConnectResponse::~ConnectResponse() {
  // @@protoc_insertion_point(destructor:yolo_tf.ConnectResponse)
  SharedDtor();
}

void ConnectResponse::SharedDtor() {
}

void ConnectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConnectResponse& ConnectResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConnectResponse_yolo_2eproto.base);
  return *internal_default_instance();
}


void ConnectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.ConnectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accept_ = false;
  _internal_metadata_.Clear();
}

const char* ConnectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool accept = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          accept_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConnectResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.ConnectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool accept = 1;
  if (this->accept() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_accept(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.ConnectResponse)
  return target;
}

size_t ConnectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.ConnectResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool accept = 1;
  if (this->accept() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConnectResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.ConnectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnectResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConnectResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.ConnectResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.ConnectResponse)
    MergeFrom(*source);
  }
}

void ConnectResponse::MergeFrom(const ConnectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.ConnectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accept() != 0) {
    _internal_set_accept(from._internal_accept());
  }
}

void ConnectResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.ConnectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnectResponse::CopyFrom(const ConnectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.ConnectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnectResponse::IsInitialized() const {
  return true;
}

void ConnectResponse::InternalSwap(ConnectResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(accept_, other->accept_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ConnectResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DisconnectRequest::InitAsDefaultInstance() {
}
class DisconnectRequest::_Internal {
 public:
};

DisconnectRequest::DisconnectRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.DisconnectRequest)
}
DisconnectRequest::DisconnectRequest(const DisconnectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:yolo_tf.DisconnectRequest)
}

void DisconnectRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DisconnectRequest_yolo_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DisconnectRequest::~DisconnectRequest() {
  // @@protoc_insertion_point(destructor:yolo_tf.DisconnectRequest)
  SharedDtor();
}

void DisconnectRequest::SharedDtor() {
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DisconnectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DisconnectRequest& DisconnectRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DisconnectRequest_yolo_2eproto.base);
  return *internal_default_instance();
}


void DisconnectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.DisconnectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* DisconnectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.DisconnectRequest.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DisconnectRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.DisconnectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.DisconnectRequest.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.DisconnectRequest)
  return target;
}

size_t DisconnectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.DisconnectRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisconnectRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.DisconnectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DisconnectRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DisconnectRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.DisconnectRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.DisconnectRequest)
    MergeFrom(*source);
  }
}

void DisconnectRequest::MergeFrom(const DisconnectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.DisconnectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void DisconnectRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.DisconnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisconnectRequest::CopyFrom(const DisconnectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.DisconnectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisconnectRequest::IsInitialized() const {
  return true;
}

void DisconnectRequest::InternalSwap(DisconnectRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata DisconnectRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DisconnectResponse::InitAsDefaultInstance() {
}
class DisconnectResponse::_Internal {
 public:
};

DisconnectResponse::DisconnectResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.DisconnectResponse)
}
DisconnectResponse::DisconnectResponse(const DisconnectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:yolo_tf.DisconnectResponse)
}

void DisconnectResponse::SharedCtor() {
}

DisconnectResponse::~DisconnectResponse() {
  // @@protoc_insertion_point(destructor:yolo_tf.DisconnectResponse)
  SharedDtor();
}

void DisconnectResponse::SharedDtor() {
}

void DisconnectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DisconnectResponse& DisconnectResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DisconnectResponse_yolo_2eproto.base);
  return *internal_default_instance();
}


void DisconnectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.DisconnectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* DisconnectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DisconnectResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.DisconnectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.DisconnectResponse)
  return target;
}

size_t DisconnectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.DisconnectResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DisconnectResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.DisconnectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DisconnectResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DisconnectResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.DisconnectResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.DisconnectResponse)
    MergeFrom(*source);
  }
}

void DisconnectResponse::MergeFrom(const DisconnectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.DisconnectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DisconnectResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.DisconnectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisconnectResponse::CopyFrom(const DisconnectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.DisconnectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisconnectResponse::IsInitialized() const {
  return true;
}

void DisconnectResponse::InternalSwap(DisconnectResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DisconnectResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void HelloRequest::InitAsDefaultInstance() {
}
class HelloRequest::_Internal {
 public:
};

HelloRequest::HelloRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.HelloRequest)
}
HelloRequest::HelloRequest(const HelloRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:yolo_tf.HelloRequest)
}

void HelloRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_HelloRequest_yolo_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

HelloRequest::~HelloRequest() {
  // @@protoc_insertion_point(destructor:yolo_tf.HelloRequest)
  SharedDtor();
}

void HelloRequest::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void HelloRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HelloRequest& HelloRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HelloRequest_yolo_2eproto.base);
  return *internal_default_instance();
}


void HelloRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.HelloRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* HelloRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.HelloRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HelloRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.HelloRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.HelloRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.HelloRequest)
  return target;
}

size_t HelloRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.HelloRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HelloRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.HelloRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HelloRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HelloRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.HelloRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.HelloRequest)
    MergeFrom(*source);
  }
}

void HelloRequest::MergeFrom(const HelloRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.HelloRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void HelloRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.HelloRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelloRequest::CopyFrom(const HelloRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.HelloRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloRequest::IsInitialized() const {
  return true;
}

void HelloRequest::InternalSwap(HelloRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata HelloRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void HelloReply::InitAsDefaultInstance() {
}
class HelloReply::_Internal {
 public:
};

HelloReply::HelloReply()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.HelloReply)
}
HelloReply::HelloReply(const HelloReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:yolo_tf.HelloReply)
}

void HelloReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_HelloReply_yolo_2eproto.base);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

HelloReply::~HelloReply() {
  // @@protoc_insertion_point(destructor:yolo_tf.HelloReply)
  SharedDtor();
}

void HelloReply::SharedDtor() {
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void HelloReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HelloReply& HelloReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HelloReply_yolo_2eproto.base);
  return *internal_default_instance();
}


void HelloReply::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.HelloReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* HelloReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.HelloReply.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HelloReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.HelloReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.HelloReply.message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.HelloReply)
  return target;
}

size_t HelloReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.HelloReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HelloReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.HelloReply)
  GOOGLE_DCHECK_NE(&from, this);
  const HelloReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HelloReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.HelloReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.HelloReply)
    MergeFrom(*source);
  }
}

void HelloReply::MergeFrom(const HelloReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.HelloReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void HelloReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.HelloReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelloReply::CopyFrom(const HelloReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.HelloReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloReply::IsInitialized() const {
  return true;
}

void HelloReply::InternalSwap(HelloReply* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata HelloReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CallRequest_ObjId::InitAsDefaultInstance() {
}
class CallRequest_ObjId::_Internal {
 public:
};

CallRequest_ObjId::CallRequest_ObjId()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.CallRequest.ObjId)
}
CallRequest_ObjId::CallRequest_ObjId(const CallRequest_ObjId& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&obj_id_, &from.obj_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&release_) -
    reinterpret_cast<char*>(&obj_id_)) + sizeof(release_));
  // @@protoc_insertion_point(copy_constructor:yolo_tf.CallRequest.ObjId)
}

void CallRequest_ObjId::SharedCtor() {
  ::memset(&obj_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&release_) -
      reinterpret_cast<char*>(&obj_id_)) + sizeof(release_));
}

CallRequest_ObjId::~CallRequest_ObjId() {
  // @@protoc_insertion_point(destructor:yolo_tf.CallRequest.ObjId)
  SharedDtor();
}

void CallRequest_ObjId::SharedDtor() {
}

void CallRequest_ObjId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CallRequest_ObjId& CallRequest_ObjId::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CallRequest_ObjId_yolo_2eproto.base);
  return *internal_default_instance();
}


void CallRequest_ObjId::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.CallRequest.ObjId)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&obj_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&release_) -
      reinterpret_cast<char*>(&obj_id_)) + sizeof(release_));
  _internal_metadata_.Clear();
}

const char* CallRequest_ObjId::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 obj_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          obj_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool release = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          release_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CallRequest_ObjId::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.CallRequest.ObjId)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_obj_id(), target);
  }

  // bool release = 2;
  if (this->release() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_release(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.CallRequest.ObjId)
  return target;
}

size_t CallRequest_ObjId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.CallRequest.ObjId)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_obj_id());
  }

  // bool release = 2;
  if (this->release() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CallRequest_ObjId::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.CallRequest.ObjId)
  GOOGLE_DCHECK_NE(&from, this);
  const CallRequest_ObjId* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CallRequest_ObjId>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.CallRequest.ObjId)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.CallRequest.ObjId)
    MergeFrom(*source);
  }
}

void CallRequest_ObjId::MergeFrom(const CallRequest_ObjId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.CallRequest.ObjId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_id() != 0) {
    _internal_set_obj_id(from._internal_obj_id());
  }
  if (from.release() != 0) {
    _internal_set_release(from._internal_release());
  }
}

void CallRequest_ObjId::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.CallRequest.ObjId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallRequest_ObjId::CopyFrom(const CallRequest_ObjId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.CallRequest.ObjId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallRequest_ObjId::IsInitialized() const {
  return true;
}

void CallRequest_ObjId::InternalSwap(CallRequest_ObjId* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(obj_id_, other->obj_id_);
  swap(release_, other->release_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CallRequest_ObjId::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CallRequest::InitAsDefaultInstance() {
}
class CallRequest::_Internal {
 public:
};

CallRequest::CallRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.CallRequest)
}
CallRequest::CallRequest(const CallRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      pickled_args_(from.pickled_args_),
      obj_ids_(from.obj_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  ::memcpy(&callable_obj_id_, &from.callable_obj_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_of_returns_) -
    reinterpret_cast<char*>(&callable_obj_id_)) + sizeof(num_of_returns_));
  // @@protoc_insertion_point(copy_constructor:yolo_tf.CallRequest)
}

void CallRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CallRequest_yolo_2eproto.base);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&callable_obj_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_of_returns_) -
      reinterpret_cast<char*>(&callable_obj_id_)) + sizeof(num_of_returns_));
}

CallRequest::~CallRequest() {
  // @@protoc_insertion_point(destructor:yolo_tf.CallRequest)
  SharedDtor();
}

void CallRequest::SharedDtor() {
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CallRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CallRequest& CallRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CallRequest_yolo_2eproto.base);
  return *internal_default_instance();
}


void CallRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.CallRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pickled_args_.Clear();
  obj_ids_.Clear();
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&callable_obj_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_of_returns_) -
      reinterpret_cast<char*>(&callable_obj_id_)) + sizeof(num_of_returns_));
  _internal_metadata_.Clear();
}

const char* CallRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 callable_obj_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          callable_obj_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool args_pickled = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          args_pickled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated bytes pickled_args = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_pickled_args();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .yolo_tf.CallRequest.ObjId obj_ids = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_obj_ids(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 num_of_returns = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          num_of_returns_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connection_id = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.CallRequest.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CallRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.CallRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 callable_obj_id = 1;
  if (this->callable_obj_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_callable_obj_id(), target);
  }

  // bool args_pickled = 2;
  if (this->args_pickled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_args_pickled(), target);
  }

  // repeated bytes pickled_args = 3;
  for (int i = 0, n = this->_internal_pickled_args_size(); i < n; i++) {
    const auto& s = this->_internal_pickled_args(i);
    target = stream->WriteBytes(3, s, target);
  }

  // repeated .yolo_tf.CallRequest.ObjId obj_ids = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_obj_ids_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_obj_ids(i), target, stream);
  }

  // int32 num_of_returns = 5;
  if (this->num_of_returns() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_num_of_returns(), target);
  }

  // string connection_id = 6;
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.CallRequest.connection_id");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_connection_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.CallRequest)
  return target;
}

size_t CallRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.CallRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes pickled_args = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(pickled_args_.size());
  for (int i = 0, n = pickled_args_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      pickled_args_.Get(i));
  }

  // repeated .yolo_tf.CallRequest.ObjId obj_ids = 4;
  total_size += 1UL * this->_internal_obj_ids_size();
  for (const auto& msg : this->obj_ids_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string connection_id = 6;
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  // uint64 callable_obj_id = 1;
  if (this->callable_obj_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_callable_obj_id());
  }

  // bool args_pickled = 2;
  if (this->args_pickled() != 0) {
    total_size += 1 + 1;
  }

  // int32 num_of_returns = 5;
  if (this->num_of_returns() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num_of_returns());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CallRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.CallRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CallRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CallRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.CallRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.CallRequest)
    MergeFrom(*source);
  }
}

void CallRequest::MergeFrom(const CallRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.CallRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pickled_args_.MergeFrom(from.pickled_args_);
  obj_ids_.MergeFrom(from.obj_ids_);
  if (from.connection_id().size() > 0) {

    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  if (from.callable_obj_id() != 0) {
    _internal_set_callable_obj_id(from._internal_callable_obj_id());
  }
  if (from.args_pickled() != 0) {
    _internal_set_args_pickled(from._internal_args_pickled());
  }
  if (from.num_of_returns() != 0) {
    _internal_set_num_of_returns(from._internal_num_of_returns());
  }
}

void CallRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.CallRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallRequest::CopyFrom(const CallRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.CallRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallRequest::IsInitialized() const {
  return true;
}

void CallRequest::InternalSwap(CallRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  pickled_args_.InternalSwap(&other->pickled_args_);
  obj_ids_.InternalSwap(&other->obj_ids_);
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(callable_obj_id_, other->callable_obj_id_);
  swap(args_pickled_, other->args_pickled_);
  swap(num_of_returns_, other->num_of_returns_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CallRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CallResponse::InitAsDefaultInstance() {
}
class CallResponse::_Internal {
 public:
};

CallResponse::CallResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.CallResponse)
}
CallResponse::CallResponse(const CallResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      pickled_result_(from.pickled_result_),
      obj_ids_(from.obj_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pickled_ = from.pickled_;
  // @@protoc_insertion_point(copy_constructor:yolo_tf.CallResponse)
}

void CallResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CallResponse_yolo_2eproto.base);
  pickled_ = false;
}

CallResponse::~CallResponse() {
  // @@protoc_insertion_point(destructor:yolo_tf.CallResponse)
  SharedDtor();
}

void CallResponse::SharedDtor() {
}

void CallResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CallResponse& CallResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CallResponse_yolo_2eproto.base);
  return *internal_default_instance();
}


void CallResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.CallResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pickled_result_.Clear();
  obj_ids_.Clear();
  pickled_ = false;
  _internal_metadata_.Clear();
}

const char* CallResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool pickled = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          pickled_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated bytes pickled_result = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_pickled_result();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated uint64 obj_ids = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_obj_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24) {
          _internal_add_obj_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CallResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.CallResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool pickled = 1;
  if (this->pickled() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_pickled(), target);
  }

  // repeated bytes pickled_result = 2;
  for (int i = 0, n = this->_internal_pickled_result_size(); i < n; i++) {
    const auto& s = this->_internal_pickled_result(i);
    target = stream->WriteBytes(2, s, target);
  }

  // repeated uint64 obj_ids = 3;
  {
    int byte_size = _obj_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          3, _internal_obj_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.CallResponse)
  return target;
}

size_t CallResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.CallResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes pickled_result = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(pickled_result_.size());
  for (int i = 0, n = pickled_result_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      pickled_result_.Get(i));
  }

  // repeated uint64 obj_ids = 3;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->obj_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _obj_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // bool pickled = 1;
  if (this->pickled() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CallResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.CallResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CallResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CallResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.CallResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.CallResponse)
    MergeFrom(*source);
  }
}

void CallResponse::MergeFrom(const CallResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.CallResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pickled_result_.MergeFrom(from.pickled_result_);
  obj_ids_.MergeFrom(from.obj_ids_);
  if (from.pickled() != 0) {
    _internal_set_pickled(from._internal_pickled());
  }
}

void CallResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.CallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallResponse::CopyFrom(const CallResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.CallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallResponse::IsInitialized() const {
  return true;
}

void CallResponse::InternalSwap(CallResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  pickled_result_.InternalSwap(&other->pickled_result_);
  obj_ids_.InternalSwap(&other->obj_ids_);
  swap(pickled_, other->pickled_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CallResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SlicingRequest::InitAsDefaultInstance() {
}
class SlicingRequest::_Internal {
 public:
};

SlicingRequest::SlicingRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.SlicingRequest)
}
SlicingRequest::SlicingRequest(const SlicingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  ::memcpy(&iterable_id_, &from.iterable_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_) -
    reinterpret_cast<char*>(&iterable_id_)) + sizeof(end_));
  // @@protoc_insertion_point(copy_constructor:yolo_tf.SlicingRequest)
}

void SlicingRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SlicingRequest_yolo_2eproto.base);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&iterable_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_) -
      reinterpret_cast<char*>(&iterable_id_)) + sizeof(end_));
}

SlicingRequest::~SlicingRequest() {
  // @@protoc_insertion_point(destructor:yolo_tf.SlicingRequest)
  SharedDtor();
}

void SlicingRequest::SharedDtor() {
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SlicingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SlicingRequest& SlicingRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SlicingRequest_yolo_2eproto.base);
  return *internal_default_instance();
}


void SlicingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.SlicingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&iterable_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_) -
      reinterpret_cast<char*>(&iterable_id_)) + sizeof(end_));
  _internal_metadata_.Clear();
}

const char* SlicingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 iterable_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          iterable_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 start = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          start_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 end = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          end_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connection_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.SlicingRequest.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SlicingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.SlicingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 iterable_id = 1;
  if (this->iterable_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_iterable_id(), target);
  }

  // uint32 start = 2;
  if (this->start() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_start(), target);
  }

  // uint32 end = 3;
  if (this->end() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_end(), target);
  }

  // string connection_id = 4;
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.SlicingRequest.connection_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_connection_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.SlicingRequest)
  return target;
}

size_t SlicingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.SlicingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string connection_id = 4;
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  // uint64 iterable_id = 1;
  if (this->iterable_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_iterable_id());
  }

  // uint32 start = 2;
  if (this->start() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_start());
  }

  // uint32 end = 3;
  if (this->end() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_end());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SlicingRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.SlicingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SlicingRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SlicingRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.SlicingRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.SlicingRequest)
    MergeFrom(*source);
  }
}

void SlicingRequest::MergeFrom(const SlicingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.SlicingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.connection_id().size() > 0) {

    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  if (from.iterable_id() != 0) {
    _internal_set_iterable_id(from._internal_iterable_id());
  }
  if (from.start() != 0) {
    _internal_set_start(from._internal_start());
  }
  if (from.end() != 0) {
    _internal_set_end(from._internal_end());
  }
}

void SlicingRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.SlicingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SlicingRequest::CopyFrom(const SlicingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.SlicingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SlicingRequest::IsInitialized() const {
  return true;
}

void SlicingRequest::InternalSwap(SlicingRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(iterable_id_, other->iterable_id_);
  swap(start_, other->start_);
  swap(end_, other->end_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SlicingRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SlicingResponse::InitAsDefaultInstance() {
}
class SlicingResponse::_Internal {
 public:
};

SlicingResponse::SlicingResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.SlicingResponse)
}
SlicingResponse::SlicingResponse(const SlicingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_id_ = from.obj_id_;
  // @@protoc_insertion_point(copy_constructor:yolo_tf.SlicingResponse)
}

void SlicingResponse::SharedCtor() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}

SlicingResponse::~SlicingResponse() {
  // @@protoc_insertion_point(destructor:yolo_tf.SlicingResponse)
  SharedDtor();
}

void SlicingResponse::SharedDtor() {
}

void SlicingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SlicingResponse& SlicingResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SlicingResponse_yolo_2eproto.base);
  return *internal_default_instance();
}


void SlicingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.SlicingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obj_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* SlicingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 obj_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          obj_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SlicingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.SlicingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_obj_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.SlicingResponse)
  return target;
}

size_t SlicingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.SlicingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_obj_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SlicingResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.SlicingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SlicingResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SlicingResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.SlicingResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.SlicingResponse)
    MergeFrom(*source);
  }
}

void SlicingResponse::MergeFrom(const SlicingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.SlicingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_id() != 0) {
    _internal_set_obj_id(from._internal_obj_id());
  }
}

void SlicingResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.SlicingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SlicingResponse::CopyFrom(const SlicingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.SlicingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SlicingResponse::IsInitialized() const {
  return true;
}

void SlicingResponse::InternalSwap(SlicingResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(obj_id_, other->obj_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SlicingResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ConstantRequest::InitAsDefaultInstance() {
}
class ConstantRequest::_Internal {
 public:
};

ConstantRequest::ConstantRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.ConstantRequest)
}
ConstantRequest::ConstantRequest(const ConstantRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  // @@protoc_insertion_point(copy_constructor:yolo_tf.ConstantRequest)
}

void ConstantRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ConstantRequest_yolo_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ConstantRequest::~ConstantRequest() {
  // @@protoc_insertion_point(destructor:yolo_tf.ConstantRequest)
  SharedDtor();
}

void ConstantRequest::SharedDtor() {
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ConstantRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConstantRequest& ConstantRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConstantRequest_yolo_2eproto.base);
  return *internal_default_instance();
}


void ConstantRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.ConstantRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* ConstantRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connection_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.ConstantRequest.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConstantRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.ConstantRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_value(), target);
  }

  // string connection_id = 2;
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.ConstantRequest.connection_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_connection_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.ConstantRequest)
  return target;
}

size_t ConstantRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.ConstantRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_value());
  }

  // string connection_id = 2;
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConstantRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.ConstantRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ConstantRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConstantRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.ConstantRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.ConstantRequest)
    MergeFrom(*source);
  }
}

void ConstantRequest::MergeFrom(const ConstantRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.ConstantRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.connection_id().size() > 0) {

    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
}

void ConstantRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.ConstantRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConstantRequest::CopyFrom(const ConstantRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.ConstantRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConstantRequest::IsInitialized() const {
  return true;
}

void ConstantRequest::InternalSwap(ConstantRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ConstantRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ConstantResponse::InitAsDefaultInstance() {
}
class ConstantResponse::_Internal {
 public:
};

ConstantResponse::ConstantResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.ConstantResponse)
}
ConstantResponse::ConstantResponse(const ConstantResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tensor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tensor().empty()) {
    tensor_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tensor_);
  }
  // @@protoc_insertion_point(copy_constructor:yolo_tf.ConstantResponse)
}

void ConstantResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ConstantResponse_yolo_2eproto.base);
  tensor_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ConstantResponse::~ConstantResponse() {
  // @@protoc_insertion_point(destructor:yolo_tf.ConstantResponse)
  SharedDtor();
}

void ConstantResponse::SharedDtor() {
  tensor_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ConstantResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConstantResponse& ConstantResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConstantResponse_yolo_2eproto.base);
  return *internal_default_instance();
}


void ConstantResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.ConstantResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tensor_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* ConstantResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes tensor = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_tensor();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConstantResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.ConstantResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes tensor = 1;
  if (this->tensor().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_tensor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.ConstantResponse)
  return target;
}

size_t ConstantResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.ConstantResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes tensor = 1;
  if (this->tensor().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_tensor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConstantResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.ConstantResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ConstantResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConstantResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.ConstantResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.ConstantResponse)
    MergeFrom(*source);
  }
}

void ConstantResponse::MergeFrom(const ConstantResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.ConstantResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tensor().size() > 0) {

    tensor_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tensor_);
  }
}

void ConstantResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.ConstantResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConstantResponse::CopyFrom(const ConstantResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.ConstantResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConstantResponse::IsInitialized() const {
  return true;
}

void ConstantResponse::InternalSwap(ConstantResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  tensor_.Swap(&other->tensor_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ConstantResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeviceType::InitAsDefaultInstance() {
}
class DeviceType::_Internal {
 public:
};

DeviceType::DeviceType()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.DeviceType)
}
DeviceType::DeviceType(const DeviceType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_device_type().empty()) {
    device_type_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.device_type_);
  }
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  // @@protoc_insertion_point(copy_constructor:yolo_tf.DeviceType)
}

void DeviceType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeviceType_yolo_2eproto.base);
  device_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeviceType::~DeviceType() {
  // @@protoc_insertion_point(destructor:yolo_tf.DeviceType)
  SharedDtor();
}

void DeviceType::SharedDtor() {
  device_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeviceType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeviceType& DeviceType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeviceType_yolo_2eproto.base);
  return *internal_default_instance();
}


void DeviceType::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.DeviceType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  device_type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* DeviceType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string device_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_device_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.DeviceType.device_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connection_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.DeviceType.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeviceType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.DeviceType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string device_type = 1;
  if (this->device_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_device_type().data(), static_cast<int>(this->_internal_device_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.DeviceType.device_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_device_type(), target);
  }

  // string connection_id = 2;
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.DeviceType.connection_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_connection_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.DeviceType)
  return target;
}

size_t DeviceType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.DeviceType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string device_type = 1;
  if (this->device_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_device_type());
  }

  // string connection_id = 2;
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeviceType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.DeviceType)
  GOOGLE_DCHECK_NE(&from, this);
  const DeviceType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeviceType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.DeviceType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.DeviceType)
    MergeFrom(*source);
  }
}

void DeviceType::MergeFrom(const DeviceType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.DeviceType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.device_type().size() > 0) {

    device_type_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.device_type_);
  }
  if (from.connection_id().size() > 0) {

    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
}

void DeviceType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.DeviceType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeviceType::CopyFrom(const DeviceType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.DeviceType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeviceType::IsInitialized() const {
  return true;
}

void DeviceType::InternalSwap(DeviceType* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  device_type_.Swap(&other->device_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeviceType::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PhysicalDevices_PhysicalDevice::InitAsDefaultInstance() {
}
class PhysicalDevices_PhysicalDevice::_Internal {
 public:
};

PhysicalDevices_PhysicalDevice::PhysicalDevices_PhysicalDevice()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.PhysicalDevices.PhysicalDevice)
}
PhysicalDevices_PhysicalDevice::PhysicalDevices_PhysicalDevice(const PhysicalDevices_PhysicalDevice& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  device_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_device_type().empty()) {
    device_type_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.device_type_);
  }
  // @@protoc_insertion_point(copy_constructor:yolo_tf.PhysicalDevices.PhysicalDevice)
}

void PhysicalDevices_PhysicalDevice::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PhysicalDevices_PhysicalDevice_yolo_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  device_type_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PhysicalDevices_PhysicalDevice::~PhysicalDevices_PhysicalDevice() {
  // @@protoc_insertion_point(destructor:yolo_tf.PhysicalDevices.PhysicalDevice)
  SharedDtor();
}

void PhysicalDevices_PhysicalDevice::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  device_type_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PhysicalDevices_PhysicalDevice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PhysicalDevices_PhysicalDevice& PhysicalDevices_PhysicalDevice::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PhysicalDevices_PhysicalDevice_yolo_2eproto.base);
  return *internal_default_instance();
}


void PhysicalDevices_PhysicalDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.PhysicalDevices.PhysicalDevice)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  device_type_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* PhysicalDevices_PhysicalDevice::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.PhysicalDevices.PhysicalDevice.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string device_type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_device_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.PhysicalDevices.PhysicalDevice.device_type"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PhysicalDevices_PhysicalDevice::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.PhysicalDevices.PhysicalDevice)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.PhysicalDevices.PhysicalDevice.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string device_type = 2;
  if (this->device_type().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_device_type().data(), static_cast<int>(this->_internal_device_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.PhysicalDevices.PhysicalDevice.device_type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_device_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.PhysicalDevices.PhysicalDevice)
  return target;
}

size_t PhysicalDevices_PhysicalDevice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.PhysicalDevices.PhysicalDevice)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string device_type = 2;
  if (this->device_type().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_device_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PhysicalDevices_PhysicalDevice::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.PhysicalDevices.PhysicalDevice)
  GOOGLE_DCHECK_NE(&from, this);
  const PhysicalDevices_PhysicalDevice* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PhysicalDevices_PhysicalDevice>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.PhysicalDevices.PhysicalDevice)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.PhysicalDevices.PhysicalDevice)
    MergeFrom(*source);
  }
}

void PhysicalDevices_PhysicalDevice::MergeFrom(const PhysicalDevices_PhysicalDevice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.PhysicalDevices.PhysicalDevice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.device_type().size() > 0) {

    device_type_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.device_type_);
  }
}

void PhysicalDevices_PhysicalDevice::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.PhysicalDevices.PhysicalDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhysicalDevices_PhysicalDevice::CopyFrom(const PhysicalDevices_PhysicalDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.PhysicalDevices.PhysicalDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhysicalDevices_PhysicalDevice::IsInitialized() const {
  return true;
}

void PhysicalDevices_PhysicalDevice::InternalSwap(PhysicalDevices_PhysicalDevice* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  device_type_.Swap(&other->device_type_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata PhysicalDevices_PhysicalDevice::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PhysicalDevices::InitAsDefaultInstance() {
}
class PhysicalDevices::_Internal {
 public:
};

PhysicalDevices::PhysicalDevices()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.PhysicalDevices)
}
PhysicalDevices::PhysicalDevices(const PhysicalDevices& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      devices_(from.devices_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:yolo_tf.PhysicalDevices)
}

void PhysicalDevices::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PhysicalDevices_yolo_2eproto.base);
}

PhysicalDevices::~PhysicalDevices() {
  // @@protoc_insertion_point(destructor:yolo_tf.PhysicalDevices)
  SharedDtor();
}

void PhysicalDevices::SharedDtor() {
}

void PhysicalDevices::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PhysicalDevices& PhysicalDevices::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PhysicalDevices_yolo_2eproto.base);
  return *internal_default_instance();
}


void PhysicalDevices::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.PhysicalDevices)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  devices_.Clear();
  _internal_metadata_.Clear();
}

const char* PhysicalDevices::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .yolo_tf.PhysicalDevices.PhysicalDevice devices = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_devices(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PhysicalDevices::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.PhysicalDevices)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .yolo_tf.PhysicalDevices.PhysicalDevice devices = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_devices_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_devices(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.PhysicalDevices)
  return target;
}

size_t PhysicalDevices::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.PhysicalDevices)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .yolo_tf.PhysicalDevices.PhysicalDevice devices = 1;
  total_size += 1UL * this->_internal_devices_size();
  for (const auto& msg : this->devices_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PhysicalDevices::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.PhysicalDevices)
  GOOGLE_DCHECK_NE(&from, this);
  const PhysicalDevices* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PhysicalDevices>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.PhysicalDevices)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.PhysicalDevices)
    MergeFrom(*source);
  }
}

void PhysicalDevices::MergeFrom(const PhysicalDevices& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.PhysicalDevices)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  devices_.MergeFrom(from.devices_);
}

void PhysicalDevices::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.PhysicalDevices)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhysicalDevices::CopyFrom(const PhysicalDevices& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.PhysicalDevices)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhysicalDevices::IsInitialized() const {
  return true;
}

void PhysicalDevices::InternalSwap(PhysicalDevices* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  devices_.InternalSwap(&other->devices_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PhysicalDevices::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DecodeImageRequest::InitAsDefaultInstance() {
}
class DecodeImageRequest::_Internal {
 public:
};

DecodeImageRequest::DecodeImageRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.DecodeImageRequest)
}
DecodeImageRequest::DecodeImageRequest(const DecodeImageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  byte_image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_byte_image().empty()) {
    byte_image_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.byte_image_);
  }
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  ::memcpy(&size_, &from.size_,
    static_cast<size_t>(reinterpret_cast<char*>(&channels_) -
    reinterpret_cast<char*>(&size_)) + sizeof(channels_));
  // @@protoc_insertion_point(copy_constructor:yolo_tf.DecodeImageRequest)
}

void DecodeImageRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DecodeImageRequest_yolo_2eproto.base);
  byte_image_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channels_) -
      reinterpret_cast<char*>(&size_)) + sizeof(channels_));
}

DecodeImageRequest::~DecodeImageRequest() {
  // @@protoc_insertion_point(destructor:yolo_tf.DecodeImageRequest)
  SharedDtor();
}

void DecodeImageRequest::SharedDtor() {
  byte_image_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DecodeImageRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DecodeImageRequest& DecodeImageRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DecodeImageRequest_yolo_2eproto.base);
  return *internal_default_instance();
}


void DecodeImageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.DecodeImageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  byte_image_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channels_) -
      reinterpret_cast<char*>(&size_)) + sizeof(channels_));
  _internal_metadata_.Clear();
}

const char* DecodeImageRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes byte_image = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_byte_image();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 channels = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          channels_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connection_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.DecodeImageRequest.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DecodeImageRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.DecodeImageRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes byte_image = 1;
  if (this->byte_image().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_byte_image(), target);
  }

  // int32 size = 2;
  if (this->size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_size(), target);
  }

  // int32 channels = 3;
  if (this->channels() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_channels(), target);
  }

  // string connection_id = 4;
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.DecodeImageRequest.connection_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_connection_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.DecodeImageRequest)
  return target;
}

size_t DecodeImageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.DecodeImageRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes byte_image = 1;
  if (this->byte_image().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_byte_image());
  }

  // string connection_id = 4;
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  // int32 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_size());
  }

  // int32 channels = 3;
  if (this->channels() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_channels());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DecodeImageRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.DecodeImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DecodeImageRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DecodeImageRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.DecodeImageRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.DecodeImageRequest)
    MergeFrom(*source);
  }
}

void DecodeImageRequest::MergeFrom(const DecodeImageRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.DecodeImageRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.byte_image().size() > 0) {

    byte_image_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.byte_image_);
  }
  if (from.connection_id().size() > 0) {

    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  if (from.size() != 0) {
    _internal_set_size(from._internal_size());
  }
  if (from.channels() != 0) {
    _internal_set_channels(from._internal_channels());
  }
}

void DecodeImageRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.DecodeImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DecodeImageRequest::CopyFrom(const DecodeImageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.DecodeImageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecodeImageRequest::IsInitialized() const {
  return true;
}

void DecodeImageRequest::InternalSwap(DecodeImageRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  byte_image_.Swap(&other->byte_image_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(size_, other->size_);
  swap(channels_, other->channels_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DecodeImageRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DecodeImageResponse::InitAsDefaultInstance() {
}
class DecodeImageResponse::_Internal {
 public:
};

DecodeImageResponse::DecodeImageResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.DecodeImageResponse)
}
DecodeImageResponse::DecodeImageResponse(const DecodeImageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_id_ = from.obj_id_;
  // @@protoc_insertion_point(copy_constructor:yolo_tf.DecodeImageResponse)
}

void DecodeImageResponse::SharedCtor() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}

DecodeImageResponse::~DecodeImageResponse() {
  // @@protoc_insertion_point(destructor:yolo_tf.DecodeImageResponse)
  SharedDtor();
}

void DecodeImageResponse::SharedDtor() {
}

void DecodeImageResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DecodeImageResponse& DecodeImageResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DecodeImageResponse_yolo_2eproto.base);
  return *internal_default_instance();
}


void DecodeImageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.DecodeImageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obj_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* DecodeImageResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 obj_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          obj_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DecodeImageResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.DecodeImageResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_obj_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.DecodeImageResponse)
  return target;
}

size_t DecodeImageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.DecodeImageResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_obj_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DecodeImageResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.DecodeImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DecodeImageResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DecodeImageResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.DecodeImageResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.DecodeImageResponse)
    MergeFrom(*source);
  }
}

void DecodeImageResponse::MergeFrom(const DecodeImageResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.DecodeImageResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_id() != 0) {
    _internal_set_obj_id(from._internal_obj_id());
  }
}

void DecodeImageResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.DecodeImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DecodeImageResponse::CopyFrom(const DecodeImageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.DecodeImageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DecodeImageResponse::IsInitialized() const {
  return true;
}

void DecodeImageResponse::InternalSwap(DecodeImageResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(obj_id_, other->obj_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DecodeImageResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ExpandDemensionRequest::InitAsDefaultInstance() {
}
class ExpandDemensionRequest::_Internal {
 public:
};

ExpandDemensionRequest::ExpandDemensionRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.ExpandDemensionRequest)
}
ExpandDemensionRequest::ExpandDemensionRequest(const ExpandDemensionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  ::memcpy(&obj_id_, &from.obj_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&axis_) -
    reinterpret_cast<char*>(&obj_id_)) + sizeof(axis_));
  // @@protoc_insertion_point(copy_constructor:yolo_tf.ExpandDemensionRequest)
}

void ExpandDemensionRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ExpandDemensionRequest_yolo_2eproto.base);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&obj_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&axis_) -
      reinterpret_cast<char*>(&obj_id_)) + sizeof(axis_));
}

ExpandDemensionRequest::~ExpandDemensionRequest() {
  // @@protoc_insertion_point(destructor:yolo_tf.ExpandDemensionRequest)
  SharedDtor();
}

void ExpandDemensionRequest::SharedDtor() {
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ExpandDemensionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExpandDemensionRequest& ExpandDemensionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExpandDemensionRequest_yolo_2eproto.base);
  return *internal_default_instance();
}


void ExpandDemensionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.ExpandDemensionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&obj_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&axis_) -
      reinterpret_cast<char*>(&obj_id_)) + sizeof(axis_));
  _internal_metadata_.Clear();
}

const char* ExpandDemensionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 obj_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          obj_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 axis = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          axis_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connection_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.ExpandDemensionRequest.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExpandDemensionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.ExpandDemensionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_obj_id(), target);
  }

  // int32 axis = 2;
  if (this->axis() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_axis(), target);
  }

  // string connection_id = 3;
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.ExpandDemensionRequest.connection_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_connection_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.ExpandDemensionRequest)
  return target;
}

size_t ExpandDemensionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.ExpandDemensionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string connection_id = 3;
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_obj_id());
  }

  // int32 axis = 2;
  if (this->axis() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_axis());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExpandDemensionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.ExpandDemensionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExpandDemensionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExpandDemensionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.ExpandDemensionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.ExpandDemensionRequest)
    MergeFrom(*source);
  }
}

void ExpandDemensionRequest::MergeFrom(const ExpandDemensionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.ExpandDemensionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.connection_id().size() > 0) {

    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  if (from.obj_id() != 0) {
    _internal_set_obj_id(from._internal_obj_id());
  }
  if (from.axis() != 0) {
    _internal_set_axis(from._internal_axis());
  }
}

void ExpandDemensionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.ExpandDemensionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExpandDemensionRequest::CopyFrom(const ExpandDemensionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.ExpandDemensionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExpandDemensionRequest::IsInitialized() const {
  return true;
}

void ExpandDemensionRequest::InternalSwap(ExpandDemensionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(obj_id_, other->obj_id_);
  swap(axis_, other->axis_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExpandDemensionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ExpandDemensionResponse::InitAsDefaultInstance() {
}
class ExpandDemensionResponse::_Internal {
 public:
};

ExpandDemensionResponse::ExpandDemensionResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.ExpandDemensionResponse)
}
ExpandDemensionResponse::ExpandDemensionResponse(const ExpandDemensionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_id_ = from.obj_id_;
  // @@protoc_insertion_point(copy_constructor:yolo_tf.ExpandDemensionResponse)
}

void ExpandDemensionResponse::SharedCtor() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}

ExpandDemensionResponse::~ExpandDemensionResponse() {
  // @@protoc_insertion_point(destructor:yolo_tf.ExpandDemensionResponse)
  SharedDtor();
}

void ExpandDemensionResponse::SharedDtor() {
}

void ExpandDemensionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExpandDemensionResponse& ExpandDemensionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExpandDemensionResponse_yolo_2eproto.base);
  return *internal_default_instance();
}


void ExpandDemensionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.ExpandDemensionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obj_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* ExpandDemensionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 obj_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          obj_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExpandDemensionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.ExpandDemensionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_obj_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.ExpandDemensionResponse)
  return target;
}

size_t ExpandDemensionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.ExpandDemensionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_obj_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExpandDemensionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.ExpandDemensionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ExpandDemensionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExpandDemensionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.ExpandDemensionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.ExpandDemensionResponse)
    MergeFrom(*source);
  }
}

void ExpandDemensionResponse::MergeFrom(const ExpandDemensionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.ExpandDemensionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_id() != 0) {
    _internal_set_obj_id(from._internal_obj_id());
  }
}

void ExpandDemensionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.ExpandDemensionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExpandDemensionResponse::CopyFrom(const ExpandDemensionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.ExpandDemensionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExpandDemensionResponse::IsInitialized() const {
  return true;
}

void ExpandDemensionResponse::InternalSwap(ExpandDemensionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(obj_id_, other->obj_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExpandDemensionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InputRequest::InitAsDefaultInstance() {
}
class InputRequest::_Internal {
 public:
};

InputRequest::InputRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.InputRequest)
}
InputRequest::InputRequest(const InputRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      shape_(from.shape_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  // @@protoc_insertion_point(copy_constructor:yolo_tf.InputRequest)
}

void InputRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InputRequest_yolo_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

InputRequest::~InputRequest() {
  // @@protoc_insertion_point(destructor:yolo_tf.InputRequest)
  SharedDtor();
}

void InputRequest::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void InputRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InputRequest& InputRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InputRequest_yolo_2eproto.base);
  return *internal_default_instance();
}


void InputRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.InputRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shape_.Clear();
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* InputRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated int32 shape = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_shape(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_shape(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.InputRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connection_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.InputRequest.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InputRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.InputRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 shape = 1;
  {
    int byte_size = _shape_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          1, _internal_shape(), byte_size, target);
    }
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.InputRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string connection_id = 3;
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.InputRequest.connection_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_connection_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.InputRequest)
  return target;
}

size_t InputRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.InputRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 shape = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->shape_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _shape_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string connection_id = 3;
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.InputRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InputRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InputRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.InputRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.InputRequest)
    MergeFrom(*source);
  }
}

void InputRequest::MergeFrom(const InputRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.InputRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shape_.MergeFrom(from.shape_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.connection_id().size() > 0) {

    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
}

void InputRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.InputRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputRequest::CopyFrom(const InputRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.InputRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputRequest::IsInitialized() const {
  return true;
}

void InputRequest::InternalSwap(InputRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  shape_.InternalSwap(&other->shape_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata InputRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void InputResponse::InitAsDefaultInstance() {
}
class InputResponse::_Internal {
 public:
};

InputResponse::InputResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.InputResponse)
}
InputResponse::InputResponse(const InputResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_id_ = from.obj_id_;
  // @@protoc_insertion_point(copy_constructor:yolo_tf.InputResponse)
}

void InputResponse::SharedCtor() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}

InputResponse::~InputResponse() {
  // @@protoc_insertion_point(destructor:yolo_tf.InputResponse)
  SharedDtor();
}

void InputResponse::SharedDtor() {
}

void InputResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InputResponse& InputResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InputResponse_yolo_2eproto.base);
  return *internal_default_instance();
}


void InputResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.InputResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obj_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* InputResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 obj_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          obj_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InputResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.InputResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_obj_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.InputResponse)
  return target;
}

size_t InputResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.InputResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_obj_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.InputResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const InputResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InputResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.InputResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.InputResponse)
    MergeFrom(*source);
  }
}

void InputResponse::MergeFrom(const InputResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.InputResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_id() != 0) {
    _internal_set_obj_id(from._internal_obj_id());
  }
}

void InputResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.InputResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputResponse::CopyFrom(const InputResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.InputResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputResponse::IsInitialized() const {
  return true;
}

void InputResponse::InternalSwap(InputResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(obj_id_, other->obj_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InputResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ModelRequest::InitAsDefaultInstance() {
}
class ModelRequest::_Internal {
 public:
};

ModelRequest::ModelRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.ModelRequest)
}
ModelRequest::ModelRequest(const ModelRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      input_ids_(from.input_ids_),
      output_ids_(from.output_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  // @@protoc_insertion_point(copy_constructor:yolo_tf.ModelRequest)
}

void ModelRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ModelRequest_yolo_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ModelRequest::~ModelRequest() {
  // @@protoc_insertion_point(destructor:yolo_tf.ModelRequest)
  SharedDtor();
}

void ModelRequest::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ModelRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ModelRequest& ModelRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ModelRequest_yolo_2eproto.base);
  return *internal_default_instance();
}


void ModelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.ModelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  input_ids_.Clear();
  output_ids_.Clear();
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* ModelRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated uint64 input_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_input_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          _internal_add_input_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint64 output_ids = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt64Parser(_internal_mutable_output_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_output_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.ModelRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connection_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.ModelRequest.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ModelRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.ModelRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 input_ids = 1;
  {
    int byte_size = _input_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          1, _internal_input_ids(), byte_size, target);
    }
  }

  // repeated uint64 output_ids = 2;
  {
    int byte_size = _output_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt64Packed(
          2, _internal_output_ids(), byte_size, target);
    }
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.ModelRequest.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // string connection_id = 4;
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.ModelRequest.connection_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_connection_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.ModelRequest)
  return target;
}

size_t ModelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.ModelRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint64 input_ids = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->input_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _input_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated uint64 output_ids = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt64Size(this->output_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _output_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string connection_id = 4;
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.ModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ModelRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.ModelRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.ModelRequest)
    MergeFrom(*source);
  }
}

void ModelRequest::MergeFrom(const ModelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.ModelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  input_ids_.MergeFrom(from.input_ids_);
  output_ids_.MergeFrom(from.output_ids_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.connection_id().size() > 0) {

    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
}

void ModelRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.ModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelRequest::CopyFrom(const ModelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.ModelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelRequest::IsInitialized() const {
  return true;
}

void ModelRequest::InternalSwap(ModelRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  input_ids_.InternalSwap(&other->input_ids_);
  output_ids_.InternalSwap(&other->output_ids_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ModelResponse::InitAsDefaultInstance() {
}
class ModelResponse::_Internal {
 public:
};

ModelResponse::ModelResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.ModelResponse)
}
ModelResponse::ModelResponse(const ModelResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_id_ = from.obj_id_;
  // @@protoc_insertion_point(copy_constructor:yolo_tf.ModelResponse)
}

void ModelResponse::SharedCtor() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}

ModelResponse::~ModelResponse() {
  // @@protoc_insertion_point(destructor:yolo_tf.ModelResponse)
  SharedDtor();
}

void ModelResponse::SharedDtor() {
}

void ModelResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ModelResponse& ModelResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ModelResponse_yolo_2eproto.base);
  return *internal_default_instance();
}


void ModelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.ModelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obj_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* ModelResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 obj_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          obj_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ModelResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.ModelResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_obj_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.ModelResponse)
  return target;
}

size_t ModelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.ModelResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_obj_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.ModelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ModelResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.ModelResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.ModelResponse)
    MergeFrom(*source);
  }
}

void ModelResponse::MergeFrom(const ModelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.ModelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_id() != 0) {
    _internal_set_obj_id(from._internal_obj_id());
  }
}

void ModelResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.ModelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelResponse::CopyFrom(const ModelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.ModelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelResponse::IsInitialized() const {
  return true;
}

void ModelResponse::InternalSwap(ModelResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(obj_id_, other->obj_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ZeroPadding2DRequest::InitAsDefaultInstance() {
}
class ZeroPadding2DRequest::_Internal {
 public:
};

ZeroPadding2DRequest::ZeroPadding2DRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.ZeroPadding2DRequest)
}
ZeroPadding2DRequest::ZeroPadding2DRequest(const ZeroPadding2DRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  padding_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_padding().empty()) {
    padding_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.padding_);
  }
  data_format_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_data_format().empty()) {
    data_format_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.data_format_);
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  // @@protoc_insertion_point(copy_constructor:yolo_tf.ZeroPadding2DRequest)
}

void ZeroPadding2DRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ZeroPadding2DRequest_yolo_2eproto.base);
  padding_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_format_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ZeroPadding2DRequest::~ZeroPadding2DRequest() {
  // @@protoc_insertion_point(destructor:yolo_tf.ZeroPadding2DRequest)
  SharedDtor();
}

void ZeroPadding2DRequest::SharedDtor() {
  padding_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_format_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ZeroPadding2DRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ZeroPadding2DRequest& ZeroPadding2DRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ZeroPadding2DRequest_yolo_2eproto.base);
  return *internal_default_instance();
}


void ZeroPadding2DRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.ZeroPadding2DRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  padding_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  data_format_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* ZeroPadding2DRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes padding = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_padding();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string data_format = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_data_format();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.ZeroPadding2DRequest.data_format"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.ZeroPadding2DRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connection_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.ZeroPadding2DRequest.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ZeroPadding2DRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.ZeroPadding2DRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes padding = 1;
  if (this->padding().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_padding(), target);
  }

  // string data_format = 2;
  if (this->data_format().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data_format().data(), static_cast<int>(this->_internal_data_format().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.ZeroPadding2DRequest.data_format");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_data_format(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.ZeroPadding2DRequest.name");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_name(), target);
  }

  // string connection_id = 4;
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.ZeroPadding2DRequest.connection_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_connection_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.ZeroPadding2DRequest)
  return target;
}

size_t ZeroPadding2DRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.ZeroPadding2DRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes padding = 1;
  if (this->padding().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_padding());
  }

  // string data_format = 2;
  if (this->data_format().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data_format());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string connection_id = 4;
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ZeroPadding2DRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.ZeroPadding2DRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ZeroPadding2DRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ZeroPadding2DRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.ZeroPadding2DRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.ZeroPadding2DRequest)
    MergeFrom(*source);
  }
}

void ZeroPadding2DRequest::MergeFrom(const ZeroPadding2DRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.ZeroPadding2DRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.padding().size() > 0) {

    padding_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.padding_);
  }
  if (from.data_format().size() > 0) {

    data_format_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.data_format_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.connection_id().size() > 0) {

    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
}

void ZeroPadding2DRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.ZeroPadding2DRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZeroPadding2DRequest::CopyFrom(const ZeroPadding2DRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.ZeroPadding2DRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZeroPadding2DRequest::IsInitialized() const {
  return true;
}

void ZeroPadding2DRequest::InternalSwap(ZeroPadding2DRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  padding_.Swap(&other->padding_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_format_.Swap(&other->data_format_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ZeroPadding2DRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ZeroPadding2DResponse::InitAsDefaultInstance() {
}
class ZeroPadding2DResponse::_Internal {
 public:
};

ZeroPadding2DResponse::ZeroPadding2DResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.ZeroPadding2DResponse)
}
ZeroPadding2DResponse::ZeroPadding2DResponse(const ZeroPadding2DResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_id_ = from.obj_id_;
  // @@protoc_insertion_point(copy_constructor:yolo_tf.ZeroPadding2DResponse)
}

void ZeroPadding2DResponse::SharedCtor() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}

ZeroPadding2DResponse::~ZeroPadding2DResponse() {
  // @@protoc_insertion_point(destructor:yolo_tf.ZeroPadding2DResponse)
  SharedDtor();
}

void ZeroPadding2DResponse::SharedDtor() {
}

void ZeroPadding2DResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ZeroPadding2DResponse& ZeroPadding2DResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ZeroPadding2DResponse_yolo_2eproto.base);
  return *internal_default_instance();
}


void ZeroPadding2DResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.ZeroPadding2DResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obj_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* ZeroPadding2DResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 obj_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          obj_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ZeroPadding2DResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.ZeroPadding2DResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_obj_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.ZeroPadding2DResponse)
  return target;
}

size_t ZeroPadding2DResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.ZeroPadding2DResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_obj_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ZeroPadding2DResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.ZeroPadding2DResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ZeroPadding2DResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ZeroPadding2DResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.ZeroPadding2DResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.ZeroPadding2DResponse)
    MergeFrom(*source);
  }
}

void ZeroPadding2DResponse::MergeFrom(const ZeroPadding2DResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.ZeroPadding2DResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_id() != 0) {
    _internal_set_obj_id(from._internal_obj_id());
  }
}

void ZeroPadding2DResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.ZeroPadding2DResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ZeroPadding2DResponse::CopyFrom(const ZeroPadding2DResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.ZeroPadding2DResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ZeroPadding2DResponse::IsInitialized() const {
  return true;
}

void ZeroPadding2DResponse::InternalSwap(ZeroPadding2DResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(obj_id_, other->obj_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ZeroPadding2DResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Conv2DRequest::InitAsDefaultInstance() {
}
class Conv2DRequest::_Internal {
 public:
};

Conv2DRequest::Conv2DRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.Conv2DRequest)
}
Conv2DRequest::Conv2DRequest(const Conv2DRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pickled_kernel_size_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pickled_kernel_size().empty()) {
    pickled_kernel_size_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pickled_kernel_size_);
  }
  pickled_strides_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pickled_strides().empty()) {
    pickled_strides_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pickled_strides_);
  }
  padding_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_padding().empty()) {
    padding_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.padding_);
  }
  pickled_kernel_regularizer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pickled_kernel_regularizer().empty()) {
    pickled_kernel_regularizer_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pickled_kernel_regularizer_);
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  ::memcpy(&filters_, &from.filters_,
    static_cast<size_t>(reinterpret_cast<char*>(&use_bias_) -
    reinterpret_cast<char*>(&filters_)) + sizeof(use_bias_));
  // @@protoc_insertion_point(copy_constructor:yolo_tf.Conv2DRequest)
}

void Conv2DRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Conv2DRequest_yolo_2eproto.base);
  pickled_kernel_size_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pickled_strides_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  padding_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pickled_kernel_regularizer_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&filters_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_bias_) -
      reinterpret_cast<char*>(&filters_)) + sizeof(use_bias_));
}

Conv2DRequest::~Conv2DRequest() {
  // @@protoc_insertion_point(destructor:yolo_tf.Conv2DRequest)
  SharedDtor();
}

void Conv2DRequest::SharedDtor() {
  pickled_kernel_size_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pickled_strides_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  padding_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pickled_kernel_regularizer_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Conv2DRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Conv2DRequest& Conv2DRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Conv2DRequest_yolo_2eproto.base);
  return *internal_default_instance();
}


void Conv2DRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.Conv2DRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pickled_kernel_size_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pickled_strides_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  padding_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  pickled_kernel_regularizer_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&filters_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&use_bias_) -
      reinterpret_cast<char*>(&filters_)) + sizeof(use_bias_));
  _internal_metadata_.Clear();
}

const char* Conv2DRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 filters = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          filters_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes pickled_kernel_size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_pickled_kernel_size();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes pickled_strides = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_pickled_strides();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string padding = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_padding();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.Conv2DRequest.padding"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool use_bias = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          use_bias_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes pickled_kernel_regularizer = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_pickled_kernel_regularizer();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.Conv2DRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connection_id = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.Conv2DRequest.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Conv2DRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.Conv2DRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 filters = 1;
  if (this->filters() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_filters(), target);
  }

  // bytes pickled_kernel_size = 2;
  if (this->pickled_kernel_size().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_pickled_kernel_size(), target);
  }

  // bytes pickled_strides = 3;
  if (this->pickled_strides().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_pickled_strides(), target);
  }

  // string padding = 4;
  if (this->padding().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_padding().data(), static_cast<int>(this->_internal_padding().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.Conv2DRequest.padding");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_padding(), target);
  }

  // bool use_bias = 5;
  if (this->use_bias() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(5, this->_internal_use_bias(), target);
  }

  // bytes pickled_kernel_regularizer = 6;
  if (this->pickled_kernel_regularizer().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_pickled_kernel_regularizer(), target);
  }

  // string name = 7;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.Conv2DRequest.name");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_name(), target);
  }

  // string connection_id = 8;
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.Conv2DRequest.connection_id");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_connection_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.Conv2DRequest)
  return target;
}

size_t Conv2DRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.Conv2DRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes pickled_kernel_size = 2;
  if (this->pickled_kernel_size().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pickled_kernel_size());
  }

  // bytes pickled_strides = 3;
  if (this->pickled_strides().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pickled_strides());
  }

  // string padding = 4;
  if (this->padding().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_padding());
  }

  // bytes pickled_kernel_regularizer = 6;
  if (this->pickled_kernel_regularizer().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pickled_kernel_regularizer());
  }

  // string name = 7;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string connection_id = 8;
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  // int32 filters = 1;
  if (this->filters() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_filters());
  }

  // bool use_bias = 5;
  if (this->use_bias() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Conv2DRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.Conv2DRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const Conv2DRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Conv2DRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.Conv2DRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.Conv2DRequest)
    MergeFrom(*source);
  }
}

void Conv2DRequest::MergeFrom(const Conv2DRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.Conv2DRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pickled_kernel_size().size() > 0) {

    pickled_kernel_size_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pickled_kernel_size_);
  }
  if (from.pickled_strides().size() > 0) {

    pickled_strides_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pickled_strides_);
  }
  if (from.padding().size() > 0) {

    padding_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.padding_);
  }
  if (from.pickled_kernel_regularizer().size() > 0) {

    pickled_kernel_regularizer_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pickled_kernel_regularizer_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.connection_id().size() > 0) {

    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  if (from.filters() != 0) {
    _internal_set_filters(from._internal_filters());
  }
  if (from.use_bias() != 0) {
    _internal_set_use_bias(from._internal_use_bias());
  }
}

void Conv2DRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.Conv2DRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Conv2DRequest::CopyFrom(const Conv2DRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.Conv2DRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Conv2DRequest::IsInitialized() const {
  return true;
}

void Conv2DRequest::InternalSwap(Conv2DRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  pickled_kernel_size_.Swap(&other->pickled_kernel_size_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pickled_strides_.Swap(&other->pickled_strides_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  padding_.Swap(&other->padding_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pickled_kernel_regularizer_.Swap(&other->pickled_kernel_regularizer_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(filters_, other->filters_);
  swap(use_bias_, other->use_bias_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Conv2DRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Conv2DResponse::InitAsDefaultInstance() {
}
class Conv2DResponse::_Internal {
 public:
};

Conv2DResponse::Conv2DResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.Conv2DResponse)
}
Conv2DResponse::Conv2DResponse(const Conv2DResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_id_ = from.obj_id_;
  // @@protoc_insertion_point(copy_constructor:yolo_tf.Conv2DResponse)
}

void Conv2DResponse::SharedCtor() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}

Conv2DResponse::~Conv2DResponse() {
  // @@protoc_insertion_point(destructor:yolo_tf.Conv2DResponse)
  SharedDtor();
}

void Conv2DResponse::SharedDtor() {
}

void Conv2DResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Conv2DResponse& Conv2DResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Conv2DResponse_yolo_2eproto.base);
  return *internal_default_instance();
}


void Conv2DResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.Conv2DResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obj_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* Conv2DResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 obj_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          obj_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Conv2DResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.Conv2DResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_obj_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.Conv2DResponse)
  return target;
}

size_t Conv2DResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.Conv2DResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_obj_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Conv2DResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.Conv2DResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const Conv2DResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Conv2DResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.Conv2DResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.Conv2DResponse)
    MergeFrom(*source);
  }
}

void Conv2DResponse::MergeFrom(const Conv2DResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.Conv2DResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_id() != 0) {
    _internal_set_obj_id(from._internal_obj_id());
  }
}

void Conv2DResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.Conv2DResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Conv2DResponse::CopyFrom(const Conv2DResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.Conv2DResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Conv2DResponse::IsInitialized() const {
  return true;
}

void Conv2DResponse::InternalSwap(Conv2DResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(obj_id_, other->obj_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Conv2DResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LeakyReluRequest::InitAsDefaultInstance() {
}
class LeakyReluRequest::_Internal {
 public:
};

LeakyReluRequest::LeakyReluRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.LeakyReluRequest)
}
LeakyReluRequest::LeakyReluRequest(const LeakyReluRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  alpha_ = from.alpha_;
  // @@protoc_insertion_point(copy_constructor:yolo_tf.LeakyReluRequest)
}

void LeakyReluRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LeakyReluRequest_yolo_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  alpha_ = 0;
}

LeakyReluRequest::~LeakyReluRequest() {
  // @@protoc_insertion_point(destructor:yolo_tf.LeakyReluRequest)
  SharedDtor();
}

void LeakyReluRequest::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LeakyReluRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LeakyReluRequest& LeakyReluRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LeakyReluRequest_yolo_2eproto.base);
  return *internal_default_instance();
}


void LeakyReluRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.LeakyReluRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  alpha_ = 0;
  _internal_metadata_.Clear();
}

const char* LeakyReluRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float alpha = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          alpha_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.LeakyReluRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connection_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.LeakyReluRequest.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LeakyReluRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.LeakyReluRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float alpha = 1;
  if (!(this->alpha() <= 0 && this->alpha() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_alpha(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.LeakyReluRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string connection_id = 3;
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.LeakyReluRequest.connection_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_connection_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.LeakyReluRequest)
  return target;
}

size_t LeakyReluRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.LeakyReluRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string connection_id = 3;
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  // float alpha = 1;
  if (!(this->alpha() <= 0 && this->alpha() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LeakyReluRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.LeakyReluRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LeakyReluRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LeakyReluRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.LeakyReluRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.LeakyReluRequest)
    MergeFrom(*source);
  }
}

void LeakyReluRequest::MergeFrom(const LeakyReluRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.LeakyReluRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.connection_id().size() > 0) {

    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  if (!(from.alpha() <= 0 && from.alpha() >= 0)) {
    _internal_set_alpha(from._internal_alpha());
  }
}

void LeakyReluRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.LeakyReluRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeakyReluRequest::CopyFrom(const LeakyReluRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.LeakyReluRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeakyReluRequest::IsInitialized() const {
  return true;
}

void LeakyReluRequest::InternalSwap(LeakyReluRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(alpha_, other->alpha_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LeakyReluRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LeakyReluResponse::InitAsDefaultInstance() {
}
class LeakyReluResponse::_Internal {
 public:
};

LeakyReluResponse::LeakyReluResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.LeakyReluResponse)
}
LeakyReluResponse::LeakyReluResponse(const LeakyReluResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_id_ = from.obj_id_;
  // @@protoc_insertion_point(copy_constructor:yolo_tf.LeakyReluResponse)
}

void LeakyReluResponse::SharedCtor() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}

LeakyReluResponse::~LeakyReluResponse() {
  // @@protoc_insertion_point(destructor:yolo_tf.LeakyReluResponse)
  SharedDtor();
}

void LeakyReluResponse::SharedDtor() {
}

void LeakyReluResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LeakyReluResponse& LeakyReluResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LeakyReluResponse_yolo_2eproto.base);
  return *internal_default_instance();
}


void LeakyReluResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.LeakyReluResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obj_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* LeakyReluResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 obj_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          obj_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LeakyReluResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.LeakyReluResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_obj_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.LeakyReluResponse)
  return target;
}

size_t LeakyReluResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.LeakyReluResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_obj_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LeakyReluResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.LeakyReluResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LeakyReluResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LeakyReluResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.LeakyReluResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.LeakyReluResponse)
    MergeFrom(*source);
  }
}

void LeakyReluResponse::MergeFrom(const LeakyReluResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.LeakyReluResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_id() != 0) {
    _internal_set_obj_id(from._internal_obj_id());
  }
}

void LeakyReluResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.LeakyReluResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LeakyReluResponse::CopyFrom(const LeakyReluResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.LeakyReluResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LeakyReluResponse::IsInitialized() const {
  return true;
}

void LeakyReluResponse::InternalSwap(LeakyReluResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(obj_id_, other->obj_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LeakyReluResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddRequest::InitAsDefaultInstance() {
}
class AddRequest::_Internal {
 public:
};

AddRequest::AddRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.AddRequest)
}
AddRequest::AddRequest(const AddRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  // @@protoc_insertion_point(copy_constructor:yolo_tf.AddRequest)
}

void AddRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddRequest_yolo_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddRequest::~AddRequest() {
  // @@protoc_insertion_point(destructor:yolo_tf.AddRequest)
  SharedDtor();
}

void AddRequest::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddRequest& AddRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddRequest_yolo_2eproto.base);
  return *internal_default_instance();
}


void AddRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.AddRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* AddRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.AddRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connection_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.AddRequest.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.AddRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.AddRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string connection_id = 2;
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.AddRequest.connection_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_connection_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.AddRequest)
  return target;
}

size_t AddRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.AddRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string connection_id = 2;
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.AddRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.AddRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.AddRequest)
    MergeFrom(*source);
  }
}

void AddRequest::MergeFrom(const AddRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.AddRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.connection_id().size() > 0) {

    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
}

void AddRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.AddRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddRequest::CopyFrom(const AddRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.AddRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRequest::IsInitialized() const {
  return true;
}

void AddRequest::InternalSwap(AddRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddResponse::InitAsDefaultInstance() {
}
class AddResponse::_Internal {
 public:
};

AddResponse::AddResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.AddResponse)
}
AddResponse::AddResponse(const AddResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_id_ = from.obj_id_;
  // @@protoc_insertion_point(copy_constructor:yolo_tf.AddResponse)
}

void AddResponse::SharedCtor() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}

AddResponse::~AddResponse() {
  // @@protoc_insertion_point(destructor:yolo_tf.AddResponse)
  SharedDtor();
}

void AddResponse::SharedDtor() {
}

void AddResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddResponse& AddResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddResponse_yolo_2eproto.base);
  return *internal_default_instance();
}


void AddResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.AddResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obj_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* AddResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 obj_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          obj_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.AddResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_obj_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.AddResponse)
  return target;
}

size_t AddResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.AddResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_obj_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.AddResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AddResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.AddResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.AddResponse)
    MergeFrom(*source);
  }
}

void AddResponse::MergeFrom(const AddResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.AddResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_id() != 0) {
    _internal_set_obj_id(from._internal_obj_id());
  }
}

void AddResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.AddResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddResponse::CopyFrom(const AddResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.AddResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddResponse::IsInitialized() const {
  return true;
}

void AddResponse::InternalSwap(AddResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(obj_id_, other->obj_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LambdaRequest::InitAsDefaultInstance() {
}
class LambdaRequest::_Internal {
 public:
};

LambdaRequest::LambdaRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.LambdaRequest)
}
LambdaRequest::LambdaRequest(const LambdaRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  expr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_expr().empty()) {
    expr_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.expr_);
  }
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  // @@protoc_insertion_point(copy_constructor:yolo_tf.LambdaRequest)
}

void LambdaRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LambdaRequest_yolo_2eproto.base);
  expr_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

LambdaRequest::~LambdaRequest() {
  // @@protoc_insertion_point(destructor:yolo_tf.LambdaRequest)
  SharedDtor();
}

void LambdaRequest::SharedDtor() {
  expr_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LambdaRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LambdaRequest& LambdaRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LambdaRequest_yolo_2eproto.base);
  return *internal_default_instance();
}


void LambdaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.LambdaRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  expr_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* LambdaRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string expr = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_expr();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.LambdaRequest.expr"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.LambdaRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connection_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.LambdaRequest.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LambdaRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.LambdaRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string expr = 1;
  if (this->expr().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_expr().data(), static_cast<int>(this->_internal_expr().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.LambdaRequest.expr");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_expr(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.LambdaRequest.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string connection_id = 3;
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.LambdaRequest.connection_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_connection_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.LambdaRequest)
  return target;
}

size_t LambdaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.LambdaRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string expr = 1;
  if (this->expr().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_expr());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string connection_id = 3;
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LambdaRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.LambdaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LambdaRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LambdaRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.LambdaRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.LambdaRequest)
    MergeFrom(*source);
  }
}

void LambdaRequest::MergeFrom(const LambdaRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.LambdaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.expr().size() > 0) {

    expr_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.expr_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.connection_id().size() > 0) {

    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
}

void LambdaRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.LambdaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LambdaRequest::CopyFrom(const LambdaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.LambdaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LambdaRequest::IsInitialized() const {
  return true;
}

void LambdaRequest::InternalSwap(LambdaRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  expr_.Swap(&other->expr_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata LambdaRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LambdaResponse::InitAsDefaultInstance() {
}
class LambdaResponse::_Internal {
 public:
};

LambdaResponse::LambdaResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.LambdaResponse)
}
LambdaResponse::LambdaResponse(const LambdaResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_id_ = from.obj_id_;
  // @@protoc_insertion_point(copy_constructor:yolo_tf.LambdaResponse)
}

void LambdaResponse::SharedCtor() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}

LambdaResponse::~LambdaResponse() {
  // @@protoc_insertion_point(destructor:yolo_tf.LambdaResponse)
  SharedDtor();
}

void LambdaResponse::SharedDtor() {
}

void LambdaResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LambdaResponse& LambdaResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LambdaResponse_yolo_2eproto.base);
  return *internal_default_instance();
}


void LambdaResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.LambdaResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obj_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* LambdaResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 obj_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          obj_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LambdaResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.LambdaResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_obj_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.LambdaResponse)
  return target;
}

size_t LambdaResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.LambdaResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_obj_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LambdaResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.LambdaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LambdaResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LambdaResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.LambdaResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.LambdaResponse)
    MergeFrom(*source);
  }
}

void LambdaResponse::MergeFrom(const LambdaResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.LambdaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_id() != 0) {
    _internal_set_obj_id(from._internal_obj_id());
  }
}

void LambdaResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.LambdaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LambdaResponse::CopyFrom(const LambdaResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.LambdaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LambdaResponse::IsInitialized() const {
  return true;
}

void LambdaResponse::InternalSwap(LambdaResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(obj_id_, other->obj_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LambdaResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpSampling2DRequest::InitAsDefaultInstance() {
}
class UpSampling2DRequest::_Internal {
 public:
};

UpSampling2DRequest::UpSampling2DRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.UpSampling2DRequest)
}
UpSampling2DRequest::UpSampling2DRequest(const UpSampling2DRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:yolo_tf.UpSampling2DRequest)
}

void UpSampling2DRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpSampling2DRequest_yolo_2eproto.base);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  size_ = 0u;
}

UpSampling2DRequest::~UpSampling2DRequest() {
  // @@protoc_insertion_point(destructor:yolo_tf.UpSampling2DRequest)
  SharedDtor();
}

void UpSampling2DRequest::SharedDtor() {
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpSampling2DRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpSampling2DRequest& UpSampling2DRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpSampling2DRequest_yolo_2eproto.base);
  return *internal_default_instance();
}


void UpSampling2DRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.UpSampling2DRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  size_ = 0u;
  _internal_metadata_.Clear();
}

const char* UpSampling2DRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 size = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connection_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.UpSampling2DRequest.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpSampling2DRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.UpSampling2DRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 size = 1;
  if (this->size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_size(), target);
  }

  // string connection_id = 2;
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.UpSampling2DRequest.connection_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_connection_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.UpSampling2DRequest)
  return target;
}

size_t UpSampling2DRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.UpSampling2DRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string connection_id = 2;
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  // uint32 size = 1;
  if (this->size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpSampling2DRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.UpSampling2DRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpSampling2DRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpSampling2DRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.UpSampling2DRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.UpSampling2DRequest)
    MergeFrom(*source);
  }
}

void UpSampling2DRequest::MergeFrom(const UpSampling2DRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.UpSampling2DRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.connection_id().size() > 0) {

    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  if (from.size() != 0) {
    _internal_set_size(from._internal_size());
  }
}

void UpSampling2DRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.UpSampling2DRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpSampling2DRequest::CopyFrom(const UpSampling2DRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.UpSampling2DRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpSampling2DRequest::IsInitialized() const {
  return true;
}

void UpSampling2DRequest::InternalSwap(UpSampling2DRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(size_, other->size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpSampling2DRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UpSampling2DResponse::InitAsDefaultInstance() {
}
class UpSampling2DResponse::_Internal {
 public:
};

UpSampling2DResponse::UpSampling2DResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.UpSampling2DResponse)
}
UpSampling2DResponse::UpSampling2DResponse(const UpSampling2DResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_id_ = from.obj_id_;
  // @@protoc_insertion_point(copy_constructor:yolo_tf.UpSampling2DResponse)
}

void UpSampling2DResponse::SharedCtor() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}

UpSampling2DResponse::~UpSampling2DResponse() {
  // @@protoc_insertion_point(destructor:yolo_tf.UpSampling2DResponse)
  SharedDtor();
}

void UpSampling2DResponse::SharedDtor() {
}

void UpSampling2DResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpSampling2DResponse& UpSampling2DResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpSampling2DResponse_yolo_2eproto.base);
  return *internal_default_instance();
}


void UpSampling2DResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.UpSampling2DResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obj_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* UpSampling2DResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 obj_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          obj_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpSampling2DResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.UpSampling2DResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_obj_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.UpSampling2DResponse)
  return target;
}

size_t UpSampling2DResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.UpSampling2DResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_obj_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpSampling2DResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.UpSampling2DResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpSampling2DResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpSampling2DResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.UpSampling2DResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.UpSampling2DResponse)
    MergeFrom(*source);
  }
}

void UpSampling2DResponse::MergeFrom(const UpSampling2DResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.UpSampling2DResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_id() != 0) {
    _internal_set_obj_id(from._internal_obj_id());
  }
}

void UpSampling2DResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.UpSampling2DResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpSampling2DResponse::CopyFrom(const UpSampling2DResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.UpSampling2DResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpSampling2DResponse::IsInitialized() const {
  return true;
}

void UpSampling2DResponse::InternalSwap(UpSampling2DResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(obj_id_, other->obj_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpSampling2DResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ConcatenateRequest::InitAsDefaultInstance() {
}
class ConcatenateRequest::_Internal {
 public:
};

ConcatenateRequest::ConcatenateRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.ConcatenateRequest)
}
ConcatenateRequest::ConcatenateRequest(const ConcatenateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  // @@protoc_insertion_point(copy_constructor:yolo_tf.ConcatenateRequest)
}

void ConcatenateRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ConcatenateRequest_yolo_2eproto.base);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ConcatenateRequest::~ConcatenateRequest() {
  // @@protoc_insertion_point(destructor:yolo_tf.ConcatenateRequest)
  SharedDtor();
}

void ConcatenateRequest::SharedDtor() {
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ConcatenateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConcatenateRequest& ConcatenateRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConcatenateRequest_yolo_2eproto.base);
  return *internal_default_instance();
}


void ConcatenateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.ConcatenateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* ConcatenateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string connection_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.ConcatenateRequest.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConcatenateRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.ConcatenateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string connection_id = 1;
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.ConcatenateRequest.connection_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_connection_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.ConcatenateRequest)
  return target;
}

size_t ConcatenateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.ConcatenateRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string connection_id = 1;
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConcatenateRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.ConcatenateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ConcatenateRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConcatenateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.ConcatenateRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.ConcatenateRequest)
    MergeFrom(*source);
  }
}

void ConcatenateRequest::MergeFrom(const ConcatenateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.ConcatenateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.connection_id().size() > 0) {

    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
}

void ConcatenateRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.ConcatenateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConcatenateRequest::CopyFrom(const ConcatenateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.ConcatenateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConcatenateRequest::IsInitialized() const {
  return true;
}

void ConcatenateRequest::InternalSwap(ConcatenateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata ConcatenateRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ContcatenateResponse::InitAsDefaultInstance() {
}
class ContcatenateResponse::_Internal {
 public:
};

ContcatenateResponse::ContcatenateResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.ContcatenateResponse)
}
ContcatenateResponse::ContcatenateResponse(const ContcatenateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_id_ = from.obj_id_;
  // @@protoc_insertion_point(copy_constructor:yolo_tf.ContcatenateResponse)
}

void ContcatenateResponse::SharedCtor() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}

ContcatenateResponse::~ContcatenateResponse() {
  // @@protoc_insertion_point(destructor:yolo_tf.ContcatenateResponse)
  SharedDtor();
}

void ContcatenateResponse::SharedDtor() {
}

void ContcatenateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ContcatenateResponse& ContcatenateResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ContcatenateResponse_yolo_2eproto.base);
  return *internal_default_instance();
}


void ContcatenateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.ContcatenateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obj_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* ContcatenateResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 obj_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          obj_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ContcatenateResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.ContcatenateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_obj_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.ContcatenateResponse)
  return target;
}

size_t ContcatenateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.ContcatenateResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_obj_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ContcatenateResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.ContcatenateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ContcatenateResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ContcatenateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.ContcatenateResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.ContcatenateResponse)
    MergeFrom(*source);
  }
}

void ContcatenateResponse::MergeFrom(const ContcatenateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.ContcatenateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_id() != 0) {
    _internal_set_obj_id(from._internal_obj_id());
  }
}

void ContcatenateResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.ContcatenateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContcatenateResponse::CopyFrom(const ContcatenateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.ContcatenateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContcatenateResponse::IsInitialized() const {
  return true;
}

void ContcatenateResponse::InternalSwap(ContcatenateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(obj_id_, other->obj_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ContcatenateResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void l2Request::InitAsDefaultInstance() {
}
class l2Request::_Internal {
 public:
};

l2Request::l2Request()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.l2Request)
}
l2Request::l2Request(const l2Request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  l_ = from.l_;
  // @@protoc_insertion_point(copy_constructor:yolo_tf.l2Request)
}

void l2Request::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_l2Request_yolo_2eproto.base);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  l_ = 0;
}

l2Request::~l2Request() {
  // @@protoc_insertion_point(destructor:yolo_tf.l2Request)
  SharedDtor();
}

void l2Request::SharedDtor() {
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void l2Request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const l2Request& l2Request::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_l2Request_yolo_2eproto.base);
  return *internal_default_instance();
}


void l2Request::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.l2Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  l_ = 0;
  _internal_metadata_.Clear();
}

const char* l2Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float l = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          l_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // string connection_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.l2Request.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* l2Request::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.l2Request)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float l = 1;
  if (!(this->l() <= 0 && this->l() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_l(), target);
  }

  // string connection_id = 2;
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.l2Request.connection_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_connection_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.l2Request)
  return target;
}

size_t l2Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.l2Request)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string connection_id = 2;
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  // float l = 1;
  if (!(this->l() <= 0 && this->l() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void l2Request::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.l2Request)
  GOOGLE_DCHECK_NE(&from, this);
  const l2Request* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<l2Request>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.l2Request)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.l2Request)
    MergeFrom(*source);
  }
}

void l2Request::MergeFrom(const l2Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.l2Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.connection_id().size() > 0) {

    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  if (!(from.l() <= 0 && from.l() >= 0)) {
    _internal_set_l(from._internal_l());
  }
}

void l2Request::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.l2Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void l2Request::CopyFrom(const l2Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.l2Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool l2Request::IsInitialized() const {
  return true;
}

void l2Request::InternalSwap(l2Request* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(l_, other->l_);
}

::PROTOBUF_NAMESPACE_ID::Metadata l2Request::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void l2Response::InitAsDefaultInstance() {
}
class l2Response::_Internal {
 public:
};

l2Response::l2Response()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.l2Response)
}
l2Response::l2Response(const l2Response& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pickled_l2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pickled_l2().empty()) {
    pickled_l2_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pickled_l2_);
  }
  // @@protoc_insertion_point(copy_constructor:yolo_tf.l2Response)
}

void l2Response::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_l2Response_yolo_2eproto.base);
  pickled_l2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

l2Response::~l2Response() {
  // @@protoc_insertion_point(destructor:yolo_tf.l2Response)
  SharedDtor();
}

void l2Response::SharedDtor() {
  pickled_l2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void l2Response::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const l2Response& l2Response::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_l2Response_yolo_2eproto.base);
  return *internal_default_instance();
}


void l2Response::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.l2Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pickled_l2_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* l2Response::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes pickled_l2 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_pickled_l2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* l2Response::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.l2Response)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes pickled_l2 = 1;
  if (this->pickled_l2().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_pickled_l2(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.l2Response)
  return target;
}

size_t l2Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.l2Response)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes pickled_l2 = 1;
  if (this->pickled_l2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pickled_l2());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void l2Response::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.l2Response)
  GOOGLE_DCHECK_NE(&from, this);
  const l2Response* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<l2Response>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.l2Response)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.l2Response)
    MergeFrom(*source);
  }
}

void l2Response::MergeFrom(const l2Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.l2Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pickled_l2().size() > 0) {

    pickled_l2_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pickled_l2_);
  }
}

void l2Response::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.l2Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void l2Response::CopyFrom(const l2Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.l2Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool l2Response::IsInitialized() const {
  return true;
}

void l2Response::InternalSwap(l2Response* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  pickled_l2_.Swap(&other->pickled_l2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata l2Response::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ImageResizeRequest::InitAsDefaultInstance() {
}
class ImageResizeRequest::_Internal {
 public:
};

ImageResizeRequest::ImageResizeRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.ImageResizeRequest)
}
ImageResizeRequest::ImageResizeRequest(const ImageResizeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      size_(from.size_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  obj_id_ = from.obj_id_;
  // @@protoc_insertion_point(copy_constructor:yolo_tf.ImageResizeRequest)
}

void ImageResizeRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ImageResizeRequest_yolo_2eproto.base);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  obj_id_ = PROTOBUF_ULONGLONG(0);
}

ImageResizeRequest::~ImageResizeRequest() {
  // @@protoc_insertion_point(destructor:yolo_tf.ImageResizeRequest)
  SharedDtor();
}

void ImageResizeRequest::SharedDtor() {
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ImageResizeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImageResizeRequest& ImageResizeRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImageResizeRequest_yolo_2eproto.base);
  return *internal_default_instance();
}


void ImageResizeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.ImageResizeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  size_.Clear();
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  obj_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* ImageResizeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 obj_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          obj_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 size = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_size(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_size(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connection_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.ImageResizeRequest.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImageResizeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.ImageResizeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_obj_id(), target);
  }

  // repeated uint32 size = 2;
  {
    int byte_size = _size_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          2, _internal_size(), byte_size, target);
    }
  }

  // string connection_id = 3;
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.ImageResizeRequest.connection_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_connection_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.ImageResizeRequest)
  return target;
}

size_t ImageResizeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.ImageResizeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 size = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->size_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _size_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string connection_id = 3;
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_obj_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImageResizeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.ImageResizeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageResizeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImageResizeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.ImageResizeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.ImageResizeRequest)
    MergeFrom(*source);
  }
}

void ImageResizeRequest::MergeFrom(const ImageResizeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.ImageResizeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  size_.MergeFrom(from.size_);
  if (from.connection_id().size() > 0) {

    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  if (from.obj_id() != 0) {
    _internal_set_obj_id(from._internal_obj_id());
  }
}

void ImageResizeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.ImageResizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageResizeRequest::CopyFrom(const ImageResizeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.ImageResizeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageResizeRequest::IsInitialized() const {
  return true;
}

void ImageResizeRequest::InternalSwap(ImageResizeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  size_.InternalSwap(&other->size_);
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(obj_id_, other->obj_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImageResizeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ImageResizeResponse::InitAsDefaultInstance() {
}
class ImageResizeResponse::_Internal {
 public:
};

ImageResizeResponse::ImageResizeResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.ImageResizeResponse)
}
ImageResizeResponse::ImageResizeResponse(const ImageResizeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_id_ = from.obj_id_;
  // @@protoc_insertion_point(copy_constructor:yolo_tf.ImageResizeResponse)
}

void ImageResizeResponse::SharedCtor() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}

ImageResizeResponse::~ImageResizeResponse() {
  // @@protoc_insertion_point(destructor:yolo_tf.ImageResizeResponse)
  SharedDtor();
}

void ImageResizeResponse::SharedDtor() {
}

void ImageResizeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ImageResizeResponse& ImageResizeResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ImageResizeResponse_yolo_2eproto.base);
  return *internal_default_instance();
}


void ImageResizeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.ImageResizeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obj_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* ImageResizeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 obj_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          obj_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ImageResizeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.ImageResizeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_obj_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.ImageResizeResponse)
  return target;
}

size_t ImageResizeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.ImageResizeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_obj_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImageResizeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.ImageResizeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageResizeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ImageResizeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.ImageResizeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.ImageResizeResponse)
    MergeFrom(*source);
  }
}

void ImageResizeResponse::MergeFrom(const ImageResizeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.ImageResizeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_id() != 0) {
    _internal_set_obj_id(from._internal_obj_id());
  }
}

void ImageResizeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.ImageResizeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageResizeResponse::CopyFrom(const ImageResizeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.ImageResizeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageResizeResponse::IsInitialized() const {
  return true;
}

void ImageResizeResponse::InternalSwap(ImageResizeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(obj_id_, other->obj_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ImageResizeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TensorShapeRequest::InitAsDefaultInstance() {
}
class TensorShapeRequest::_Internal {
 public:
};

TensorShapeRequest::TensorShapeRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.TensorShapeRequest)
}
TensorShapeRequest::TensorShapeRequest(const TensorShapeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  ::memcpy(&obj_id_, &from.obj_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_) -
    reinterpret_cast<char*>(&obj_id_)) + sizeof(end_));
  // @@protoc_insertion_point(copy_constructor:yolo_tf.TensorShapeRequest)
}

void TensorShapeRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TensorShapeRequest_yolo_2eproto.base);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&obj_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_) -
      reinterpret_cast<char*>(&obj_id_)) + sizeof(end_));
}

TensorShapeRequest::~TensorShapeRequest() {
  // @@protoc_insertion_point(destructor:yolo_tf.TensorShapeRequest)
  SharedDtor();
}

void TensorShapeRequest::SharedDtor() {
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TensorShapeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TensorShapeRequest& TensorShapeRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TensorShapeRequest_yolo_2eproto.base);
  return *internal_default_instance();
}


void TensorShapeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.TensorShapeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&obj_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_) -
      reinterpret_cast<char*>(&obj_id_)) + sizeof(end_));
  _internal_metadata_.Clear();
}

const char* TensorShapeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 obj_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          obj_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 start = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          start_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 end = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          end_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connection_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.TensorShapeRequest.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TensorShapeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.TensorShapeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_obj_id(), target);
  }

  // uint32 start = 2;
  if (this->start() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_start(), target);
  }

  // uint32 end = 3;
  if (this->end() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_end(), target);
  }

  // string connection_id = 4;
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.TensorShapeRequest.connection_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_connection_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.TensorShapeRequest)
  return target;
}

size_t TensorShapeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.TensorShapeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string connection_id = 4;
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_obj_id());
  }

  // uint32 start = 2;
  if (this->start() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_start());
  }

  // uint32 end = 3;
  if (this->end() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_end());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TensorShapeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.TensorShapeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TensorShapeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TensorShapeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.TensorShapeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.TensorShapeRequest)
    MergeFrom(*source);
  }
}

void TensorShapeRequest::MergeFrom(const TensorShapeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.TensorShapeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.connection_id().size() > 0) {

    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  if (from.obj_id() != 0) {
    _internal_set_obj_id(from._internal_obj_id());
  }
  if (from.start() != 0) {
    _internal_set_start(from._internal_start());
  }
  if (from.end() != 0) {
    _internal_set_end(from._internal_end());
  }
}

void TensorShapeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.TensorShapeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TensorShapeRequest::CopyFrom(const TensorShapeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.TensorShapeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TensorShapeRequest::IsInitialized() const {
  return true;
}

void TensorShapeRequest::InternalSwap(TensorShapeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(obj_id_, other->obj_id_);
  swap(start_, other->start_);
  swap(end_, other->end_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TensorShapeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TensorShapeResponse::InitAsDefaultInstance() {
}
class TensorShapeResponse::_Internal {
 public:
};

TensorShapeResponse::TensorShapeResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.TensorShapeResponse)
}
TensorShapeResponse::TensorShapeResponse(const TensorShapeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      shape_(from.shape_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_id_ = from.obj_id_;
  // @@protoc_insertion_point(copy_constructor:yolo_tf.TensorShapeResponse)
}

void TensorShapeResponse::SharedCtor() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}

TensorShapeResponse::~TensorShapeResponse() {
  // @@protoc_insertion_point(destructor:yolo_tf.TensorShapeResponse)
  SharedDtor();
}

void TensorShapeResponse::SharedDtor() {
}

void TensorShapeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TensorShapeResponse& TensorShapeResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TensorShapeResponse_yolo_2eproto.base);
  return *internal_default_instance();
}


void TensorShapeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.TensorShapeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  shape_.Clear();
  obj_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* TensorShapeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 obj_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          obj_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 shape = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_shape(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_shape(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TensorShapeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.TensorShapeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_obj_id(), target);
  }

  // repeated int32 shape = 2;
  {
    int byte_size = _shape_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_shape(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.TensorShapeResponse)
  return target;
}

size_t TensorShapeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.TensorShapeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 shape = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->shape_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _shape_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_obj_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TensorShapeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.TensorShapeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TensorShapeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TensorShapeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.TensorShapeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.TensorShapeResponse)
    MergeFrom(*source);
  }
}

void TensorShapeResponse::MergeFrom(const TensorShapeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.TensorShapeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  shape_.MergeFrom(from.shape_);
  if (from.obj_id() != 0) {
    _internal_set_obj_id(from._internal_obj_id());
  }
}

void TensorShapeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.TensorShapeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TensorShapeResponse::CopyFrom(const TensorShapeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.TensorShapeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TensorShapeResponse::IsInitialized() const {
  return true;
}

void TensorShapeResponse::InternalSwap(TensorShapeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  shape_.InternalSwap(&other->shape_);
  swap(obj_id_, other->obj_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TensorShapeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LoadWeightsRequest::InitAsDefaultInstance() {
}
class LoadWeightsRequest::_Internal {
 public:
};

LoadWeightsRequest::LoadWeightsRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.LoadWeightsRequest)
}
LoadWeightsRequest::LoadWeightsRequest(const LoadWeightsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  weights_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_weights_path().empty()) {
    weights_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.weights_path_);
  }
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  model_obj_id_ = from.model_obj_id_;
  // @@protoc_insertion_point(copy_constructor:yolo_tf.LoadWeightsRequest)
}

void LoadWeightsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LoadWeightsRequest_yolo_2eproto.base);
  weights_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_obj_id_ = PROTOBUF_ULONGLONG(0);
}

LoadWeightsRequest::~LoadWeightsRequest() {
  // @@protoc_insertion_point(destructor:yolo_tf.LoadWeightsRequest)
  SharedDtor();
}

void LoadWeightsRequest::SharedDtor() {
  weights_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void LoadWeightsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoadWeightsRequest& LoadWeightsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoadWeightsRequest_yolo_2eproto.base);
  return *internal_default_instance();
}


void LoadWeightsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.LoadWeightsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  weights_path_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_obj_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* LoadWeightsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 model_obj_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          model_obj_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string weights_path = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_weights_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.LoadWeightsRequest.weights_path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connection_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.LoadWeightsRequest.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoadWeightsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.LoadWeightsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 model_obj_id = 1;
  if (this->model_obj_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_model_obj_id(), target);
  }

  // string weights_path = 2;
  if (this->weights_path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_weights_path().data(), static_cast<int>(this->_internal_weights_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.LoadWeightsRequest.weights_path");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_weights_path(), target);
  }

  // string connection_id = 3;
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.LoadWeightsRequest.connection_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_connection_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.LoadWeightsRequest)
  return target;
}

size_t LoadWeightsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.LoadWeightsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string weights_path = 2;
  if (this->weights_path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_weights_path());
  }

  // string connection_id = 3;
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  // uint64 model_obj_id = 1;
  if (this->model_obj_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_model_obj_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoadWeightsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.LoadWeightsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadWeightsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoadWeightsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.LoadWeightsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.LoadWeightsRequest)
    MergeFrom(*source);
  }
}

void LoadWeightsRequest::MergeFrom(const LoadWeightsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.LoadWeightsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.weights_path().size() > 0) {

    weights_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.weights_path_);
  }
  if (from.connection_id().size() > 0) {

    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  if (from.model_obj_id() != 0) {
    _internal_set_model_obj_id(from._internal_model_obj_id());
  }
}

void LoadWeightsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.LoadWeightsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadWeightsRequest::CopyFrom(const LoadWeightsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.LoadWeightsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadWeightsRequest::IsInitialized() const {
  return true;
}

void LoadWeightsRequest::InternalSwap(LoadWeightsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  weights_path_.Swap(&other->weights_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(model_obj_id_, other->model_obj_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadWeightsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LoadWeightsResponse::InitAsDefaultInstance() {
}
class LoadWeightsResponse::_Internal {
 public:
};

LoadWeightsResponse::LoadWeightsResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.LoadWeightsResponse)
}
LoadWeightsResponse::LoadWeightsResponse(const LoadWeightsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_id_ = from.obj_id_;
  // @@protoc_insertion_point(copy_constructor:yolo_tf.LoadWeightsResponse)
}

void LoadWeightsResponse::SharedCtor() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}

LoadWeightsResponse::~LoadWeightsResponse() {
  // @@protoc_insertion_point(destructor:yolo_tf.LoadWeightsResponse)
  SharedDtor();
}

void LoadWeightsResponse::SharedDtor() {
}

void LoadWeightsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoadWeightsResponse& LoadWeightsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LoadWeightsResponse_yolo_2eproto.base);
  return *internal_default_instance();
}


void LoadWeightsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.LoadWeightsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obj_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* LoadWeightsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 obj_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          obj_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LoadWeightsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.LoadWeightsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_obj_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.LoadWeightsResponse)
  return target;
}

size_t LoadWeightsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.LoadWeightsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_obj_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoadWeightsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.LoadWeightsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LoadWeightsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LoadWeightsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.LoadWeightsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.LoadWeightsResponse)
    MergeFrom(*source);
  }
}

void LoadWeightsResponse::MergeFrom(const LoadWeightsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.LoadWeightsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_id() != 0) {
    _internal_set_obj_id(from._internal_obj_id());
  }
}

void LoadWeightsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.LoadWeightsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoadWeightsResponse::CopyFrom(const LoadWeightsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.LoadWeightsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoadWeightsResponse::IsInitialized() const {
  return true;
}

void LoadWeightsResponse::InternalSwap(LoadWeightsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(obj_id_, other->obj_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LoadWeightsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ExpectPartialRequest::InitAsDefaultInstance() {
}
class ExpectPartialRequest::_Internal {
 public:
};

ExpectPartialRequest::ExpectPartialRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.ExpectPartialRequest)
}
ExpectPartialRequest::ExpectPartialRequest(const ExpectPartialRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  obj_id_ = from.obj_id_;
  // @@protoc_insertion_point(copy_constructor:yolo_tf.ExpectPartialRequest)
}

void ExpectPartialRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ExpectPartialRequest_yolo_2eproto.base);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  obj_id_ = PROTOBUF_ULONGLONG(0);
}

ExpectPartialRequest::~ExpectPartialRequest() {
  // @@protoc_insertion_point(destructor:yolo_tf.ExpectPartialRequest)
  SharedDtor();
}

void ExpectPartialRequest::SharedDtor() {
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ExpectPartialRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExpectPartialRequest& ExpectPartialRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExpectPartialRequest_yolo_2eproto.base);
  return *internal_default_instance();
}


void ExpectPartialRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.ExpectPartialRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  obj_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* ExpectPartialRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 obj_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          obj_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connection_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.ExpectPartialRequest.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExpectPartialRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.ExpectPartialRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_obj_id(), target);
  }

  // string connection_id = 2;
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.ExpectPartialRequest.connection_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_connection_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.ExpectPartialRequest)
  return target;
}

size_t ExpectPartialRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.ExpectPartialRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string connection_id = 2;
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_obj_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExpectPartialRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.ExpectPartialRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExpectPartialRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExpectPartialRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.ExpectPartialRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.ExpectPartialRequest)
    MergeFrom(*source);
  }
}

void ExpectPartialRequest::MergeFrom(const ExpectPartialRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.ExpectPartialRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.connection_id().size() > 0) {

    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  if (from.obj_id() != 0) {
    _internal_set_obj_id(from._internal_obj_id());
  }
}

void ExpectPartialRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.ExpectPartialRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExpectPartialRequest::CopyFrom(const ExpectPartialRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.ExpectPartialRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExpectPartialRequest::IsInitialized() const {
  return true;
}

void ExpectPartialRequest::InternalSwap(ExpectPartialRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(obj_id_, other->obj_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExpectPartialRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ExpectPartialResponse::InitAsDefaultInstance() {
}
class ExpectPartialResponse::_Internal {
 public:
};

ExpectPartialResponse::ExpectPartialResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.ExpectPartialResponse)
}
ExpectPartialResponse::ExpectPartialResponse(const ExpectPartialResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:yolo_tf.ExpectPartialResponse)
}

void ExpectPartialResponse::SharedCtor() {
}

ExpectPartialResponse::~ExpectPartialResponse() {
  // @@protoc_insertion_point(destructor:yolo_tf.ExpectPartialResponse)
  SharedDtor();
}

void ExpectPartialResponse::SharedDtor() {
}

void ExpectPartialResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExpectPartialResponse& ExpectPartialResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExpectPartialResponse_yolo_2eproto.base);
  return *internal_default_instance();
}


void ExpectPartialResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.ExpectPartialResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* ExpectPartialResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExpectPartialResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.ExpectPartialResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.ExpectPartialResponse)
  return target;
}

size_t ExpectPartialResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.ExpectPartialResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExpectPartialResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.ExpectPartialResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ExpectPartialResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExpectPartialResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.ExpectPartialResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.ExpectPartialResponse)
    MergeFrom(*source);
  }
}

void ExpectPartialResponse::MergeFrom(const ExpectPartialResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.ExpectPartialResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ExpectPartialResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.ExpectPartialResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExpectPartialResponse::CopyFrom(const ExpectPartialResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.ExpectPartialResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExpectPartialResponse::IsInitialized() const {
  return true;
}

void ExpectPartialResponse::InternalSwap(ExpectPartialResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExpectPartialResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DivideRequest::InitAsDefaultInstance() {
}
class DivideRequest::_Internal {
 public:
};

DivideRequest::DivideRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.DivideRequest)
}
DivideRequest::DivideRequest(const DivideRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  ::memcpy(&obj_id_, &from.obj_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&divisor_) -
    reinterpret_cast<char*>(&obj_id_)) + sizeof(divisor_));
  // @@protoc_insertion_point(copy_constructor:yolo_tf.DivideRequest)
}

void DivideRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DivideRequest_yolo_2eproto.base);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&obj_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&divisor_) -
      reinterpret_cast<char*>(&obj_id_)) + sizeof(divisor_));
}

DivideRequest::~DivideRequest() {
  // @@protoc_insertion_point(destructor:yolo_tf.DivideRequest)
  SharedDtor();
}

void DivideRequest::SharedDtor() {
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DivideRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DivideRequest& DivideRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DivideRequest_yolo_2eproto.base);
  return *internal_default_instance();
}


void DivideRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.DivideRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&obj_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&divisor_) -
      reinterpret_cast<char*>(&obj_id_)) + sizeof(divisor_));
  _internal_metadata_.Clear();
}

const char* DivideRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 obj_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          obj_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 divisor = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          divisor_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connection_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.DivideRequest.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DivideRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.DivideRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_obj_id(), target);
  }

  // int32 divisor = 2;
  if (this->divisor() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_divisor(), target);
  }

  // string connection_id = 3;
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.DivideRequest.connection_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_connection_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.DivideRequest)
  return target;
}

size_t DivideRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.DivideRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string connection_id = 3;
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_obj_id());
  }

  // int32 divisor = 2;
  if (this->divisor() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_divisor());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DivideRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.DivideRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DivideRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DivideRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.DivideRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.DivideRequest)
    MergeFrom(*source);
  }
}

void DivideRequest::MergeFrom(const DivideRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.DivideRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.connection_id().size() > 0) {

    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  if (from.obj_id() != 0) {
    _internal_set_obj_id(from._internal_obj_id());
  }
  if (from.divisor() != 0) {
    _internal_set_divisor(from._internal_divisor());
  }
}

void DivideRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.DivideRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DivideRequest::CopyFrom(const DivideRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.DivideRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DivideRequest::IsInitialized() const {
  return true;
}

void DivideRequest::InternalSwap(DivideRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(obj_id_, other->obj_id_);
  swap(divisor_, other->divisor_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DivideRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DivideResponse::InitAsDefaultInstance() {
}
class DivideResponse::_Internal {
 public:
};

DivideResponse::DivideResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.DivideResponse)
}
DivideResponse::DivideResponse(const DivideResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_id_ = from.obj_id_;
  // @@protoc_insertion_point(copy_constructor:yolo_tf.DivideResponse)
}

void DivideResponse::SharedCtor() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}

DivideResponse::~DivideResponse() {
  // @@protoc_insertion_point(destructor:yolo_tf.DivideResponse)
  SharedDtor();
}

void DivideResponse::SharedDtor() {
}

void DivideResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DivideResponse& DivideResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DivideResponse_yolo_2eproto.base);
  return *internal_default_instance();
}


void DivideResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.DivideResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obj_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* DivideResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 obj_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          obj_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DivideResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.DivideResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_obj_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.DivideResponse)
  return target;
}

size_t DivideResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.DivideResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_obj_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DivideResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.DivideResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DivideResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DivideResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.DivideResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.DivideResponse)
    MergeFrom(*source);
  }
}

void DivideResponse::MergeFrom(const DivideResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.DivideResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_id() != 0) {
    _internal_set_obj_id(from._internal_obj_id());
  }
}

void DivideResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.DivideResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DivideResponse::CopyFrom(const DivideResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.DivideResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DivideResponse::IsInitialized() const {
  return true;
}

void DivideResponse::InternalSwap(DivideResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(obj_id_, other->obj_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DivideResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IndexingRequest::InitAsDefaultInstance() {
}
class IndexingRequest::_Internal {
 public:
};

IndexingRequest::IndexingRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.IndexingRequest)
}
IndexingRequest::IndexingRequest(const IndexingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      indices_(from.indices_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  obj_id_ = from.obj_id_;
  // @@protoc_insertion_point(copy_constructor:yolo_tf.IndexingRequest)
}

void IndexingRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IndexingRequest_yolo_2eproto.base);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  obj_id_ = PROTOBUF_ULONGLONG(0);
}

IndexingRequest::~IndexingRequest() {
  // @@protoc_insertion_point(destructor:yolo_tf.IndexingRequest)
  SharedDtor();
}

void IndexingRequest::SharedDtor() {
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void IndexingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IndexingRequest& IndexingRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IndexingRequest_yolo_2eproto.base);
  return *internal_default_instance();
}


void IndexingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.IndexingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  indices_.Clear();
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  obj_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* IndexingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 obj_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          obj_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated uint32 indices = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedUInt32Parser(_internal_mutable_indices(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_indices(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connection_id = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.IndexingRequest.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IndexingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.IndexingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_obj_id(), target);
  }

  // repeated uint32 indices = 2;
  {
    int byte_size = _indices_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteUInt32Packed(
          2, _internal_indices(), byte_size, target);
    }
  }

  // string connection_id = 3;
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.IndexingRequest.connection_id");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_connection_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.IndexingRequest)
  return target;
}

size_t IndexingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.IndexingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated uint32 indices = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      UInt32Size(this->indices_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _indices_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string connection_id = 3;
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_obj_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IndexingRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.IndexingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const IndexingRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IndexingRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.IndexingRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.IndexingRequest)
    MergeFrom(*source);
  }
}

void IndexingRequest::MergeFrom(const IndexingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.IndexingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  indices_.MergeFrom(from.indices_);
  if (from.connection_id().size() > 0) {

    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  if (from.obj_id() != 0) {
    _internal_set_obj_id(from._internal_obj_id());
  }
}

void IndexingRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.IndexingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexingRequest::CopyFrom(const IndexingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.IndexingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndexingRequest::IsInitialized() const {
  return true;
}

void IndexingRequest::InternalSwap(IndexingRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  indices_.InternalSwap(&other->indices_);
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(obj_id_, other->obj_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IndexingRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void IndexingResponse::InitAsDefaultInstance() {
}
class IndexingResponse::_Internal {
 public:
};

IndexingResponse::IndexingResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.IndexingResponse)
}
IndexingResponse::IndexingResponse(const IndexingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pickled_result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pickled_result().empty()) {
    pickled_result_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pickled_result_);
  }
  // @@protoc_insertion_point(copy_constructor:yolo_tf.IndexingResponse)
}

void IndexingResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IndexingResponse_yolo_2eproto.base);
  pickled_result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

IndexingResponse::~IndexingResponse() {
  // @@protoc_insertion_point(destructor:yolo_tf.IndexingResponse)
  SharedDtor();
}

void IndexingResponse::SharedDtor() {
  pickled_result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void IndexingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IndexingResponse& IndexingResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IndexingResponse_yolo_2eproto.base);
  return *internal_default_instance();
}


void IndexingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.IndexingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pickled_result_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* IndexingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes pickled_result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_pickled_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IndexingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.IndexingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes pickled_result = 1;
  if (this->pickled_result().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_pickled_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.IndexingResponse)
  return target;
}

size_t IndexingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.IndexingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes pickled_result = 1;
  if (this->pickled_result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pickled_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IndexingResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.IndexingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const IndexingResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IndexingResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.IndexingResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.IndexingResponse)
    MergeFrom(*source);
  }
}

void IndexingResponse::MergeFrom(const IndexingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.IndexingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pickled_result().size() > 0) {

    pickled_result_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pickled_result_);
  }
}

void IndexingResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.IndexingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IndexingResponse::CopyFrom(const IndexingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.IndexingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IndexingResponse::IsInitialized() const {
  return true;
}

void IndexingResponse::InternalSwap(IndexingResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  pickled_result_.Swap(&other->pickled_result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata IndexingResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TensorToNumpyRequest::InitAsDefaultInstance() {
}
class TensorToNumpyRequest::_Internal {
 public:
};

TensorToNumpyRequest::TensorToNumpyRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.TensorToNumpyRequest)
}
TensorToNumpyRequest::TensorToNumpyRequest(const TensorToNumpyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  obj_id_ = from.obj_id_;
  // @@protoc_insertion_point(copy_constructor:yolo_tf.TensorToNumpyRequest)
}

void TensorToNumpyRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TensorToNumpyRequest_yolo_2eproto.base);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  obj_id_ = PROTOBUF_ULONGLONG(0);
}

TensorToNumpyRequest::~TensorToNumpyRequest() {
  // @@protoc_insertion_point(destructor:yolo_tf.TensorToNumpyRequest)
  SharedDtor();
}

void TensorToNumpyRequest::SharedDtor() {
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TensorToNumpyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TensorToNumpyRequest& TensorToNumpyRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TensorToNumpyRequest_yolo_2eproto.base);
  return *internal_default_instance();
}


void TensorToNumpyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.TensorToNumpyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  obj_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* TensorToNumpyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 obj_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          obj_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connection_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.TensorToNumpyRequest.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TensorToNumpyRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.TensorToNumpyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_obj_id(), target);
  }

  // string connection_id = 2;
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.TensorToNumpyRequest.connection_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_connection_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.TensorToNumpyRequest)
  return target;
}

size_t TensorToNumpyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.TensorToNumpyRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string connection_id = 2;
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_obj_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TensorToNumpyRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.TensorToNumpyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TensorToNumpyRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TensorToNumpyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.TensorToNumpyRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.TensorToNumpyRequest)
    MergeFrom(*source);
  }
}

void TensorToNumpyRequest::MergeFrom(const TensorToNumpyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.TensorToNumpyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.connection_id().size() > 0) {

    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  if (from.obj_id() != 0) {
    _internal_set_obj_id(from._internal_obj_id());
  }
}

void TensorToNumpyRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.TensorToNumpyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TensorToNumpyRequest::CopyFrom(const TensorToNumpyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.TensorToNumpyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TensorToNumpyRequest::IsInitialized() const {
  return true;
}

void TensorToNumpyRequest::InternalSwap(TensorToNumpyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(obj_id_, other->obj_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TensorToNumpyRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TensorToNumPyResponse::InitAsDefaultInstance() {
}
class TensorToNumPyResponse::_Internal {
 public:
};

TensorToNumPyResponse::TensorToNumPyResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.TensorToNumPyResponse)
}
TensorToNumPyResponse::TensorToNumPyResponse(const TensorToNumPyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pickled_array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pickled_array().empty()) {
    pickled_array_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pickled_array_);
  }
  // @@protoc_insertion_point(copy_constructor:yolo_tf.TensorToNumPyResponse)
}

void TensorToNumPyResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TensorToNumPyResponse_yolo_2eproto.base);
  pickled_array_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

TensorToNumPyResponse::~TensorToNumPyResponse() {
  // @@protoc_insertion_point(destructor:yolo_tf.TensorToNumPyResponse)
  SharedDtor();
}

void TensorToNumPyResponse::SharedDtor() {
  pickled_array_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TensorToNumPyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TensorToNumPyResponse& TensorToNumPyResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TensorToNumPyResponse_yolo_2eproto.base);
  return *internal_default_instance();
}


void TensorToNumPyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.TensorToNumPyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pickled_array_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* TensorToNumPyResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes pickled_array = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_pickled_array();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TensorToNumPyResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.TensorToNumPyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes pickled_array = 1;
  if (this->pickled_array().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_pickled_array(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.TensorToNumPyResponse)
  return target;
}

size_t TensorToNumPyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.TensorToNumPyResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes pickled_array = 1;
  if (this->pickled_array().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_pickled_array());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TensorToNumPyResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.TensorToNumPyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TensorToNumPyResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TensorToNumPyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.TensorToNumPyResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.TensorToNumPyResponse)
    MergeFrom(*source);
  }
}

void TensorToNumPyResponse::MergeFrom(const TensorToNumPyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.TensorToNumPyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.pickled_array().size() > 0) {

    pickled_array_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.pickled_array_);
  }
}

void TensorToNumPyResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.TensorToNumPyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TensorToNumPyResponse::CopyFrom(const TensorToNumPyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.TensorToNumPyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TensorToNumPyResponse::IsInitialized() const {
  return true;
}

void TensorToNumPyResponse::InternalSwap(TensorToNumPyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  pickled_array_.Swap(&other->pickled_array_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata TensorToNumPyResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetObjectRequest::InitAsDefaultInstance() {
}
class GetObjectRequest::_Internal {
 public:
};

GetObjectRequest::GetObjectRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.GetObjectRequest)
}
GetObjectRequest::GetObjectRequest(const GetObjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  obj_id_ = from.obj_id_;
  // @@protoc_insertion_point(copy_constructor:yolo_tf.GetObjectRequest)
}

void GetObjectRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetObjectRequest_yolo_2eproto.base);
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  obj_id_ = PROTOBUF_ULONGLONG(0);
}

GetObjectRequest::~GetObjectRequest() {
  // @@protoc_insertion_point(destructor:yolo_tf.GetObjectRequest)
  SharedDtor();
}

void GetObjectRequest::SharedDtor() {
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetObjectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetObjectRequest& GetObjectRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetObjectRequest_yolo_2eproto.base);
  return *internal_default_instance();
}


void GetObjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.GetObjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  obj_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* GetObjectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 obj_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          obj_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connection_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.GetObjectRequest.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetObjectRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.GetObjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_obj_id(), target);
  }

  // string connection_id = 2;
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.GetObjectRequest.connection_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_connection_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.GetObjectRequest)
  return target;
}

size_t GetObjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.GetObjectRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string connection_id = 2;
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_obj_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetObjectRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.GetObjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetObjectRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetObjectRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.GetObjectRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.GetObjectRequest)
    MergeFrom(*source);
  }
}

void GetObjectRequest::MergeFrom(const GetObjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.GetObjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.connection_id().size() > 0) {

    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  if (from.obj_id() != 0) {
    _internal_set_obj_id(from._internal_obj_id());
  }
}

void GetObjectRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.GetObjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetObjectRequest::CopyFrom(const GetObjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.GetObjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetObjectRequest::IsInitialized() const {
  return true;
}

void GetObjectRequest::InternalSwap(GetObjectRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(obj_id_, other->obj_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetObjectRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetObjectResponse::InitAsDefaultInstance() {
}
class GetObjectResponse::_Internal {
 public:
};

GetObjectResponse::GetObjectResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.GetObjectResponse)
}
GetObjectResponse::GetObjectResponse(const GetObjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_object().empty()) {
    object_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.object_);
  }
  // @@protoc_insertion_point(copy_constructor:yolo_tf.GetObjectResponse)
}

void GetObjectResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetObjectResponse_yolo_2eproto.base);
  object_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetObjectResponse::~GetObjectResponse() {
  // @@protoc_insertion_point(destructor:yolo_tf.GetObjectResponse)
  SharedDtor();
}

void GetObjectResponse::SharedDtor() {
  object_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetObjectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetObjectResponse& GetObjectResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetObjectResponse_yolo_2eproto.base);
  return *internal_default_instance();
}


void GetObjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.GetObjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  object_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* GetObjectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes object = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_object();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetObjectResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.GetObjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes object = 1;
  if (this->object().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_object(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.GetObjectResponse)
  return target;
}

size_t GetObjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.GetObjectResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes object = 1;
  if (this->object().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_object());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetObjectResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.GetObjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetObjectResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetObjectResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.GetObjectResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.GetObjectResponse)
    MergeFrom(*source);
  }
}

void GetObjectResponse::MergeFrom(const GetObjectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.GetObjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.object().size() > 0) {

    object_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.object_);
  }
}

void GetObjectResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.GetObjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetObjectResponse::CopyFrom(const GetObjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.GetObjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetObjectResponse::IsInitialized() const {
  return true;
}

void GetObjectResponse::InternalSwap(GetObjectResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  object_.Swap(&other->object_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetObjectResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BatchNormRequest::InitAsDefaultInstance() {
}
class BatchNormRequest::_Internal {
 public:
};

BatchNormRequest::BatchNormRequest()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.BatchNormRequest)
}
BatchNormRequest::BatchNormRequest(const BatchNormRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_connection_id().empty()) {
    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
  // @@protoc_insertion_point(copy_constructor:yolo_tf.BatchNormRequest)
}

void BatchNormRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BatchNormRequest_yolo_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

BatchNormRequest::~BatchNormRequest() {
  // @@protoc_insertion_point(destructor:yolo_tf.BatchNormRequest)
  SharedDtor();
}

void BatchNormRequest::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BatchNormRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BatchNormRequest& BatchNormRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BatchNormRequest_yolo_2eproto.base);
  return *internal_default_instance();
}


void BatchNormRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.BatchNormRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  connection_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* BatchNormRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.BatchNormRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string connection_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_connection_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "yolo_tf.BatchNormRequest.connection_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BatchNormRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.BatchNormRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.BatchNormRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string connection_id = 2;
  if (this->connection_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_connection_id().data(), static_cast<int>(this->_internal_connection_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "yolo_tf.BatchNormRequest.connection_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_connection_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.BatchNormRequest)
  return target;
}

size_t BatchNormRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.BatchNormRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string connection_id = 2;
  if (this->connection_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_connection_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BatchNormRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.BatchNormRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchNormRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BatchNormRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.BatchNormRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.BatchNormRequest)
    MergeFrom(*source);
  }
}

void BatchNormRequest::MergeFrom(const BatchNormRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.BatchNormRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.connection_id().size() > 0) {

    connection_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.connection_id_);
  }
}

void BatchNormRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.BatchNormRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchNormRequest::CopyFrom(const BatchNormRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.BatchNormRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchNormRequest::IsInitialized() const {
  return true;
}

void BatchNormRequest::InternalSwap(BatchNormRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  connection_id_.Swap(&other->connection_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata BatchNormRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void BatchNormResponse::InitAsDefaultInstance() {
}
class BatchNormResponse::_Internal {
 public:
};

BatchNormResponse::BatchNormResponse()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:yolo_tf.BatchNormResponse)
}
BatchNormResponse::BatchNormResponse(const BatchNormResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  obj_id_ = from.obj_id_;
  // @@protoc_insertion_point(copy_constructor:yolo_tf.BatchNormResponse)
}

void BatchNormResponse::SharedCtor() {
  obj_id_ = PROTOBUF_ULONGLONG(0);
}

BatchNormResponse::~BatchNormResponse() {
  // @@protoc_insertion_point(destructor:yolo_tf.BatchNormResponse)
  SharedDtor();
}

void BatchNormResponse::SharedDtor() {
}

void BatchNormResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BatchNormResponse& BatchNormResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BatchNormResponse_yolo_2eproto.base);
  return *internal_default_instance();
}


void BatchNormResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:yolo_tf.BatchNormResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  obj_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear();
}

const char* BatchNormResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 obj_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          obj_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BatchNormResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:yolo_tf.BatchNormResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_obj_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:yolo_tf.BatchNormResponse)
  return target;
}

size_t BatchNormResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:yolo_tf.BatchNormResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 obj_id = 1;
  if (this->obj_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_obj_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BatchNormResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:yolo_tf.BatchNormResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchNormResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BatchNormResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:yolo_tf.BatchNormResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:yolo_tf.BatchNormResponse)
    MergeFrom(*source);
  }
}

void BatchNormResponse::MergeFrom(const BatchNormResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:yolo_tf.BatchNormResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.obj_id() != 0) {
    _internal_set_obj_id(from._internal_obj_id());
  }
}

void BatchNormResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:yolo_tf.BatchNormResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchNormResponse::CopyFrom(const BatchNormResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:yolo_tf.BatchNormResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchNormResponse::IsInitialized() const {
  return true;
}

void BatchNormResponse::InternalSwap(BatchNormResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(obj_id_, other->obj_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BatchNormResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace yolo_tf
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::yolo_tf::ConnectRequest* Arena::CreateMaybeMessage< ::yolo_tf::ConnectRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::ConnectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::ConnectResponse* Arena::CreateMaybeMessage< ::yolo_tf::ConnectResponse >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::ConnectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::DisconnectRequest* Arena::CreateMaybeMessage< ::yolo_tf::DisconnectRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::DisconnectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::DisconnectResponse* Arena::CreateMaybeMessage< ::yolo_tf::DisconnectResponse >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::DisconnectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::HelloRequest* Arena::CreateMaybeMessage< ::yolo_tf::HelloRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::HelloRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::HelloReply* Arena::CreateMaybeMessage< ::yolo_tf::HelloReply >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::HelloReply >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::CallRequest_ObjId* Arena::CreateMaybeMessage< ::yolo_tf::CallRequest_ObjId >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::CallRequest_ObjId >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::CallRequest* Arena::CreateMaybeMessage< ::yolo_tf::CallRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::CallRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::CallResponse* Arena::CreateMaybeMessage< ::yolo_tf::CallResponse >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::CallResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::SlicingRequest* Arena::CreateMaybeMessage< ::yolo_tf::SlicingRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::SlicingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::SlicingResponse* Arena::CreateMaybeMessage< ::yolo_tf::SlicingResponse >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::SlicingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::ConstantRequest* Arena::CreateMaybeMessage< ::yolo_tf::ConstantRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::ConstantRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::ConstantResponse* Arena::CreateMaybeMessage< ::yolo_tf::ConstantResponse >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::ConstantResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::DeviceType* Arena::CreateMaybeMessage< ::yolo_tf::DeviceType >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::DeviceType >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::PhysicalDevices_PhysicalDevice* Arena::CreateMaybeMessage< ::yolo_tf::PhysicalDevices_PhysicalDevice >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::PhysicalDevices_PhysicalDevice >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::PhysicalDevices* Arena::CreateMaybeMessage< ::yolo_tf::PhysicalDevices >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::PhysicalDevices >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::DecodeImageRequest* Arena::CreateMaybeMessage< ::yolo_tf::DecodeImageRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::DecodeImageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::DecodeImageResponse* Arena::CreateMaybeMessage< ::yolo_tf::DecodeImageResponse >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::DecodeImageResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::ExpandDemensionRequest* Arena::CreateMaybeMessage< ::yolo_tf::ExpandDemensionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::ExpandDemensionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::ExpandDemensionResponse* Arena::CreateMaybeMessage< ::yolo_tf::ExpandDemensionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::ExpandDemensionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::InputRequest* Arena::CreateMaybeMessage< ::yolo_tf::InputRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::InputRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::InputResponse* Arena::CreateMaybeMessage< ::yolo_tf::InputResponse >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::InputResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::ModelRequest* Arena::CreateMaybeMessage< ::yolo_tf::ModelRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::ModelRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::ModelResponse* Arena::CreateMaybeMessage< ::yolo_tf::ModelResponse >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::ModelResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::ZeroPadding2DRequest* Arena::CreateMaybeMessage< ::yolo_tf::ZeroPadding2DRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::ZeroPadding2DRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::ZeroPadding2DResponse* Arena::CreateMaybeMessage< ::yolo_tf::ZeroPadding2DResponse >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::ZeroPadding2DResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::Conv2DRequest* Arena::CreateMaybeMessage< ::yolo_tf::Conv2DRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::Conv2DRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::Conv2DResponse* Arena::CreateMaybeMessage< ::yolo_tf::Conv2DResponse >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::Conv2DResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::LeakyReluRequest* Arena::CreateMaybeMessage< ::yolo_tf::LeakyReluRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::LeakyReluRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::LeakyReluResponse* Arena::CreateMaybeMessage< ::yolo_tf::LeakyReluResponse >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::LeakyReluResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::AddRequest* Arena::CreateMaybeMessage< ::yolo_tf::AddRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::AddRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::AddResponse* Arena::CreateMaybeMessage< ::yolo_tf::AddResponse >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::AddResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::LambdaRequest* Arena::CreateMaybeMessage< ::yolo_tf::LambdaRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::LambdaRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::LambdaResponse* Arena::CreateMaybeMessage< ::yolo_tf::LambdaResponse >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::LambdaResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::UpSampling2DRequest* Arena::CreateMaybeMessage< ::yolo_tf::UpSampling2DRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::UpSampling2DRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::UpSampling2DResponse* Arena::CreateMaybeMessage< ::yolo_tf::UpSampling2DResponse >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::UpSampling2DResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::ConcatenateRequest* Arena::CreateMaybeMessage< ::yolo_tf::ConcatenateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::ConcatenateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::ContcatenateResponse* Arena::CreateMaybeMessage< ::yolo_tf::ContcatenateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::ContcatenateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::l2Request* Arena::CreateMaybeMessage< ::yolo_tf::l2Request >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::l2Request >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::l2Response* Arena::CreateMaybeMessage< ::yolo_tf::l2Response >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::l2Response >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::ImageResizeRequest* Arena::CreateMaybeMessage< ::yolo_tf::ImageResizeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::ImageResizeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::ImageResizeResponse* Arena::CreateMaybeMessage< ::yolo_tf::ImageResizeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::ImageResizeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::TensorShapeRequest* Arena::CreateMaybeMessage< ::yolo_tf::TensorShapeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::TensorShapeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::TensorShapeResponse* Arena::CreateMaybeMessage< ::yolo_tf::TensorShapeResponse >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::TensorShapeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::LoadWeightsRequest* Arena::CreateMaybeMessage< ::yolo_tf::LoadWeightsRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::LoadWeightsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::LoadWeightsResponse* Arena::CreateMaybeMessage< ::yolo_tf::LoadWeightsResponse >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::LoadWeightsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::ExpectPartialRequest* Arena::CreateMaybeMessage< ::yolo_tf::ExpectPartialRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::ExpectPartialRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::ExpectPartialResponse* Arena::CreateMaybeMessage< ::yolo_tf::ExpectPartialResponse >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::ExpectPartialResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::DivideRequest* Arena::CreateMaybeMessage< ::yolo_tf::DivideRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::DivideRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::DivideResponse* Arena::CreateMaybeMessage< ::yolo_tf::DivideResponse >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::DivideResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::IndexingRequest* Arena::CreateMaybeMessage< ::yolo_tf::IndexingRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::IndexingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::IndexingResponse* Arena::CreateMaybeMessage< ::yolo_tf::IndexingResponse >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::IndexingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::TensorToNumpyRequest* Arena::CreateMaybeMessage< ::yolo_tf::TensorToNumpyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::TensorToNumpyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::TensorToNumPyResponse* Arena::CreateMaybeMessage< ::yolo_tf::TensorToNumPyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::TensorToNumPyResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::GetObjectRequest* Arena::CreateMaybeMessage< ::yolo_tf::GetObjectRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::GetObjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::GetObjectResponse* Arena::CreateMaybeMessage< ::yolo_tf::GetObjectResponse >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::GetObjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::BatchNormRequest* Arena::CreateMaybeMessage< ::yolo_tf::BatchNormRequest >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::BatchNormRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::yolo_tf::BatchNormResponse* Arena::CreateMaybeMessage< ::yolo_tf::BatchNormResponse >(Arena* arena) {
  return Arena::CreateInternal< ::yolo_tf::BatchNormResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
