# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto import exp_pb2 as proto_dot_exp__pb2


class ExperimentServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Init = channel.unary_unary(
                '/exp.ExperimentService/Init',
                request_serializer=proto_dot_exp__pb2.InitRequest.SerializeToString,
                response_deserializer=proto_dot_exp__pb2.InitResponse.FromString,
                )
        self.Echo = channel.unary_unary(
                '/exp.ExperimentService/Echo',
                request_serializer=proto_dot_exp__pb2.EchoRequest.SerializeToString,
                response_deserializer=proto_dot_exp__pb2.EchoResponse.FromString,
                )
        self.SendFilePath = channel.unary_unary(
                '/exp.ExperimentService/SendFilePath',
                request_serializer=proto_dot_exp__pb2.SendFilePathRequest.SerializeToString,
                response_deserializer=proto_dot_exp__pb2.SendFilePathResponse.FromString,
                )
        self.SendFileBinary = channel.unary_unary(
                '/exp.ExperimentService/SendFileBinary',
                request_serializer=proto_dot_exp__pb2.SendFileBinaryRequest.SerializeToString,
                response_deserializer=proto_dot_exp__pb2.SendFileBinaryResponse.FromString,
                )
        self.ServerIOLatency = channel.unary_unary(
                '/exp.ExperimentService/ServerIOLatency',
                request_serializer=proto_dot_exp__pb2.ServerIOLatencyRequest.SerializeToString,
                response_deserializer=proto_dot_exp__pb2.ServerIOLatencyResponse.FromString,
                )
        self.SendViaShmem = channel.unary_unary(
                '/exp.ExperimentService/SendViaShmem',
                request_serializer=proto_dot_exp__pb2.SendViaShmemRequest.SerializeToString,
                response_deserializer=proto_dot_exp__pb2.SendViaShmemResponse.FromString,
                )
        self.SendViaShmem_ExcludeIO = channel.unary_unary(
                '/exp.ExperimentService/SendViaShmem_ExcludeIO',
                request_serializer=proto_dot_exp__pb2.SendViaShmem_ExcludeIORequest.SerializeToString,
                response_deserializer=proto_dot_exp__pb2.SendViaShmem_ExcludeIOResponse.FromString,
                )
        self.NOP = channel.unary_unary(
                '/exp.ExperimentService/NOP',
                request_serializer=proto_dot_exp__pb2.NOPRequest.SerializeToString,
                response_deserializer=proto_dot_exp__pb2.NOPResponse.FromString,
                )


class ExperimentServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Init(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Echo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendFilePath(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendFileBinary(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ServerIOLatency(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendViaShmem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendViaShmem_ExcludeIO(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NOP(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ExperimentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Init': grpc.unary_unary_rpc_method_handler(
                    servicer.Init,
                    request_deserializer=proto_dot_exp__pb2.InitRequest.FromString,
                    response_serializer=proto_dot_exp__pb2.InitResponse.SerializeToString,
            ),
            'Echo': grpc.unary_unary_rpc_method_handler(
                    servicer.Echo,
                    request_deserializer=proto_dot_exp__pb2.EchoRequest.FromString,
                    response_serializer=proto_dot_exp__pb2.EchoResponse.SerializeToString,
            ),
            'SendFilePath': grpc.unary_unary_rpc_method_handler(
                    servicer.SendFilePath,
                    request_deserializer=proto_dot_exp__pb2.SendFilePathRequest.FromString,
                    response_serializer=proto_dot_exp__pb2.SendFilePathResponse.SerializeToString,
            ),
            'SendFileBinary': grpc.unary_unary_rpc_method_handler(
                    servicer.SendFileBinary,
                    request_deserializer=proto_dot_exp__pb2.SendFileBinaryRequest.FromString,
                    response_serializer=proto_dot_exp__pb2.SendFileBinaryResponse.SerializeToString,
            ),
            'ServerIOLatency': grpc.unary_unary_rpc_method_handler(
                    servicer.ServerIOLatency,
                    request_deserializer=proto_dot_exp__pb2.ServerIOLatencyRequest.FromString,
                    response_serializer=proto_dot_exp__pb2.ServerIOLatencyResponse.SerializeToString,
            ),
            'SendViaShmem': grpc.unary_unary_rpc_method_handler(
                    servicer.SendViaShmem,
                    request_deserializer=proto_dot_exp__pb2.SendViaShmemRequest.FromString,
                    response_serializer=proto_dot_exp__pb2.SendViaShmemResponse.SerializeToString,
            ),
            'SendViaShmem_ExcludeIO': grpc.unary_unary_rpc_method_handler(
                    servicer.SendViaShmem_ExcludeIO,
                    request_deserializer=proto_dot_exp__pb2.SendViaShmem_ExcludeIORequest.FromString,
                    response_serializer=proto_dot_exp__pb2.SendViaShmem_ExcludeIOResponse.SerializeToString,
            ),
            'NOP': grpc.unary_unary_rpc_method_handler(
                    servicer.NOP,
                    request_deserializer=proto_dot_exp__pb2.NOPRequest.FromString,
                    response_serializer=proto_dot_exp__pb2.NOPResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'exp.ExperimentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ExperimentService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Init(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/exp.ExperimentService/Init',
            proto_dot_exp__pb2.InitRequest.SerializeToString,
            proto_dot_exp__pb2.InitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Echo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/exp.ExperimentService/Echo',
            proto_dot_exp__pb2.EchoRequest.SerializeToString,
            proto_dot_exp__pb2.EchoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendFilePath(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/exp.ExperimentService/SendFilePath',
            proto_dot_exp__pb2.SendFilePathRequest.SerializeToString,
            proto_dot_exp__pb2.SendFilePathResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendFileBinary(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/exp.ExperimentService/SendFileBinary',
            proto_dot_exp__pb2.SendFileBinaryRequest.SerializeToString,
            proto_dot_exp__pb2.SendFileBinaryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ServerIOLatency(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/exp.ExperimentService/ServerIOLatency',
            proto_dot_exp__pb2.ServerIOLatencyRequest.SerializeToString,
            proto_dot_exp__pb2.ServerIOLatencyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendViaShmem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/exp.ExperimentService/SendViaShmem',
            proto_dot_exp__pb2.SendViaShmemRequest.SerializeToString,
            proto_dot_exp__pb2.SendViaShmemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendViaShmem_ExcludeIO(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/exp.ExperimentService/SendViaShmem_ExcludeIO',
            proto_dot_exp__pb2.SendViaShmem_ExcludeIORequest.SerializeToString,
            proto_dot_exp__pb2.SendViaShmem_ExcludeIOResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NOP(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/exp.ExperimentService/NOP',
            proto_dot_exp__pb2.NOPRequest.SerializeToString,
            proto_dot_exp__pb2.NOPResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
